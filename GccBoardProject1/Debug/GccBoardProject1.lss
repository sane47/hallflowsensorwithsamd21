
GccBoardProject1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005054  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000006c  20000000  00005054  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000200  2000006c  000050c0  0002006c  2**2
                  ALLOC
  3 .stack        00002004  2000026c  000052c0  0002006c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
  6 .debug_info   00020045  00000000  00000000  000200ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000030ff  00000000  00000000  00040132  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00003b3d  00000000  00000000  00043231  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000410  00000000  00000000  00046d6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000004f0  00000000  00000000  0004717e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001a661  00000000  00000000  0004766e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00009a30  00000000  00000000  00061ccf  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0008f0bf  00000000  00000000  0006b6ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001220  00000000  00000000  000fa7c0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	70 22 00 20 95 11 00 00 91 11 00 00 91 11 00 00     p". ............
	...
      2c:	91 11 00 00 00 00 00 00 00 00 00 00 91 11 00 00     ................
      3c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      4c:	91 11 00 00 61 01 00 00 91 11 00 00 91 11 00 00     ....a...........
      5c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      6c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      7c:	91 11 00 00 91 11 00 00 91 11 00 00 9d 06 00 00     ................
      8c:	ad 06 00 00 bd 06 00 00 cd 06 00 00 dd 06 00 00     ................
      9c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      ac:	91 11 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	2000006c 	.word	0x2000006c
      d4:	00000000 	.word	0x00000000
      d8:	00005054 	.word	0x00005054

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000070 	.word	0x20000070
     108:	00005054 	.word	0x00005054
     10c:	00005054 	.word	0x00005054
     110:	00000000 	.word	0x00000000

00000114 <extint_register_callback>:
	/* Sanity check arguments */
	Assert(callback);

	if (type != EXTINT_CALLBACK_TYPE_DETECT) {
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     114:	2317      	movs	r3, #23
	if (type != EXTINT_CALLBACK_TYPE_DETECT) {
     116:	2a00      	cmp	r2, #0
     118:	d001      	beq.n	11e <extint_register_callback+0xa>
	} else if (_extint_dev.callbacks[channel] == callback) {
		return STATUS_OK;
	}

	return STATUS_ERR_ALREADY_INITIALIZED;
}
     11a:	0018      	movs	r0, r3
     11c:	4770      	bx	lr
	if (_extint_dev.callbacks[channel] == NULL) {
     11e:	008b      	lsls	r3, r1, #2
     120:	4a06      	ldr	r2, [pc, #24]	; (13c <extint_register_callback+0x28>)
     122:	589b      	ldr	r3, [r3, r2]
     124:	2b00      	cmp	r3, #0
     126:	d003      	beq.n	130 <extint_register_callback+0x1c>
	} else if (_extint_dev.callbacks[channel] == callback) {
     128:	4283      	cmp	r3, r0
     12a:	d005      	beq.n	138 <extint_register_callback+0x24>
	return STATUS_ERR_ALREADY_INITIALIZED;
     12c:	231d      	movs	r3, #29
     12e:	e7f4      	b.n	11a <extint_register_callback+0x6>
		_extint_dev.callbacks[channel] = callback;
     130:	0089      	lsls	r1, r1, #2
     132:	5088      	str	r0, [r1, r2]
		return STATUS_OK;
     134:	2300      	movs	r3, #0
     136:	e7f0      	b.n	11a <extint_register_callback+0x6>
		return STATUS_OK;
     138:	2300      	movs	r3, #0
     13a:	e7ee      	b.n	11a <extint_register_callback+0x6>
     13c:	200000c4 	.word	0x200000c4

00000140 <extint_chan_enable_callback>:

		eic->INTENSET.reg = (1UL << channel);
	}
	else {
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     140:	2317      	movs	r3, #23
	if (type == EXTINT_CALLBACK_TYPE_DETECT) {
     142:	2900      	cmp	r1, #0
     144:	d001      	beq.n	14a <extint_chan_enable_callback+0xa>
	}

	return STATUS_OK;
}
     146:	0018      	movs	r0, r3
     148:	4770      	bx	lr
		Eic *const eics[EIC_INST_NUM] = EIC_INSTS;

		return eics[eic_index];
	} else {
		Assert(false);
		return NULL;
     14a:	2200      	movs	r2, #0
	if (eic_index < EIC_INST_NUM) {
     14c:	281f      	cmp	r0, #31
     14e:	d800      	bhi.n	152 <extint_chan_enable_callback+0x12>
		return eics[eic_index];
     150:	4a02      	ldr	r2, [pc, #8]	; (15c <extint_chan_enable_callback+0x1c>)
		eic->INTENSET.reg = (1UL << channel);
     152:	2301      	movs	r3, #1
     154:	4083      	lsls	r3, r0
     156:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
     158:	2300      	movs	r3, #0
     15a:	e7f4      	b.n	146 <extint_chan_enable_callback+0x6>
     15c:	40001800 	.word	0x40001800

00000160 <EIC_Handler>:
	return _current_channel;
}

/** Handler for the EXTINT hardware module interrupt. */
void EIC_Handler(void)
{
     160:	b570      	push	{r4, r5, r6, lr}
	/* Find any triggered channels, run associated callback handlers */
	for (_current_channel = 0; _current_channel < EIC_NUMBER_OF_INTERRUPTS ; _current_channel++) {
     162:	2200      	movs	r2, #0
     164:	4b10      	ldr	r3, [pc, #64]	; (1a8 <EIC_Handler+0x48>)
     166:	701a      	strb	r2, [r3, #0]
     168:	2300      	movs	r3, #0
     16a:	4910      	ldr	r1, [pc, #64]	; (1ac <EIC_Handler+0x4c>)
 */
static inline bool extint_chan_is_detected(
		const uint8_t channel)
{
	Eic *const eic_module = _extint_get_eic_from_channel(channel);
	uint32_t eic_mask   = (1UL << (channel % 32));
     16c:	251f      	movs	r5, #31
		if (extint_chan_is_detected(_current_channel)) {
			/* Clear flag */
			extint_chan_clear_detected(_current_channel);
			/* Find any associated callback entries in the callback table */
			if (_extint_dev.callbacks[_current_channel] != NULL) {
     16e:	4e10      	ldr	r6, [pc, #64]	; (1b0 <EIC_Handler+0x50>)
	for (_current_channel = 0; _current_channel < EIC_NUMBER_OF_INTERRUPTS ; _current_channel++) {
     170:	4c0d      	ldr	r4, [pc, #52]	; (1a8 <EIC_Handler+0x48>)
     172:	e00a      	b.n	18a <EIC_Handler+0x2a>
		return eics[eic_index];
     174:	490d      	ldr	r1, [pc, #52]	; (1ac <EIC_Handler+0x4c>)
     176:	e008      	b.n	18a <EIC_Handler+0x2a>
     178:	7823      	ldrb	r3, [r4, #0]
     17a:	3301      	adds	r3, #1
     17c:	b2db      	uxtb	r3, r3
     17e:	7023      	strb	r3, [r4, #0]
     180:	2b0f      	cmp	r3, #15
     182:	d810      	bhi.n	1a6 <EIC_Handler+0x46>
		return NULL;
     184:	2100      	movs	r1, #0
	if (eic_index < EIC_INST_NUM) {
     186:	2b1f      	cmp	r3, #31
     188:	d9f4      	bls.n	174 <EIC_Handler+0x14>
	uint32_t eic_mask   = (1UL << (channel % 32));
     18a:	0028      	movs	r0, r5
     18c:	4018      	ands	r0, r3
     18e:	2201      	movs	r2, #1
     190:	4082      	lsls	r2, r0

	return (eic_module->INTFLAG.reg & eic_mask);
     192:	6908      	ldr	r0, [r1, #16]
		if (extint_chan_is_detected(_current_channel)) {
     194:	4210      	tst	r0, r2
     196:	d0ef      	beq.n	178 <EIC_Handler+0x18>
		const uint8_t channel)
{
	Eic *const eic_module = _extint_get_eic_from_channel(channel);
	uint32_t eic_mask   = (1UL << (channel % 32));

	eic_module->INTFLAG.reg = eic_mask;
     198:	610a      	str	r2, [r1, #16]
			if (_extint_dev.callbacks[_current_channel] != NULL) {
     19a:	009b      	lsls	r3, r3, #2
     19c:	599b      	ldr	r3, [r3, r6]
     19e:	2b00      	cmp	r3, #0
     1a0:	d0ea      	beq.n	178 <EIC_Handler+0x18>
				/* Run the registered callback */
				_extint_dev.callbacks[_current_channel]();
     1a2:	4798      	blx	r3
     1a4:	e7e8      	b.n	178 <EIC_Handler+0x18>
			}
		}
	}
}
     1a6:	bd70      	pop	{r4, r5, r6, pc}
     1a8:	200000c0 	.word	0x200000c0
     1ac:	40001800 	.word	0x40001800
     1b0:	200000c4 	.word	0x200000c4

000001b4 <_extint_enable>:
{
	Eic *const eics[EIC_INST_NUM] = EIC_INSTS;

	/* Enable all EIC hardware modules. */
	for (uint32_t i = 0; i < EIC_INST_NUM; i++) {
		eics[i]->CTRL.reg |= EIC_CTRL_ENABLE;
     1b4:	4a04      	ldr	r2, [pc, #16]	; (1c8 <_extint_enable+0x14>)
     1b6:	7813      	ldrb	r3, [r2, #0]
     1b8:	2102      	movs	r1, #2
     1ba:	430b      	orrs	r3, r1
     1bc:	7013      	strb	r3, [r2, #0]
		if (eics[i]->STATUS.reg & EIC_STATUS_SYNCBUSY) {
     1be:	7853      	ldrb	r3, [r2, #1]
     1c0:	b25b      	sxtb	r3, r3
     1c2:	2b00      	cmp	r3, #0
     1c4:	dbfb      	blt.n	1be <_extint_enable+0xa>
	}

	while (extint_is_syncing()) {
		/* Wait for all hardware modules to complete synchronization */
	}
}
     1c6:	4770      	bx	lr
     1c8:	40001800 	.word	0x40001800

000001cc <_system_extint_init>:
{
     1cc:	b500      	push	{lr}
     1ce:	b083      	sub	sp, #12
		const enum system_clock_apb_bus bus,
		const uint32_t mask)
{
	switch (bus) {
		case SYSTEM_CLOCK_APB_APBA:
			PM->APBAMASK.reg |= mask;
     1d0:	4a12      	ldr	r2, [pc, #72]	; (21c <_system_extint_init+0x50>)
     1d2:	6993      	ldr	r3, [r2, #24]
     1d4:	2140      	movs	r1, #64	; 0x40
     1d6:	430b      	orrs	r3, r1
     1d8:	6193      	str	r3, [r2, #24]
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->source_generator = GCLK_GENERATOR_0;
     1da:	a901      	add	r1, sp, #4
     1dc:	2300      	movs	r3, #0
     1de:	700b      	strb	r3, [r1, #0]
	system_gclk_chan_set_config(EIC_GCLK_ID, &gclk_chan_conf);
     1e0:	2005      	movs	r0, #5
     1e2:	4b0f      	ldr	r3, [pc, #60]	; (220 <_system_extint_init+0x54>)
     1e4:	4798      	blx	r3
	system_gclk_chan_enable(EIC_GCLK_ID);
     1e6:	2005      	movs	r0, #5
     1e8:	4b0e      	ldr	r3, [pc, #56]	; (224 <_system_extint_init+0x58>)
     1ea:	4798      	blx	r3
		eics[i]->CTRL.reg |= EIC_CTRL_SWRST;
     1ec:	4a0e      	ldr	r2, [pc, #56]	; (228 <_system_extint_init+0x5c>)
     1ee:	7813      	ldrb	r3, [r2, #0]
     1f0:	2101      	movs	r1, #1
     1f2:	430b      	orrs	r3, r1
     1f4:	7013      	strb	r3, [r2, #0]
		if (eics[i]->STATUS.reg & EIC_STATUS_SYNCBUSY) {
     1f6:	7853      	ldrb	r3, [r2, #1]
     1f8:	b25b      	sxtb	r3, r3
     1fa:	2b00      	cmp	r3, #0
     1fc:	dbfb      	blt.n	1f6 <_system_extint_init+0x2a>
     1fe:	4b0b      	ldr	r3, [pc, #44]	; (22c <_system_extint_init+0x60>)
     200:	0019      	movs	r1, r3
     202:	3140      	adds	r1, #64	; 0x40
		_extint_dev.callbacks[j] = NULL;
     204:	2200      	movs	r2, #0
     206:	c304      	stmia	r3!, {r2}
	for (uint8_t j = 0; j < EIC_NUMBER_OF_INTERRUPTS; j++) {
     208:	4299      	cmp	r1, r3
     20a:	d1fc      	bne.n	206 <_system_extint_init+0x3a>
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     20c:	2210      	movs	r2, #16
     20e:	4b08      	ldr	r3, [pc, #32]	; (230 <_system_extint_init+0x64>)
     210:	601a      	str	r2, [r3, #0]
	_extint_enable();
     212:	4b08      	ldr	r3, [pc, #32]	; (234 <_system_extint_init+0x68>)
     214:	4798      	blx	r3
}
     216:	b003      	add	sp, #12
     218:	bd00      	pop	{pc}
     21a:	46c0      	nop			; (mov r8, r8)
     21c:	40000400 	.word	0x40000400
     220:	00001039 	.word	0x00001039
     224:	00000fad 	.word	0x00000fad
     228:	40001800 	.word	0x40001800
     22c:	200000c4 	.word	0x200000c4
     230:	e000e100 	.word	0xe000e100
     234:	000001b5 	.word	0x000001b5

00000238 <extint_chan_get_config_defaults>:
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->gpio_pin            = 0;
     238:	2300      	movs	r3, #0
     23a:	6003      	str	r3, [r0, #0]
	config->gpio_pin_mux        = 0;
     23c:	6043      	str	r3, [r0, #4]
	config->gpio_pin_pull       = EXTINT_PULL_UP;
     23e:	2201      	movs	r2, #1
     240:	7202      	strb	r2, [r0, #8]
	config->wake_if_sleeping    = true;
     242:	7242      	strb	r2, [r0, #9]
	config->filter_input_signal = false;
     244:	7283      	strb	r3, [r0, #10]
	config->detection_criteria  = EXTINT_DETECT_FALLING;
     246:	3302      	adds	r3, #2
     248:	72c3      	strb	r3, [r0, #11]
}
     24a:	4770      	bx	lr

0000024c <extint_chan_set_config>:

 */
void extint_chan_set_config(
		const uint8_t channel,
		const struct extint_chan_conf *const config)
{
     24c:	b5f0      	push	{r4, r5, r6, r7, lr}
     24e:	b083      	sub	sp, #12
     250:	0005      	movs	r5, r0
     252:	000c      	movs	r4, r1
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     254:	a901      	add	r1, sp, #4
     256:	2300      	movs	r3, #0
     258:	704b      	strb	r3, [r1, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
	config->powersave    = false;
     25a:	70cb      	strb	r3, [r1, #3]
			config->detection_criteria)));

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = config->gpio_pin_mux;
     25c:	7923      	ldrb	r3, [r4, #4]
     25e:	700b      	strb	r3, [r1, #0]
	pinmux_config.direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->gpio_pin_pull;
     260:	7a23      	ldrb	r3, [r4, #8]
     262:	708b      	strb	r3, [r1, #2]
	system_pinmux_pin_set_config(config->gpio_pin, &pinmux_config);
     264:	7820      	ldrb	r0, [r4, #0]
     266:	4b15      	ldr	r3, [pc, #84]	; (2bc <extint_chan_set_config+0x70>)
     268:	4798      	blx	r3
		return NULL;
     26a:	2000      	movs	r0, #0
	if (eic_index < EIC_INST_NUM) {
     26c:	2d1f      	cmp	r5, #31
     26e:	d800      	bhi.n	272 <extint_chan_set_config+0x26>
		return eics[eic_index];
     270:	4813      	ldr	r0, [pc, #76]	; (2c0 <extint_chan_set_config+0x74>)

	/* Get a pointer to the module hardware instance */
	Eic *const EIC_module = _extint_get_eic_from_channel(channel);

	uint32_t config_pos = (4 * (channel % 8));
     272:	2207      	movs	r2, #7
     274:	402a      	ands	r2, r5
     276:	0092      	lsls	r2, r2, #2
	uint32_t new_config;

	/* Determine the channel's new edge detection configuration */
	new_config = (config->detection_criteria << EIC_CONFIG_SENSE0_Pos);
     278:	7ae7      	ldrb	r7, [r4, #11]

	/* Enable the hardware signal filter if requested in the config */
	if (config->filter_input_signal) {
     27a:	7aa3      	ldrb	r3, [r4, #10]
     27c:	2b00      	cmp	r3, #0
     27e:	d001      	beq.n	284 <extint_chan_set_config+0x38>
     280:	2308      	movs	r3, #8
     282:	431f      	orrs	r7, r3
     284:	08eb      	lsrs	r3, r5, #3
     286:	009b      	lsls	r3, r3, #2
     288:	18c3      	adds	r3, r0, r3
		new_config |= EIC_CONFIG_FILTEN0;
	}

	/* Clear the existing and set the new channel configuration */
	EIC_module->CONFIG[channel / 8].reg
		= (EIC_module->CONFIG[channel / 8].reg &
     28a:	6999      	ldr	r1, [r3, #24]
			~((EIC_CONFIG_SENSE0_Msk | EIC_CONFIG_FILTEN0) << config_pos)) |
     28c:	260f      	movs	r6, #15
     28e:	4096      	lsls	r6, r2
		= (EIC_module->CONFIG[channel / 8].reg &
     290:	43b1      	bics	r1, r6
			(new_config << config_pos);
     292:	4097      	lsls	r7, r2
     294:	003a      	movs	r2, r7
			~((EIC_CONFIG_SENSE0_Msk | EIC_CONFIG_FILTEN0) << config_pos)) |
     296:	430a      	orrs	r2, r1
		= (EIC_module->CONFIG[channel / 8].reg &
     298:	619a      	str	r2, [r3, #24]

	/* Set the channel's new wake up mode setting */
	if (config->wake_if_sleeping) {
     29a:	7a63      	ldrb	r3, [r4, #9]
     29c:	2b00      	cmp	r3, #0
     29e:	d106      	bne.n	2ae <extint_chan_set_config+0x62>
		EIC_module->WAKEUP.reg |=  (1UL << channel);
	} else {
		EIC_module->WAKEUP.reg &= ~(1UL << channel);
     2a0:	6943      	ldr	r3, [r0, #20]
     2a2:	2201      	movs	r2, #1
     2a4:	40aa      	lsls	r2, r5
     2a6:	4393      	bics	r3, r2
     2a8:	6143      	str	r3, [r0, #20]
	}
}
     2aa:	b003      	add	sp, #12
     2ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
		EIC_module->WAKEUP.reg |=  (1UL << channel);
     2ae:	6942      	ldr	r2, [r0, #20]
     2b0:	2301      	movs	r3, #1
     2b2:	40ab      	lsls	r3, r5
     2b4:	4313      	orrs	r3, r2
     2b6:	6143      	str	r3, [r0, #20]
     2b8:	e7f7      	b.n	2aa <extint_chan_set_config+0x5e>
     2ba:	46c0      	nop			; (mov r8, r8)
     2bc:	00001131 	.word	0x00001131
     2c0:	40001800 	.word	0x40001800

000002c4 <long_division>:
/**
 * \internal Calculate 64 bit division, ref can be found in
 * http://en.wikipedia.org/wiki/Division_algorithm#Long_division
 */
static uint64_t long_division(uint64_t n, uint64_t d)
{
     2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
     2c6:	46de      	mov	lr, fp
     2c8:	4657      	mov	r7, sl
     2ca:	464e      	mov	r6, r9
     2cc:	4645      	mov	r5, r8
     2ce:	b5e0      	push	{r5, r6, r7, lr}
     2d0:	b087      	sub	sp, #28
     2d2:	4680      	mov	r8, r0
     2d4:	9104      	str	r1, [sp, #16]
     2d6:	0016      	movs	r6, r2
     2d8:	001f      	movs	r7, r3
	int32_t i;
	uint64_t q = 0, r = 0, bit_shift;
     2da:	2200      	movs	r2, #0
     2dc:	2300      	movs	r3, #0
     2de:	2100      	movs	r1, #0
     2e0:	468b      	mov	fp, r1
	for (i = 63; i >= 0; i--) {
     2e2:	243f      	movs	r4, #63	; 0x3f
		bit_shift = (uint64_t)1 << i;
     2e4:	2001      	movs	r0, #1
     2e6:	0021      	movs	r1, r4
     2e8:	9600      	str	r6, [sp, #0]
     2ea:	9701      	str	r7, [sp, #4]
     2ec:	465c      	mov	r4, fp
     2ee:	9403      	str	r4, [sp, #12]
     2f0:	4644      	mov	r4, r8
     2f2:	9405      	str	r4, [sp, #20]
     2f4:	e013      	b.n	31e <long_division+0x5a>
     2f6:	2420      	movs	r4, #32
     2f8:	1a64      	subs	r4, r4, r1
     2fa:	0005      	movs	r5, r0
     2fc:	40e5      	lsrs	r5, r4
     2fe:	46a8      	mov	r8, r5
     300:	e014      	b.n	32c <long_division+0x68>
		if (n & bit_shift) {
			r |= 0x01;
		}

		if (r >= d) {
			r = r - d;
     302:	9c00      	ldr	r4, [sp, #0]
     304:	9d01      	ldr	r5, [sp, #4]
     306:	1b12      	subs	r2, r2, r4
     308:	41ab      	sbcs	r3, r5
			q |= bit_shift;
     30a:	465c      	mov	r4, fp
     30c:	464d      	mov	r5, r9
     30e:	432c      	orrs	r4, r5
     310:	46a3      	mov	fp, r4
     312:	9c03      	ldr	r4, [sp, #12]
     314:	4645      	mov	r5, r8
     316:	432c      	orrs	r4, r5
     318:	9403      	str	r4, [sp, #12]
	for (i = 63; i >= 0; i--) {
     31a:	3901      	subs	r1, #1
     31c:	d325      	bcc.n	36a <long_division+0xa6>
		bit_shift = (uint64_t)1 << i;
     31e:	2420      	movs	r4, #32
     320:	4264      	negs	r4, r4
     322:	190c      	adds	r4, r1, r4
     324:	d4e7      	bmi.n	2f6 <long_division+0x32>
     326:	0005      	movs	r5, r0
     328:	40a5      	lsls	r5, r4
     32a:	46a8      	mov	r8, r5
     32c:	0004      	movs	r4, r0
     32e:	408c      	lsls	r4, r1
     330:	46a1      	mov	r9, r4
		r = r << 1;
     332:	1892      	adds	r2, r2, r2
     334:	415b      	adcs	r3, r3
     336:	0014      	movs	r4, r2
     338:	001d      	movs	r5, r3
		if (n & bit_shift) {
     33a:	9e05      	ldr	r6, [sp, #20]
     33c:	464f      	mov	r7, r9
     33e:	403e      	ands	r6, r7
     340:	46b4      	mov	ip, r6
     342:	9e04      	ldr	r6, [sp, #16]
     344:	4647      	mov	r7, r8
     346:	403e      	ands	r6, r7
     348:	46b2      	mov	sl, r6
     34a:	4666      	mov	r6, ip
     34c:	4657      	mov	r7, sl
     34e:	433e      	orrs	r6, r7
     350:	d003      	beq.n	35a <long_division+0x96>
			r |= 0x01;
     352:	0006      	movs	r6, r0
     354:	4326      	orrs	r6, r4
     356:	0032      	movs	r2, r6
     358:	002b      	movs	r3, r5
		if (r >= d) {
     35a:	9c00      	ldr	r4, [sp, #0]
     35c:	9d01      	ldr	r5, [sp, #4]
     35e:	429d      	cmp	r5, r3
     360:	d8db      	bhi.n	31a <long_division+0x56>
     362:	d1ce      	bne.n	302 <long_division+0x3e>
     364:	4294      	cmp	r4, r2
     366:	d8d8      	bhi.n	31a <long_division+0x56>
     368:	e7cb      	b.n	302 <long_division+0x3e>
     36a:	9b03      	ldr	r3, [sp, #12]
		}
	}

	return q;
}
     36c:	4658      	mov	r0, fp
     36e:	0019      	movs	r1, r3
     370:	b007      	add	sp, #28
     372:	bc3c      	pop	{r2, r3, r4, r5}
     374:	4690      	mov	r8, r2
     376:	4699      	mov	r9, r3
     378:	46a2      	mov	sl, r4
     37a:	46ab      	mov	fp, r5
     37c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000037e <_sercom_get_sync_baud_val>:
 */
enum status_code _sercom_get_sync_baud_val(
		const uint32_t baudrate,
		const uint32_t external_clock,
		uint16_t *const baudvalue)
{
     37e:	b510      	push	{r4, lr}
	uint16_t baud_calculated = 0;
	uint32_t clock_value = external_clock;


	/* Check if baudrate is outside of valid range */
	if (baudrate > (external_clock / 2)) {
     380:	0849      	lsrs	r1, r1, #1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     382:	2340      	movs	r3, #64	; 0x40
     384:	2400      	movs	r4, #0
	if (baudrate > (external_clock / 2)) {
     386:	4281      	cmp	r1, r0
     388:	d202      	bcs.n	390 <_sercom_get_sync_baud_val+0x12>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		*baudvalue = baud_calculated;
		return STATUS_OK;
	}
}
     38a:	0018      	movs	r0, r3
     38c:	bd10      	pop	{r4, pc}
		baud_calculated++;
     38e:	001c      	movs	r4, r3
		clock_value = clock_value - baudrate;
     390:	1a09      	subs	r1, r1, r0
		baud_calculated++;
     392:	1c63      	adds	r3, r4, #1
     394:	b29b      	uxth	r3, r3
	while (clock_value >= baudrate) {
     396:	4288      	cmp	r0, r1
     398:	d9f9      	bls.n	38e <_sercom_get_sync_baud_val+0x10>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     39a:	2340      	movs	r3, #64	; 0x40
	if (baud_calculated > 0xFF) {
     39c:	2cff      	cmp	r4, #255	; 0xff
     39e:	d8f4      	bhi.n	38a <_sercom_get_sync_baud_val+0xc>
		*baudvalue = baud_calculated;
     3a0:	8014      	strh	r4, [r2, #0]
		return STATUS_OK;
     3a2:	2300      	movs	r3, #0
     3a4:	e7f1      	b.n	38a <_sercom_get_sync_baud_val+0xc>
	...

000003a8 <_sercom_get_async_baud_val>:
		const uint32_t baudrate,
		const uint32_t peripheral_clock,
		uint16_t *const baudval,
		enum sercom_asynchronous_operation_mode mode,
		enum sercom_asynchronous_sample_num sample_num)
{
     3a8:	b5f0      	push	{r4, r5, r6, r7, lr}
     3aa:	b083      	sub	sp, #12
     3ac:	000f      	movs	r7, r1
     3ae:	0016      	movs	r6, r2
     3b0:	aa08      	add	r2, sp, #32
     3b2:	7811      	ldrb	r1, [r2, #0]
	uint8_t baud_fp;
	uint32_t baud_int = 0;
	uint64_t temp1;

	/* Check if the baudrate is outside of valid range */
	if ((baudrate * sample_num) > peripheral_clock) {
     3b4:	0004      	movs	r4, r0
     3b6:	434c      	muls	r4, r1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     3b8:	2240      	movs	r2, #64	; 0x40
	if ((baudrate * sample_num) > peripheral_clock) {
     3ba:	42bc      	cmp	r4, r7
     3bc:	d902      	bls.n	3c4 <_sercom_get_async_baud_val+0x1c>
		baud_calculated = baud_int | (baud_fp << 13);
	}

	*baudval = baud_calculated;
	return STATUS_OK;
}
     3be:	0010      	movs	r0, r2
     3c0:	b003      	add	sp, #12
     3c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(mode == SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC) {
     3c4:	2b00      	cmp	r3, #0
     3c6:	d114      	bne.n	3f2 <_sercom_get_async_baud_val+0x4a>
		temp1 = ((sample_num * (uint64_t)baudrate) << SHIFT);
     3c8:	0002      	movs	r2, r0
     3ca:	0008      	movs	r0, r1
     3cc:	2100      	movs	r1, #0
     3ce:	4c19      	ldr	r4, [pc, #100]	; (434 <_sercom_get_async_baud_val+0x8c>)
     3d0:	47a0      	blx	r4
     3d2:	0001      	movs	r1, r0
		ratio = long_division(temp1, peripheral_clock);
     3d4:	003a      	movs	r2, r7
     3d6:	2300      	movs	r3, #0
     3d8:	2000      	movs	r0, #0
     3da:	4c17      	ldr	r4, [pc, #92]	; (438 <_sercom_get_async_baud_val+0x90>)
     3dc:	47a0      	blx	r4
		scale = ((uint64_t)1 << SHIFT) - ratio;
     3de:	2200      	movs	r2, #0
     3e0:	2301      	movs	r3, #1
     3e2:	1a12      	subs	r2, r2, r0
     3e4:	418b      	sbcs	r3, r1
		baud_calculated = (65536 * scale) >> SHIFT;
     3e6:	0c12      	lsrs	r2, r2, #16
     3e8:	041b      	lsls	r3, r3, #16
     3ea:	431a      	orrs	r2, r3
	*baudval = baud_calculated;
     3ec:	8032      	strh	r2, [r6, #0]
	return STATUS_OK;
     3ee:	2200      	movs	r2, #0
     3f0:	e7e5      	b.n	3be <_sercom_get_async_baud_val+0x16>
	uint64_t baud_calculated = 0;
     3f2:	2200      	movs	r2, #0
	} else if(mode == SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL) {
     3f4:	2b01      	cmp	r3, #1
     3f6:	d1f9      	bne.n	3ec <_sercom_get_async_baud_val+0x44>
		temp1 = ((uint64_t)baudrate * sample_num);
     3f8:	000a      	movs	r2, r1
     3fa:	2300      	movs	r3, #0
     3fc:	2100      	movs	r1, #0
     3fe:	4c0d      	ldr	r4, [pc, #52]	; (434 <_sercom_get_async_baud_val+0x8c>)
     400:	47a0      	blx	r4
     402:	0002      	movs	r2, r0
     404:	000b      	movs	r3, r1
     406:	9200      	str	r2, [sp, #0]
     408:	9301      	str	r3, [sp, #4]
		baud_int = long_division( peripheral_clock, temp1);
     40a:	0038      	movs	r0, r7
     40c:	2100      	movs	r1, #0
     40e:	4c0a      	ldr	r4, [pc, #40]	; (438 <_sercom_get_async_baud_val+0x90>)
     410:	47a0      	blx	r4
     412:	0005      	movs	r5, r0
		if(baud_int > BAUD_INT_MAX) {
     414:	2380      	movs	r3, #128	; 0x80
     416:	019b      	lsls	r3, r3, #6
				return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     418:	2240      	movs	r2, #64	; 0x40
		if(baud_int > BAUD_INT_MAX) {
     41a:	4298      	cmp	r0, r3
     41c:	d8cf      	bhi.n	3be <_sercom_get_async_baud_val+0x16>
		temp1 = long_division( 8 * (uint64_t)peripheral_clock, temp1);
     41e:	0f79      	lsrs	r1, r7, #29
     420:	00f8      	lsls	r0, r7, #3
     422:	9a00      	ldr	r2, [sp, #0]
     424:	9b01      	ldr	r3, [sp, #4]
     426:	47a0      	blx	r4
		baud_fp = temp1 - 8 * baud_int;
     428:	00ea      	lsls	r2, r5, #3
     42a:	1a82      	subs	r2, r0, r2
		baud_calculated = baud_int | (baud_fp << 13);
     42c:	b2d2      	uxtb	r2, r2
     42e:	0352      	lsls	r2, r2, #13
     430:	432a      	orrs	r2, r5
     432:	e7db      	b.n	3ec <_sercom_get_async_baud_val+0x44>
     434:	00001651 	.word	0x00001651
     438:	000002c5 	.word	0x000002c5

0000043c <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
     43c:	b510      	push	{r4, lr}
     43e:	b082      	sub	sp, #8
     440:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
     442:	4b0e      	ldr	r3, [pc, #56]	; (47c <sercom_set_gclk_generator+0x40>)
     444:	781b      	ldrb	r3, [r3, #0]
     446:	2b00      	cmp	r3, #0
     448:	d007      	beq.n	45a <sercom_set_gclk_generator+0x1e>
     44a:	2900      	cmp	r1, #0
     44c:	d105      	bne.n	45a <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
     44e:	4b0b      	ldr	r3, [pc, #44]	; (47c <sercom_set_gclk_generator+0x40>)
     450:	785b      	ldrb	r3, [r3, #1]
     452:	4283      	cmp	r3, r0
     454:	d010      	beq.n	478 <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
     456:	201d      	movs	r0, #29
     458:	e00c      	b.n	474 <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
     45a:	a901      	add	r1, sp, #4
     45c:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
     45e:	2013      	movs	r0, #19
     460:	4b07      	ldr	r3, [pc, #28]	; (480 <sercom_set_gclk_generator+0x44>)
     462:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
     464:	2013      	movs	r0, #19
     466:	4b07      	ldr	r3, [pc, #28]	; (484 <sercom_set_gclk_generator+0x48>)
     468:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
     46a:	4b04      	ldr	r3, [pc, #16]	; (47c <sercom_set_gclk_generator+0x40>)
     46c:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
     46e:	2201      	movs	r2, #1
     470:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
     472:	2000      	movs	r0, #0
}
     474:	b002      	add	sp, #8
     476:	bd10      	pop	{r4, pc}
		return STATUS_OK;
     478:	2000      	movs	r0, #0
     47a:	e7fb      	b.n	474 <sercom_set_gclk_generator+0x38>
     47c:	20000088 	.word	0x20000088
     480:	00001039 	.word	0x00001039
     484:	00000fad 	.word	0x00000fad

00000488 <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
     488:	4b40      	ldr	r3, [pc, #256]	; (58c <_sercom_get_default_pad+0x104>)
     48a:	4298      	cmp	r0, r3
     48c:	d031      	beq.n	4f2 <_sercom_get_default_pad+0x6a>
     48e:	d90a      	bls.n	4a6 <_sercom_get_default_pad+0x1e>
     490:	4b3f      	ldr	r3, [pc, #252]	; (590 <_sercom_get_default_pad+0x108>)
     492:	4298      	cmp	r0, r3
     494:	d04d      	beq.n	532 <_sercom_get_default_pad+0xaa>
     496:	4b3f      	ldr	r3, [pc, #252]	; (594 <_sercom_get_default_pad+0x10c>)
     498:	4298      	cmp	r0, r3
     49a:	d05a      	beq.n	552 <_sercom_get_default_pad+0xca>
     49c:	4b3e      	ldr	r3, [pc, #248]	; (598 <_sercom_get_default_pad+0x110>)
     49e:	4298      	cmp	r0, r3
     4a0:	d037      	beq.n	512 <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
     4a2:	2000      	movs	r0, #0
}
     4a4:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
     4a6:	4b3d      	ldr	r3, [pc, #244]	; (59c <_sercom_get_default_pad+0x114>)
     4a8:	4298      	cmp	r0, r3
     4aa:	d00c      	beq.n	4c6 <_sercom_get_default_pad+0x3e>
     4ac:	4b3c      	ldr	r3, [pc, #240]	; (5a0 <_sercom_get_default_pad+0x118>)
     4ae:	4298      	cmp	r0, r3
     4b0:	d1f7      	bne.n	4a2 <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     4b2:	2901      	cmp	r1, #1
     4b4:	d017      	beq.n	4e6 <_sercom_get_default_pad+0x5e>
     4b6:	2900      	cmp	r1, #0
     4b8:	d05d      	beq.n	576 <_sercom_get_default_pad+0xee>
     4ba:	2902      	cmp	r1, #2
     4bc:	d015      	beq.n	4ea <_sercom_get_default_pad+0x62>
     4be:	2903      	cmp	r1, #3
     4c0:	d015      	beq.n	4ee <_sercom_get_default_pad+0x66>
	return 0;
     4c2:	2000      	movs	r0, #0
     4c4:	e7ee      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     4c6:	2901      	cmp	r1, #1
     4c8:	d007      	beq.n	4da <_sercom_get_default_pad+0x52>
     4ca:	2900      	cmp	r1, #0
     4cc:	d051      	beq.n	572 <_sercom_get_default_pad+0xea>
     4ce:	2902      	cmp	r1, #2
     4d0:	d005      	beq.n	4de <_sercom_get_default_pad+0x56>
     4d2:	2903      	cmp	r1, #3
     4d4:	d005      	beq.n	4e2 <_sercom_get_default_pad+0x5a>
	return 0;
     4d6:	2000      	movs	r0, #0
     4d8:	e7e4      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     4da:	4832      	ldr	r0, [pc, #200]	; (5a4 <_sercom_get_default_pad+0x11c>)
     4dc:	e7e2      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4de:	4832      	ldr	r0, [pc, #200]	; (5a8 <_sercom_get_default_pad+0x120>)
     4e0:	e7e0      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4e2:	4832      	ldr	r0, [pc, #200]	; (5ac <_sercom_get_default_pad+0x124>)
     4e4:	e7de      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4e6:	4832      	ldr	r0, [pc, #200]	; (5b0 <_sercom_get_default_pad+0x128>)
     4e8:	e7dc      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4ea:	4832      	ldr	r0, [pc, #200]	; (5b4 <_sercom_get_default_pad+0x12c>)
     4ec:	e7da      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4ee:	4832      	ldr	r0, [pc, #200]	; (5b8 <_sercom_get_default_pad+0x130>)
     4f0:	e7d8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4f2:	2901      	cmp	r1, #1
     4f4:	d007      	beq.n	506 <_sercom_get_default_pad+0x7e>
     4f6:	2900      	cmp	r1, #0
     4f8:	d03f      	beq.n	57a <_sercom_get_default_pad+0xf2>
     4fa:	2902      	cmp	r1, #2
     4fc:	d005      	beq.n	50a <_sercom_get_default_pad+0x82>
     4fe:	2903      	cmp	r1, #3
     500:	d005      	beq.n	50e <_sercom_get_default_pad+0x86>
	return 0;
     502:	2000      	movs	r0, #0
     504:	e7ce      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     506:	482d      	ldr	r0, [pc, #180]	; (5bc <_sercom_get_default_pad+0x134>)
     508:	e7cc      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     50a:	482d      	ldr	r0, [pc, #180]	; (5c0 <_sercom_get_default_pad+0x138>)
     50c:	e7ca      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     50e:	482d      	ldr	r0, [pc, #180]	; (5c4 <_sercom_get_default_pad+0x13c>)
     510:	e7c8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     512:	2901      	cmp	r1, #1
     514:	d007      	beq.n	526 <_sercom_get_default_pad+0x9e>
     516:	2900      	cmp	r1, #0
     518:	d031      	beq.n	57e <_sercom_get_default_pad+0xf6>
     51a:	2902      	cmp	r1, #2
     51c:	d005      	beq.n	52a <_sercom_get_default_pad+0xa2>
     51e:	2903      	cmp	r1, #3
     520:	d005      	beq.n	52e <_sercom_get_default_pad+0xa6>
	return 0;
     522:	2000      	movs	r0, #0
     524:	e7be      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     526:	4828      	ldr	r0, [pc, #160]	; (5c8 <_sercom_get_default_pad+0x140>)
     528:	e7bc      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     52a:	4828      	ldr	r0, [pc, #160]	; (5cc <_sercom_get_default_pad+0x144>)
     52c:	e7ba      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     52e:	4828      	ldr	r0, [pc, #160]	; (5d0 <_sercom_get_default_pad+0x148>)
     530:	e7b8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     532:	2901      	cmp	r1, #1
     534:	d007      	beq.n	546 <_sercom_get_default_pad+0xbe>
     536:	2900      	cmp	r1, #0
     538:	d023      	beq.n	582 <_sercom_get_default_pad+0xfa>
     53a:	2902      	cmp	r1, #2
     53c:	d005      	beq.n	54a <_sercom_get_default_pad+0xc2>
     53e:	2903      	cmp	r1, #3
     540:	d005      	beq.n	54e <_sercom_get_default_pad+0xc6>
	return 0;
     542:	2000      	movs	r0, #0
     544:	e7ae      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     546:	4823      	ldr	r0, [pc, #140]	; (5d4 <_sercom_get_default_pad+0x14c>)
     548:	e7ac      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     54a:	4823      	ldr	r0, [pc, #140]	; (5d8 <_sercom_get_default_pad+0x150>)
     54c:	e7aa      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     54e:	4823      	ldr	r0, [pc, #140]	; (5dc <_sercom_get_default_pad+0x154>)
     550:	e7a8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     552:	2901      	cmp	r1, #1
     554:	d007      	beq.n	566 <_sercom_get_default_pad+0xde>
     556:	2900      	cmp	r1, #0
     558:	d015      	beq.n	586 <_sercom_get_default_pad+0xfe>
     55a:	2902      	cmp	r1, #2
     55c:	d005      	beq.n	56a <_sercom_get_default_pad+0xe2>
     55e:	2903      	cmp	r1, #3
     560:	d005      	beq.n	56e <_sercom_get_default_pad+0xe6>
	return 0;
     562:	2000      	movs	r0, #0
     564:	e79e      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     566:	481e      	ldr	r0, [pc, #120]	; (5e0 <_sercom_get_default_pad+0x158>)
     568:	e79c      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     56a:	481e      	ldr	r0, [pc, #120]	; (5e4 <_sercom_get_default_pad+0x15c>)
     56c:	e79a      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     56e:	481e      	ldr	r0, [pc, #120]	; (5e8 <_sercom_get_default_pad+0x160>)
     570:	e798      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     572:	481e      	ldr	r0, [pc, #120]	; (5ec <_sercom_get_default_pad+0x164>)
     574:	e796      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     576:	2003      	movs	r0, #3
     578:	e794      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     57a:	481d      	ldr	r0, [pc, #116]	; (5f0 <_sercom_get_default_pad+0x168>)
     57c:	e792      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     57e:	481d      	ldr	r0, [pc, #116]	; (5f4 <_sercom_get_default_pad+0x16c>)
     580:	e790      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     582:	481d      	ldr	r0, [pc, #116]	; (5f8 <_sercom_get_default_pad+0x170>)
     584:	e78e      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     586:	481d      	ldr	r0, [pc, #116]	; (5fc <_sercom_get_default_pad+0x174>)
     588:	e78c      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     58a:	46c0      	nop			; (mov r8, r8)
     58c:	42001000 	.word	0x42001000
     590:	42001800 	.word	0x42001800
     594:	42001c00 	.word	0x42001c00
     598:	42001400 	.word	0x42001400
     59c:	42000800 	.word	0x42000800
     5a0:	42000c00 	.word	0x42000c00
     5a4:	00050003 	.word	0x00050003
     5a8:	00060003 	.word	0x00060003
     5ac:	00070003 	.word	0x00070003
     5b0:	00010003 	.word	0x00010003
     5b4:	001e0003 	.word	0x001e0003
     5b8:	001f0003 	.word	0x001f0003
     5bc:	00090003 	.word	0x00090003
     5c0:	000a0003 	.word	0x000a0003
     5c4:	000b0003 	.word	0x000b0003
     5c8:	00110003 	.word	0x00110003
     5cc:	00120003 	.word	0x00120003
     5d0:	00130003 	.word	0x00130003
     5d4:	000d0003 	.word	0x000d0003
     5d8:	000e0003 	.word	0x000e0003
     5dc:	000f0003 	.word	0x000f0003
     5e0:	00170003 	.word	0x00170003
     5e4:	00180003 	.word	0x00180003
     5e8:	00190003 	.word	0x00190003
     5ec:	00040003 	.word	0x00040003
     5f0:	00080003 	.word	0x00080003
     5f4:	00100003 	.word	0x00100003
     5f8:	000c0003 	.word	0x000c0003
     5fc:	00160003 	.word	0x00160003

00000600 <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
     600:	b530      	push	{r4, r5, lr}
     602:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
     604:	4b0b      	ldr	r3, [pc, #44]	; (634 <_sercom_get_sercom_inst_index+0x34>)
     606:	466a      	mov	r2, sp
     608:	cb32      	ldmia	r3!, {r1, r4, r5}
     60a:	c232      	stmia	r2!, {r1, r4, r5}
     60c:	cb32      	ldmia	r3!, {r1, r4, r5}
     60e:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
     610:	9b00      	ldr	r3, [sp, #0]
     612:	4283      	cmp	r3, r0
     614:	d00b      	beq.n	62e <_sercom_get_sercom_inst_index+0x2e>
     616:	2301      	movs	r3, #1
     618:	009a      	lsls	r2, r3, #2
     61a:	4669      	mov	r1, sp
     61c:	5852      	ldr	r2, [r2, r1]
     61e:	4282      	cmp	r2, r0
     620:	d006      	beq.n	630 <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     622:	3301      	adds	r3, #1
     624:	2b06      	cmp	r3, #6
     626:	d1f7      	bne.n	618 <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
     628:	2000      	movs	r0, #0
}
     62a:	b007      	add	sp, #28
     62c:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     62e:	2300      	movs	r3, #0
			return i;
     630:	b2d8      	uxtb	r0, r3
     632:	e7fa      	b.n	62a <_sercom_get_sercom_inst_index+0x2a>
     634:	00004e08 	.word	0x00004e08

00000638 <_tc_interrupt_handler>:
 * \param[in]  instance  ID of the TC instance calling the interrupt
 *                       handler
 */
void _tc_interrupt_handler(
		uint8_t instance)
{
     638:	b570      	push	{r4, r5, r6, lr}
	/* Temporary variable */
	uint8_t interrupt_and_callback_status_mask;

	/* Get device instance from the look-up table */
	struct tc_module *module
     63a:	0080      	lsls	r0, r0, #2
     63c:	4b16      	ldr	r3, [pc, #88]	; (698 <_tc_interrupt_handler+0x60>)
     63e:	58c4      	ldr	r4, [r0, r3]
			= (struct tc_module *)_tc_instances[instance];

	/* Read and mask interrupt flag register */
	interrupt_and_callback_status_mask = module->hw->COUNT8.INTFLAG.reg &
     640:	6823      	ldr	r3, [r4, #0]
     642:	7b9d      	ldrb	r5, [r3, #14]
     644:	7e22      	ldrb	r2, [r4, #24]
     646:	7e63      	ldrb	r3, [r4, #25]
     648:	4013      	ands	r3, r2
     64a:	401d      	ands	r5, r3
			module->register_callback_mask &
			module->enable_callback_mask;

	/* Check if an Overflow interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_OVF) {
     64c:	07eb      	lsls	r3, r5, #31
     64e:	d406      	bmi.n	65e <_tc_interrupt_handler+0x26>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
	}

	/* Check if an Error interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_ERR) {
     650:	07ab      	lsls	r3, r5, #30
     652:	d40b      	bmi.n	66c <_tc_interrupt_handler+0x34>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_ERR;
	}

	/* Check if an Match/Capture Channel 0 interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_MC(1)) {
     654:	06eb      	lsls	r3, r5, #27
     656:	d410      	bmi.n	67a <_tc_interrupt_handler+0x42>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(1);
	}

	/* Check if an Match/Capture Channel 1 interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_MC(2)) {
     658:	06ab      	lsls	r3, r5, #26
     65a:	d415      	bmi.n	688 <_tc_interrupt_handler+0x50>
		/* Invoke registered and enabled callback function */
		(module->callback[TC_CALLBACK_CC_CHANNEL1])(module);
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(2);
	}
}
     65c:	bd70      	pop	{r4, r5, r6, pc}
		(module->callback[TC_CALLBACK_OVERFLOW])(module);
     65e:	0020      	movs	r0, r4
     660:	68a3      	ldr	r3, [r4, #8]
     662:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
     664:	2301      	movs	r3, #1
     666:	6822      	ldr	r2, [r4, #0]
     668:	7393      	strb	r3, [r2, #14]
     66a:	e7f1      	b.n	650 <_tc_interrupt_handler+0x18>
		(module->callback[TC_CALLBACK_ERROR])(module);
     66c:	0020      	movs	r0, r4
     66e:	68e3      	ldr	r3, [r4, #12]
     670:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_ERR;
     672:	2302      	movs	r3, #2
     674:	6822      	ldr	r2, [r4, #0]
     676:	7393      	strb	r3, [r2, #14]
     678:	e7ec      	b.n	654 <_tc_interrupt_handler+0x1c>
		(module->callback[TC_CALLBACK_CC_CHANNEL0])(module);
     67a:	0020      	movs	r0, r4
     67c:	6923      	ldr	r3, [r4, #16]
     67e:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(1);
     680:	2310      	movs	r3, #16
     682:	6822      	ldr	r2, [r4, #0]
     684:	7393      	strb	r3, [r2, #14]
     686:	e7e7      	b.n	658 <_tc_interrupt_handler+0x20>
		(module->callback[TC_CALLBACK_CC_CHANNEL1])(module);
     688:	0020      	movs	r0, r4
     68a:	6963      	ldr	r3, [r4, #20]
     68c:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(2);
     68e:	6823      	ldr	r3, [r4, #0]
     690:	2220      	movs	r2, #32
     692:	739a      	strb	r2, [r3, #14]
}
     694:	e7e2      	b.n	65c <_tc_interrupt_handler+0x24>
     696:	46c0      	nop			; (mov r8, r8)
     698:	20000104 	.word	0x20000104

0000069c <TC3_Handler>:
	MRECURSION(TC_INST_NUM, _TC_INTERRUPT_HANDLER, TC_INST_MAX_ID)
     69c:	b510      	push	{r4, lr}
     69e:	2000      	movs	r0, #0
     6a0:	4b01      	ldr	r3, [pc, #4]	; (6a8 <TC3_Handler+0xc>)
     6a2:	4798      	blx	r3
     6a4:	bd10      	pop	{r4, pc}
     6a6:	46c0      	nop			; (mov r8, r8)
     6a8:	00000639 	.word	0x00000639

000006ac <TC4_Handler>:
     6ac:	b510      	push	{r4, lr}
     6ae:	2001      	movs	r0, #1
     6b0:	4b01      	ldr	r3, [pc, #4]	; (6b8 <TC4_Handler+0xc>)
     6b2:	4798      	blx	r3
     6b4:	bd10      	pop	{r4, pc}
     6b6:	46c0      	nop			; (mov r8, r8)
     6b8:	00000639 	.word	0x00000639

000006bc <TC5_Handler>:
     6bc:	b510      	push	{r4, lr}
     6be:	2002      	movs	r0, #2
     6c0:	4b01      	ldr	r3, [pc, #4]	; (6c8 <TC5_Handler+0xc>)
     6c2:	4798      	blx	r3
     6c4:	bd10      	pop	{r4, pc}
     6c6:	46c0      	nop			; (mov r8, r8)
     6c8:	00000639 	.word	0x00000639

000006cc <TC6_Handler>:
     6cc:	b510      	push	{r4, lr}
     6ce:	2003      	movs	r0, #3
     6d0:	4b01      	ldr	r3, [pc, #4]	; (6d8 <TC6_Handler+0xc>)
     6d2:	4798      	blx	r3
     6d4:	bd10      	pop	{r4, pc}
     6d6:	46c0      	nop			; (mov r8, r8)
     6d8:	00000639 	.word	0x00000639

000006dc <TC7_Handler>:
     6dc:	b510      	push	{r4, lr}
     6de:	2004      	movs	r0, #4
     6e0:	4b01      	ldr	r3, [pc, #4]	; (6e8 <TC7_Handler+0xc>)
     6e2:	4798      	blx	r3
     6e4:	bd10      	pop	{r4, pc}
     6e6:	46c0      	nop			; (mov r8, r8)
     6e8:	00000639 	.word	0x00000639

000006ec <usart_init>:
 */
enum status_code usart_init(
		struct usart_module *const module,
		Sercom *const hw,
		const struct usart_config *const config)
{
     6ec:	b5f0      	push	{r4, r5, r6, r7, lr}
     6ee:	46de      	mov	lr, fp
     6f0:	4657      	mov	r7, sl
     6f2:	464e      	mov	r6, r9
     6f4:	4645      	mov	r5, r8
     6f6:	b5e0      	push	{r5, r6, r7, lr}
     6f8:	b091      	sub	sp, #68	; 0x44
     6fa:	0005      	movs	r5, r0
     6fc:	000c      	movs	r4, r1
     6fe:	0016      	movs	r6, r2
	Assert(config);

	enum status_code status_code = STATUS_OK;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
     700:	6029      	str	r1, [r5, #0]

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     702:	0008      	movs	r0, r1
     704:	4bab      	ldr	r3, [pc, #684]	; (9b4 <usart_init+0x2c8>)
     706:	4798      	blx	r3
     708:	0002      	movs	r2, r0
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
#endif

	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     70a:	6823      	ldr	r3, [r4, #0]
		/* The module is busy resetting itself */
		return STATUS_BUSY;
     70c:	2005      	movs	r0, #5
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     70e:	07db      	lsls	r3, r3, #31
     710:	d506      	bpl.n	720 <usart_init+0x34>
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
	_sercom_instances[instance_index] = module;
#endif

	return status_code;
}
     712:	b011      	add	sp, #68	; 0x44
     714:	bc3c      	pop	{r2, r3, r4, r5}
     716:	4690      	mov	r8, r2
     718:	4699      	mov	r9, r3
     71a:	46a2      	mov	sl, r4
     71c:	46ab      	mov	fp, r5
     71e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     720:	6823      	ldr	r3, [r4, #0]
		return STATUS_ERR_DENIED;
     722:	3017      	adds	r0, #23
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     724:	079b      	lsls	r3, r3, #30
     726:	d4f4      	bmi.n	712 <usart_init+0x26>
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
     728:	49a3      	ldr	r1, [pc, #652]	; (9b8 <usart_init+0x2cc>)
     72a:	6a08      	ldr	r0, [r1, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     72c:	1c97      	adds	r7, r2, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     72e:	2301      	movs	r3, #1
     730:	40bb      	lsls	r3, r7
     732:	4303      	orrs	r3, r0
     734:	620b      	str	r3, [r1, #32]
	gclk_chan_conf.source_generator = config->generator_source;
     736:	a90f      	add	r1, sp, #60	; 0x3c
     738:	272d      	movs	r7, #45	; 0x2d
     73a:	5df3      	ldrb	r3, [r6, r7]
     73c:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     73e:	3214      	adds	r2, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     740:	b2d3      	uxtb	r3, r2
     742:	9302      	str	r3, [sp, #8]
     744:	0018      	movs	r0, r3
     746:	4b9d      	ldr	r3, [pc, #628]	; (9bc <usart_init+0x2d0>)
     748:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     74a:	9802      	ldr	r0, [sp, #8]
     74c:	4b9c      	ldr	r3, [pc, #624]	; (9c0 <usart_init+0x2d4>)
     74e:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     750:	5df0      	ldrb	r0, [r6, r7]
     752:	2100      	movs	r1, #0
     754:	4b9b      	ldr	r3, [pc, #620]	; (9c4 <usart_init+0x2d8>)
     756:	4798      	blx	r3
	module->character_size = config->character_size;
     758:	7af3      	ldrb	r3, [r6, #11]
     75a:	716b      	strb	r3, [r5, #5]
	module->receiver_enabled = config->receiver_enable;
     75c:	2324      	movs	r3, #36	; 0x24
     75e:	5cf3      	ldrb	r3, [r6, r3]
     760:	71ab      	strb	r3, [r5, #6]
	module->transmitter_enabled = config->transmitter_enable;
     762:	2325      	movs	r3, #37	; 0x25
     764:	5cf3      	ldrb	r3, [r6, r3]
     766:	71eb      	strb	r3, [r5, #7]
	module->lin_slave_enabled = config->lin_slave_enable;
     768:	7ef3      	ldrb	r3, [r6, #27]
     76a:	722b      	strb	r3, [r5, #8]
	module->start_frame_detection_enabled = config->start_frame_detection_enable;
     76c:	7f33      	ldrb	r3, [r6, #28]
     76e:	726b      	strb	r3, [r5, #9]
	SercomUsart *const usart_hw = &(module->hw->USART);
     770:	682b      	ldr	r3, [r5, #0]
     772:	4698      	mov	r8, r3
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     774:	0018      	movs	r0, r3
     776:	4b8f      	ldr	r3, [pc, #572]	; (9b4 <usart_init+0x2c8>)
     778:	4798      	blx	r3
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     77a:	3014      	adds	r0, #20
	uint16_t baud  = 0;
     77c:	2200      	movs	r2, #0
     77e:	230e      	movs	r3, #14
     780:	a906      	add	r1, sp, #24
     782:	468c      	mov	ip, r1
     784:	4463      	add	r3, ip
     786:	801a      	strh	r2, [r3, #0]
	switch (config->sample_rate) {
     788:	8a32      	ldrh	r2, [r6, #16]
     78a:	9202      	str	r2, [sp, #8]
     78c:	2380      	movs	r3, #128	; 0x80
     78e:	01db      	lsls	r3, r3, #7
     790:	429a      	cmp	r2, r3
     792:	d100      	bne.n	796 <usart_init+0xaa>
     794:	e09b      	b.n	8ce <usart_init+0x1e2>
     796:	d90f      	bls.n	7b8 <usart_init+0xcc>
     798:	23c0      	movs	r3, #192	; 0xc0
     79a:	01db      	lsls	r3, r3, #7
     79c:	9a02      	ldr	r2, [sp, #8]
     79e:	429a      	cmp	r2, r3
     7a0:	d100      	bne.n	7a4 <usart_init+0xb8>
     7a2:	e08f      	b.n	8c4 <usart_init+0x1d8>
     7a4:	2380      	movs	r3, #128	; 0x80
     7a6:	021b      	lsls	r3, r3, #8
     7a8:	429a      	cmp	r2, r3
     7aa:	d000      	beq.n	7ae <usart_init+0xc2>
     7ac:	e0fd      	b.n	9aa <usart_init+0x2be>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_3;
     7ae:	2303      	movs	r3, #3
     7b0:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     7b2:	2300      	movs	r3, #0
     7b4:	9307      	str	r3, [sp, #28]
     7b6:	e008      	b.n	7ca <usart_init+0xde>
	switch (config->sample_rate) {
     7b8:	2380      	movs	r3, #128	; 0x80
     7ba:	019b      	lsls	r3, r3, #6
     7bc:	429a      	cmp	r2, r3
     7be:	d000      	beq.n	7c2 <usart_init+0xd6>
     7c0:	e0f3      	b.n	9aa <usart_init+0x2be>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     7c2:	2310      	movs	r3, #16
     7c4:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     7c6:	3b0f      	subs	r3, #15
     7c8:	9307      	str	r3, [sp, #28]
	ctrla = (uint32_t)config->data_order |
     7ca:	6833      	ldr	r3, [r6, #0]
     7cc:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
     7ce:	68f3      	ldr	r3, [r6, #12]
     7d0:	9305      	str	r3, [sp, #20]
		config->sample_adjustment |
     7d2:	6973      	ldr	r3, [r6, #20]
     7d4:	9304      	str	r3, [sp, #16]
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     7d6:	7e33      	ldrb	r3, [r6, #24]
     7d8:	9303      	str	r3, [sp, #12]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     7da:	2326      	movs	r3, #38	; 0x26
     7dc:	5cf3      	ldrb	r3, [r6, r3]
     7de:	469a      	mov	sl, r3
	transfer_mode = (uint32_t)config->transfer_mode;
     7e0:	6873      	ldr	r3, [r6, #4]
     7e2:	4699      	mov	r9, r3
	switch (transfer_mode)
     7e4:	2b00      	cmp	r3, #0
     7e6:	d100      	bne.n	7ea <usart_init+0xfe>
     7e8:	e09d      	b.n	926 <usart_init+0x23a>
     7ea:	2380      	movs	r3, #128	; 0x80
     7ec:	055b      	lsls	r3, r3, #21
     7ee:	4599      	cmp	r9, r3
     7f0:	d100      	bne.n	7f4 <usart_init+0x108>
     7f2:	e081      	b.n	8f8 <usart_init+0x20c>
	if(config->encoding_format_enable) {
     7f4:	7e73      	ldrb	r3, [r6, #25]
     7f6:	2b00      	cmp	r3, #0
     7f8:	d002      	beq.n	800 <usart_init+0x114>
		usart_hw->RXPL.reg = config->receive_pulse_length;
     7fa:	7eb3      	ldrb	r3, [r6, #26]
     7fc:	4642      	mov	r2, r8
     7fe:	7393      	strb	r3, [r2, #14]
	usart_hw->BAUD.reg = baud;
     800:	230e      	movs	r3, #14
     802:	aa06      	add	r2, sp, #24
     804:	4694      	mov	ip, r2
     806:	4463      	add	r3, ip
     808:	881b      	ldrh	r3, [r3, #0]
     80a:	4642      	mov	r2, r8
     80c:	8193      	strh	r3, [r2, #12]
	ctrla |= transfer_mode;
     80e:	465b      	mov	r3, fp
     810:	9a05      	ldr	r2, [sp, #20]
     812:	4313      	orrs	r3, r2
     814:	9a04      	ldr	r2, [sp, #16]
     816:	4313      	orrs	r3, r2
     818:	464a      	mov	r2, r9
     81a:	4313      	orrs	r3, r2
     81c:	9f02      	ldr	r7, [sp, #8]
     81e:	431f      	orrs	r7, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     820:	9b03      	ldr	r3, [sp, #12]
     822:	021b      	lsls	r3, r3, #8
	ctrla |= transfer_mode;
     824:	431f      	orrs	r7, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     826:	4653      	mov	r3, sl
     828:	075b      	lsls	r3, r3, #29
	ctrla |= transfer_mode;
     82a:	431f      	orrs	r7, r3
	if (config->use_external_clock == false) {
     82c:	2327      	movs	r3, #39	; 0x27
     82e:	5cf3      	ldrb	r3, [r6, r3]
     830:	2b00      	cmp	r3, #0
     832:	d101      	bne.n	838 <usart_init+0x14c>
		ctrla |= SERCOM_USART_CTRLA_MODE(0x1);
     834:	3304      	adds	r3, #4
     836:	431f      	orrs	r7, r3
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     838:	7e73      	ldrb	r3, [r6, #25]
     83a:	029b      	lsls	r3, r3, #10
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     83c:	7f32      	ldrb	r2, [r6, #28]
     83e:	0252      	lsls	r2, r2, #9
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     840:	4313      	orrs	r3, r2
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     842:	7f72      	ldrb	r2, [r6, #29]
     844:	0212      	lsls	r2, r2, #8
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     846:	4313      	orrs	r3, r2
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     848:	2224      	movs	r2, #36	; 0x24
     84a:	5cb2      	ldrb	r2, [r6, r2]
     84c:	0452      	lsls	r2, r2, #17
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     84e:	4313      	orrs	r3, r2
			(config->transmitter_enable << SERCOM_USART_CTRLB_TXEN_Pos);
     850:	2225      	movs	r2, #37	; 0x25
     852:	5cb2      	ldrb	r2, [r6, r2]
     854:	0412      	lsls	r2, r2, #16
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     856:	4313      	orrs	r3, r2
	ctrlb |= (uint32_t)config->character_size;
     858:	7ab1      	ldrb	r1, [r6, #10]
     85a:	7af2      	ldrb	r2, [r6, #11]
     85c:	4311      	orrs	r1, r2
     85e:	4319      	orrs	r1, r3
	if (config->parity != USART_PARITY_NONE) {
     860:	8933      	ldrh	r3, [r6, #8]
     862:	2bff      	cmp	r3, #255	; 0xff
     864:	d100      	bne.n	868 <usart_init+0x17c>
     866:	e082      	b.n	96e <usart_init+0x282>
		ctrla |= SERCOM_USART_CTRLA_FORM(1);
     868:	2280      	movs	r2, #128	; 0x80
     86a:	0452      	lsls	r2, r2, #17
     86c:	4317      	orrs	r7, r2
		ctrlb |= config->parity;
     86e:	4319      	orrs	r1, r3
	if (config->run_in_standby || system_is_debugger_present()) {
     870:	232c      	movs	r3, #44	; 0x2c
     872:	5cf3      	ldrb	r3, [r6, r3]
     874:	2b00      	cmp	r3, #0
     876:	d103      	bne.n	880 <usart_init+0x194>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     878:	4b53      	ldr	r3, [pc, #332]	; (9c8 <usart_init+0x2dc>)
     87a:	789b      	ldrb	r3, [r3, #2]
     87c:	079b      	lsls	r3, r3, #30
     87e:	d501      	bpl.n	884 <usart_init+0x198>
		ctrla |= SERCOM_USART_CTRLA_RUNSTDBY;
     880:	2380      	movs	r3, #128	; 0x80
     882:	431f      	orrs	r7, r3
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomUsart *const usart_hw = &(module->hw->USART);
     884:	682a      	ldr	r2, [r5, #0]

#ifdef FEATURE_USART_SYNC_SCHEME_V2
	return (usart_hw->SYNCBUSY.reg);
     886:	69d3      	ldr	r3, [r2, #28]
		const struct usart_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (usart_is_syncing(module)) {
     888:	2b00      	cmp	r3, #0
     88a:	d1fc      	bne.n	886 <usart_init+0x19a>
	usart_hw->CTRLB.reg = ctrlb;
     88c:	4643      	mov	r3, r8
     88e:	6059      	str	r1, [r3, #4]
	SercomUsart *const usart_hw = &(module->hw->USART);
     890:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     892:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     894:	2b00      	cmp	r3, #0
     896:	d1fc      	bne.n	892 <usart_init+0x1a6>
	usart_hw->CTRLA.reg = ctrla;
     898:	4643      	mov	r3, r8
     89a:	601f      	str	r7, [r3, #0]
	config->mux_position = SYSTEM_PINMUX_GPIO;
     89c:	ab0e      	add	r3, sp, #56	; 0x38
     89e:	2280      	movs	r2, #128	; 0x80
     8a0:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     8a2:	2200      	movs	r2, #0
     8a4:	705a      	strb	r2, [r3, #1]
	config->powersave    = false;
     8a6:	70da      	strb	r2, [r3, #3]
	pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
     8a8:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
     8aa:	6b33      	ldr	r3, [r6, #48]	; 0x30
     8ac:	930a      	str	r3, [sp, #40]	; 0x28
     8ae:	6b73      	ldr	r3, [r6, #52]	; 0x34
     8b0:	930b      	str	r3, [sp, #44]	; 0x2c
     8b2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
     8b4:	930c      	str	r3, [sp, #48]	; 0x30
     8b6:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
     8b8:	9302      	str	r3, [sp, #8]
     8ba:	930d      	str	r3, [sp, #52]	; 0x34
     8bc:	2700      	movs	r7, #0
		uint32_t current_pinmux = pad_pinmuxes[pad];
     8be:	ad0a      	add	r5, sp, #40	; 0x28
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     8c0:	4e42      	ldr	r6, [pc, #264]	; (9cc <usart_init+0x2e0>)
     8c2:	e063      	b.n	98c <usart_init+0x2a0>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     8c4:	2308      	movs	r3, #8
     8c6:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     8c8:	3b07      	subs	r3, #7
     8ca:	9307      	str	r3, [sp, #28]
     8cc:	e77d      	b.n	7ca <usart_init+0xde>
	ctrla = (uint32_t)config->data_order |
     8ce:	6833      	ldr	r3, [r6, #0]
     8d0:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
     8d2:	68f3      	ldr	r3, [r6, #12]
     8d4:	9305      	str	r3, [sp, #20]
		config->sample_adjustment |
     8d6:	6973      	ldr	r3, [r6, #20]
     8d8:	9304      	str	r3, [sp, #16]
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     8da:	7e33      	ldrb	r3, [r6, #24]
     8dc:	9303      	str	r3, [sp, #12]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     8de:	2326      	movs	r3, #38	; 0x26
     8e0:	5cf3      	ldrb	r3, [r6, r3]
     8e2:	469a      	mov	sl, r3
	transfer_mode = (uint32_t)config->transfer_mode;
     8e4:	6873      	ldr	r3, [r6, #4]
     8e6:	4699      	mov	r9, r3
	switch (transfer_mode)
     8e8:	2b00      	cmp	r3, #0
     8ea:	d018      	beq.n	91e <usart_init+0x232>
     8ec:	2380      	movs	r3, #128	; 0x80
     8ee:	055b      	lsls	r3, r3, #21
     8f0:	4599      	cmp	r9, r3
     8f2:	d001      	beq.n	8f8 <usart_init+0x20c>
	enum status_code status_code = STATUS_OK;
     8f4:	2000      	movs	r0, #0
     8f6:	e025      	b.n	944 <usart_init+0x258>
			if (!config->use_external_clock) {
     8f8:	2327      	movs	r3, #39	; 0x27
     8fa:	5cf3      	ldrb	r3, [r6, r3]
     8fc:	2b00      	cmp	r3, #0
     8fe:	d000      	beq.n	902 <usart_init+0x216>
     900:	e778      	b.n	7f4 <usart_init+0x108>
				status_code = _sercom_get_sync_baud_val(config->baudrate,
     902:	6a33      	ldr	r3, [r6, #32]
     904:	001f      	movs	r7, r3
     906:	b2c0      	uxtb	r0, r0
     908:	4b31      	ldr	r3, [pc, #196]	; (9d0 <usart_init+0x2e4>)
     90a:	4798      	blx	r3
     90c:	0001      	movs	r1, r0
     90e:	220e      	movs	r2, #14
     910:	ab06      	add	r3, sp, #24
     912:	469c      	mov	ip, r3
     914:	4462      	add	r2, ip
     916:	0038      	movs	r0, r7
     918:	4b2e      	ldr	r3, [pc, #184]	; (9d4 <usart_init+0x2e8>)
     91a:	4798      	blx	r3
     91c:	e012      	b.n	944 <usart_init+0x258>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     91e:	2308      	movs	r3, #8
     920:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     922:	2300      	movs	r3, #0
     924:	9307      	str	r3, [sp, #28]
			if (config->use_external_clock) {
     926:	2327      	movs	r3, #39	; 0x27
     928:	5cf3      	ldrb	r3, [r6, r3]
     92a:	2b00      	cmp	r3, #0
     92c:	d00e      	beq.n	94c <usart_init+0x260>
				status_code =
     92e:	9b06      	ldr	r3, [sp, #24]
     930:	9300      	str	r3, [sp, #0]
     932:	9b07      	ldr	r3, [sp, #28]
     934:	220e      	movs	r2, #14
     936:	a906      	add	r1, sp, #24
     938:	468c      	mov	ip, r1
     93a:	4462      	add	r2, ip
     93c:	6ab1      	ldr	r1, [r6, #40]	; 0x28
     93e:	6a30      	ldr	r0, [r6, #32]
     940:	4f25      	ldr	r7, [pc, #148]	; (9d8 <usart_init+0x2ec>)
     942:	47b8      	blx	r7
	if (status_code != STATUS_OK) {
     944:	2800      	cmp	r0, #0
     946:	d000      	beq.n	94a <usart_init+0x25e>
     948:	e6e3      	b.n	712 <usart_init+0x26>
     94a:	e753      	b.n	7f4 <usart_init+0x108>
						_sercom_get_async_baud_val(config->baudrate,
     94c:	6a33      	ldr	r3, [r6, #32]
     94e:	001f      	movs	r7, r3
     950:	b2c0      	uxtb	r0, r0
     952:	4b1f      	ldr	r3, [pc, #124]	; (9d0 <usart_init+0x2e4>)
     954:	4798      	blx	r3
     956:	0001      	movs	r1, r0
				status_code =
     958:	9b06      	ldr	r3, [sp, #24]
     95a:	9300      	str	r3, [sp, #0]
     95c:	9b07      	ldr	r3, [sp, #28]
     95e:	220e      	movs	r2, #14
     960:	a806      	add	r0, sp, #24
     962:	4684      	mov	ip, r0
     964:	4462      	add	r2, ip
     966:	0038      	movs	r0, r7
     968:	4f1b      	ldr	r7, [pc, #108]	; (9d8 <usart_init+0x2ec>)
     96a:	47b8      	blx	r7
     96c:	e7ea      	b.n	944 <usart_init+0x258>
		if(config->lin_slave_enable) {
     96e:	7ef3      	ldrb	r3, [r6, #27]
     970:	2b00      	cmp	r3, #0
     972:	d100      	bne.n	976 <usart_init+0x28a>
     974:	e77c      	b.n	870 <usart_init+0x184>
			ctrla |= SERCOM_USART_CTRLA_FORM(0x4);
     976:	2380      	movs	r3, #128	; 0x80
     978:	04db      	lsls	r3, r3, #19
     97a:	431f      	orrs	r7, r3
     97c:	e778      	b.n	870 <usart_init+0x184>
			current_pinmux = _sercom_get_default_pad(hw, pad);
     97e:	0020      	movs	r0, r4
     980:	4b16      	ldr	r3, [pc, #88]	; (9dc <usart_init+0x2f0>)
     982:	4798      	blx	r3
     984:	e007      	b.n	996 <usart_init+0x2aa>
     986:	3701      	adds	r7, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
     988:	2f04      	cmp	r7, #4
     98a:	d00c      	beq.n	9a6 <usart_init+0x2ba>
     98c:	b2f9      	uxtb	r1, r7
		uint32_t current_pinmux = pad_pinmuxes[pad];
     98e:	00bb      	lsls	r3, r7, #2
     990:	5958      	ldr	r0, [r3, r5]
		if (current_pinmux == PINMUX_DEFAULT) {
     992:	2800      	cmp	r0, #0
     994:	d0f3      	beq.n	97e <usart_init+0x292>
		if (current_pinmux != PINMUX_UNUSED) {
     996:	1c43      	adds	r3, r0, #1
     998:	d0f5      	beq.n	986 <usart_init+0x29a>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
     99a:	a90e      	add	r1, sp, #56	; 0x38
     99c:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     99e:	0c00      	lsrs	r0, r0, #16
     9a0:	b2c0      	uxtb	r0, r0
     9a2:	47b0      	blx	r6
     9a4:	e7ef      	b.n	986 <usart_init+0x29a>
	return status_code;
     9a6:	2000      	movs	r0, #0
     9a8:	e6b3      	b.n	712 <usart_init+0x26>
	enum sercom_asynchronous_sample_num sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     9aa:	2310      	movs	r3, #16
     9ac:	9306      	str	r3, [sp, #24]
	enum sercom_asynchronous_operation_mode mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     9ae:	2300      	movs	r3, #0
     9b0:	9307      	str	r3, [sp, #28]
     9b2:	e70a      	b.n	7ca <usart_init+0xde>
     9b4:	00000601 	.word	0x00000601
     9b8:	40000400 	.word	0x40000400
     9bc:	00001039 	.word	0x00001039
     9c0:	00000fad 	.word	0x00000fad
     9c4:	0000043d 	.word	0x0000043d
     9c8:	41002000 	.word	0x41002000
     9cc:	00001131 	.word	0x00001131
     9d0:	00001055 	.word	0x00001055
     9d4:	0000037f 	.word	0x0000037f
     9d8:	000003a9 	.word	0x000003a9
     9dc:	00000489 	.word	0x00000489

000009e0 <usart_write_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the transmitter is enabled */
	if (!(module->transmitter_enabled)) {
     9e0:	79c2      	ldrb	r2, [r0, #7]
		return STATUS_ERR_DENIED;
     9e2:	231c      	movs	r3, #28
	if (!(module->transmitter_enabled)) {
     9e4:	2a00      	cmp	r2, #0
     9e6:	d101      	bne.n	9ec <usart_write_wait+0xc>
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
		/* Wait until data is sent */
	}

	return STATUS_OK;
}
     9e8:	0018      	movs	r0, r3
     9ea:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
     9ec:	6802      	ldr	r2, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
     9ee:	7e10      	ldrb	r0, [r2, #24]
		return STATUS_BUSY;
     9f0:	3b17      	subs	r3, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
     9f2:	07c0      	lsls	r0, r0, #31
     9f4:	d5f8      	bpl.n	9e8 <usart_write_wait+0x8>
	usart_hw->DATA.reg = tx_data;
     9f6:	8511      	strh	r1, [r2, #40]	; 0x28
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
     9f8:	2102      	movs	r1, #2
     9fa:	7e13      	ldrb	r3, [r2, #24]
     9fc:	420b      	tst	r3, r1
     9fe:	d0fc      	beq.n	9fa <usart_write_wait+0x1a>
	return STATUS_OK;
     a00:	2300      	movs	r3, #0
     a02:	e7f1      	b.n	9e8 <usart_write_wait+0x8>

00000a04 <usart_read_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the receiver is enabled */
	if (!(module->receiver_enabled)) {
     a04:	7982      	ldrb	r2, [r0, #6]
		return STATUS_ERR_DENIED;
     a06:	231c      	movs	r3, #28
	if (!(module->receiver_enabled)) {
     a08:	2a00      	cmp	r2, #0
     a0a:	d101      	bne.n	a10 <usart_read_wait+0xc>

	/* Read data from USART module */
	*rx_data = usart_hw->DATA.reg;

	return STATUS_OK;
}
     a0c:	0018      	movs	r0, r3
     a0e:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
     a10:	6802      	ldr	r2, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
     a12:	7e10      	ldrb	r0, [r2, #24]
		return STATUS_BUSY;
     a14:	3b17      	subs	r3, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
     a16:	0740      	lsls	r0, r0, #29
     a18:	d5f8      	bpl.n	a0c <usart_read_wait+0x8>
	error_code = (uint8_t)(usart_hw->STATUS.reg & SERCOM_USART_STATUS_MASK);
     a1a:	8b53      	ldrh	r3, [r2, #26]
     a1c:	b2db      	uxtb	r3, r3
	if (error_code) {
     a1e:	0698      	lsls	r0, r3, #26
     a20:	d01d      	beq.n	a5e <usart_read_wait+0x5a>
		if (error_code & SERCOM_USART_STATUS_FERR) {
     a22:	0798      	lsls	r0, r3, #30
     a24:	d503      	bpl.n	a2e <usart_read_wait+0x2a>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_FERR;
     a26:	2302      	movs	r3, #2
     a28:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_FORMAT;
     a2a:	3318      	adds	r3, #24
     a2c:	e7ee      	b.n	a0c <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_BUFOVF) {
     a2e:	0758      	lsls	r0, r3, #29
     a30:	d503      	bpl.n	a3a <usart_read_wait+0x36>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_BUFOVF;
     a32:	2304      	movs	r3, #4
     a34:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_OVERFLOW;
     a36:	331a      	adds	r3, #26
     a38:	e7e8      	b.n	a0c <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_PERR) {
     a3a:	07d8      	lsls	r0, r3, #31
     a3c:	d503      	bpl.n	a46 <usart_read_wait+0x42>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_PERR;
     a3e:	2301      	movs	r3, #1
     a40:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_DATA;
     a42:	3312      	adds	r3, #18
     a44:	e7e2      	b.n	a0c <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_ISF) {
     a46:	06d8      	lsls	r0, r3, #27
     a48:	d503      	bpl.n	a52 <usart_read_wait+0x4e>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_ISF;
     a4a:	2310      	movs	r3, #16
     a4c:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PROTOCOL;
     a4e:	3332      	adds	r3, #50	; 0x32
     a50:	e7dc      	b.n	a0c <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_COLL) {
     a52:	069b      	lsls	r3, r3, #26
     a54:	d503      	bpl.n	a5e <usart_read_wait+0x5a>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_COLL;
     a56:	2320      	movs	r3, #32
     a58:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PACKET_COLLISION;
     a5a:	3321      	adds	r3, #33	; 0x21
     a5c:	e7d6      	b.n	a0c <usart_read_wait+0x8>
	*rx_data = usart_hw->DATA.reg;
     a5e:	8d13      	ldrh	r3, [r2, #40]	; 0x28
     a60:	800b      	strh	r3, [r1, #0]
	return STATUS_OK;
     a62:	2300      	movs	r3, #0
     a64:	e7d2      	b.n	a0c <usart_read_wait+0x8>
	...

00000a68 <usart_write_buffer_wait>:
 */
enum status_code usart_write_buffer_wait(
		struct usart_module *const module,
		const uint8_t *tx_data,
		uint16_t length)
{
     a68:	b5f0      	push	{r4, r5, r6, r7, lr}
     a6a:	46ce      	mov	lr, r9
     a6c:	4647      	mov	r7, r8
     a6e:	b580      	push	{r7, lr}
     a70:	b083      	sub	sp, #12
     a72:	0005      	movs	r5, r0
     a74:	9101      	str	r1, [sp, #4]
	Assert(module);
	Assert(module->hw);

	/* Check if the buffer length is valid */
	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
     a76:	2017      	movs	r0, #23
	if (length == 0) {
     a78:	2a00      	cmp	r2, #0
     a7a:	d104      	bne.n	a86 <usart_write_buffer_wait+0x1e>
			return STATUS_ERR_TIMEOUT;
		}
	}

	return STATUS_OK;
}
     a7c:	b003      	add	sp, #12
     a7e:	bc0c      	pop	{r2, r3}
     a80:	4690      	mov	r8, r2
     a82:	4699      	mov	r9, r3
     a84:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (!(module->transmitter_enabled)) {
     a86:	79eb      	ldrb	r3, [r5, #7]
		return STATUS_ERR_DENIED;
     a88:	3005      	adds	r0, #5
	if (!(module->transmitter_enabled)) {
     a8a:	2b00      	cmp	r3, #0
     a8c:	d0f6      	beq.n	a7c <usart_write_buffer_wait+0x14>
	SercomUsart *const usart_hw = &(module->hw->USART);
     a8e:	682c      	ldr	r4, [r5, #0]
	while (length--) {
     a90:	3a01      	subs	r2, #1
     a92:	b293      	uxth	r3, r2
     a94:	4699      	mov	r9, r3
     a96:	2600      	movs	r6, #0
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
     a98:	2701      	movs	r7, #1
	while (length--) {
     a9a:	4b20      	ldr	r3, [pc, #128]	; (b1c <usart_write_buffer_wait+0xb4>)
     a9c:	4698      	mov	r8, r3
     a9e:	e011      	b.n	ac4 <usart_write_buffer_wait+0x5c>
		uint16_t data_to_send = tx_data[tx_pos++];
     aa0:	1c73      	adds	r3, r6, #1
     aa2:	b29b      	uxth	r3, r3
     aa4:	9a01      	ldr	r2, [sp, #4]
     aa6:	5d91      	ldrb	r1, [r2, r6]
		if (module->character_size == USART_CHARACTER_SIZE_9BIT) {
     aa8:	796a      	ldrb	r2, [r5, #5]
     aaa:	2a01      	cmp	r2, #1
     aac:	d017      	beq.n	ade <usart_write_buffer_wait+0x76>
		uint16_t data_to_send = tx_data[tx_pos++];
     aae:	b289      	uxth	r1, r1
     ab0:	001e      	movs	r6, r3
		usart_write_wait(module, data_to_send);
     ab2:	0028      	movs	r0, r5
     ab4:	4b1a      	ldr	r3, [pc, #104]	; (b20 <usart_write_buffer_wait+0xb8>)
     ab6:	4798      	blx	r3
	while (length--) {
     ab8:	464b      	mov	r3, r9
     aba:	3b01      	subs	r3, #1
     abc:	b29b      	uxth	r3, r3
     abe:	4699      	mov	r9, r3
     ac0:	4543      	cmp	r3, r8
     ac2:	d013      	beq.n	aec <usart_write_buffer_wait+0x84>
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
     ac4:	7e23      	ldrb	r3, [r4, #24]
     ac6:	423b      	tst	r3, r7
     ac8:	d1ea      	bne.n	aa0 <usart_write_buffer_wait+0x38>
     aca:	4b14      	ldr	r3, [pc, #80]	; (b1c <usart_write_buffer_wait+0xb4>)
     acc:	7e22      	ldrb	r2, [r4, #24]
     ace:	423a      	tst	r2, r7
     ad0:	d1e6      	bne.n	aa0 <usart_write_buffer_wait+0x38>
			} else if (i == USART_TIMEOUT) {
     ad2:	2b01      	cmp	r3, #1
     ad4:	d019      	beq.n	b0a <usart_write_buffer_wait+0xa2>
     ad6:	3b01      	subs	r3, #1
		for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
     ad8:	2b00      	cmp	r3, #0
     ada:	d1f7      	bne.n	acc <usart_write_buffer_wait+0x64>
     adc:	e7e0      	b.n	aa0 <usart_write_buffer_wait+0x38>
			data_to_send |= (tx_data[tx_pos++] << 8);
     ade:	3602      	adds	r6, #2
     ae0:	b2b6      	uxth	r6, r6
     ae2:	9a01      	ldr	r2, [sp, #4]
     ae4:	5cd3      	ldrb	r3, [r2, r3]
     ae6:	021b      	lsls	r3, r3, #8
     ae8:	4319      	orrs	r1, r3
     aea:	e7e2      	b.n	ab2 <usart_write_buffer_wait+0x4a>
		if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) {
     aec:	7e23      	ldrb	r3, [r4, #24]
     aee:	079b      	lsls	r3, r3, #30
     af0:	d40d      	bmi.n	b0e <usart_write_buffer_wait+0xa6>
     af2:	4b0a      	ldr	r3, [pc, #40]	; (b1c <usart_write_buffer_wait+0xb4>)
     af4:	2102      	movs	r1, #2
     af6:	7e22      	ldrb	r2, [r4, #24]
     af8:	420a      	tst	r2, r1
     afa:	d10a      	bne.n	b12 <usart_write_buffer_wait+0xaa>
		} else if (i == USART_TIMEOUT) {
     afc:	2b01      	cmp	r3, #1
     afe:	d00a      	beq.n	b16 <usart_write_buffer_wait+0xae>
     b00:	3b01      	subs	r3, #1
	for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
     b02:	2b00      	cmp	r3, #0
     b04:	d1f7      	bne.n	af6 <usart_write_buffer_wait+0x8e>
	return STATUS_OK;
     b06:	2000      	movs	r0, #0
     b08:	e7b8      	b.n	a7c <usart_write_buffer_wait+0x14>
				return STATUS_ERR_TIMEOUT;
     b0a:	2012      	movs	r0, #18
     b0c:	e7b6      	b.n	a7c <usart_write_buffer_wait+0x14>
	return STATUS_OK;
     b0e:	2000      	movs	r0, #0
     b10:	e7b4      	b.n	a7c <usart_write_buffer_wait+0x14>
     b12:	2000      	movs	r0, #0
     b14:	e7b2      	b.n	a7c <usart_write_buffer_wait+0x14>
			return STATUS_ERR_TIMEOUT;
     b16:	2012      	movs	r0, #18
     b18:	e7b0      	b.n	a7c <usart_write_buffer_wait+0x14>
     b1a:	46c0      	nop			; (mov r8, r8)
     b1c:	0000ffff 	.word	0x0000ffff
     b20:	000009e1 	.word	0x000009e1

00000b24 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
     b24:	4b0c      	ldr	r3, [pc, #48]	; (b58 <cpu_irq_enter_critical+0x34>)
     b26:	681b      	ldr	r3, [r3, #0]
     b28:	2b00      	cmp	r3, #0
     b2a:	d106      	bne.n	b3a <cpu_irq_enter_critical+0x16>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     b2c:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
     b30:	2b00      	cmp	r3, #0
     b32:	d007      	beq.n	b44 <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
     b34:	2200      	movs	r2, #0
     b36:	4b09      	ldr	r3, [pc, #36]	; (b5c <cpu_irq_enter_critical+0x38>)
     b38:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
     b3a:	4a07      	ldr	r2, [pc, #28]	; (b58 <cpu_irq_enter_critical+0x34>)
     b3c:	6813      	ldr	r3, [r2, #0]
     b3e:	3301      	adds	r3, #1
     b40:	6013      	str	r3, [r2, #0]
}
     b42:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
     b44:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     b46:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
     b4a:	2200      	movs	r2, #0
     b4c:	4b04      	ldr	r3, [pc, #16]	; (b60 <cpu_irq_enter_critical+0x3c>)
     b4e:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
     b50:	3201      	adds	r2, #1
     b52:	4b02      	ldr	r3, [pc, #8]	; (b5c <cpu_irq_enter_critical+0x38>)
     b54:	701a      	strb	r2, [r3, #0]
     b56:	e7f0      	b.n	b3a <cpu_irq_enter_critical+0x16>
     b58:	2000008c 	.word	0x2000008c
     b5c:	20000090 	.word	0x20000090
     b60:	20000000 	.word	0x20000000

00000b64 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
     b64:	4b08      	ldr	r3, [pc, #32]	; (b88 <cpu_irq_leave_critical+0x24>)
     b66:	681a      	ldr	r2, [r3, #0]
     b68:	3a01      	subs	r2, #1
     b6a:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
     b6c:	681b      	ldr	r3, [r3, #0]
     b6e:	2b00      	cmp	r3, #0
     b70:	d109      	bne.n	b86 <cpu_irq_leave_critical+0x22>
     b72:	4b06      	ldr	r3, [pc, #24]	; (b8c <cpu_irq_leave_critical+0x28>)
     b74:	781b      	ldrb	r3, [r3, #0]
     b76:	2b00      	cmp	r3, #0
     b78:	d005      	beq.n	b86 <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
     b7a:	2201      	movs	r2, #1
     b7c:	4b04      	ldr	r3, [pc, #16]	; (b90 <cpu_irq_leave_critical+0x2c>)
     b7e:	701a      	strb	r2, [r3, #0]
     b80:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     b84:	b662      	cpsie	i
	}
}
     b86:	4770      	bx	lr
     b88:	2000008c 	.word	0x2000008c
     b8c:	20000090 	.word	0x20000090
     b90:	20000000 	.word	0x20000000

00000b94 <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
     b94:	b5f0      	push	{r4, r5, r6, r7, lr}
     b96:	b083      	sub	sp, #12
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
     b98:	ac01      	add	r4, sp, #4
     b9a:	2501      	movs	r5, #1
     b9c:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
     b9e:	2700      	movs	r7, #0
     ba0:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
     ba2:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
     ba4:	0021      	movs	r1, r4
     ba6:	203e      	movs	r0, #62	; 0x3e
     ba8:	4e06      	ldr	r6, [pc, #24]	; (bc4 <system_board_init+0x30>)
     baa:	47b0      	blx	r6
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     bac:	2280      	movs	r2, #128	; 0x80
     bae:	05d2      	lsls	r2, r2, #23
     bb0:	4b05      	ldr	r3, [pc, #20]	; (bc8 <system_board_init+0x34>)
     bb2:	619a      	str	r2, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
     bb4:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
     bb6:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
     bb8:	0021      	movs	r1, r4
     bba:	200f      	movs	r0, #15
     bbc:	47b0      	blx	r6
	port_pin_set_output_level(AT86RFX_RST_PIN, true);
	port_pin_set_output_level(AT86RFX_SLP_PIN, true);
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
	port_pin_set_config(AT86RFX_SPI_MISO, &pin_conf);
#endif	
}
     bbe:	b003      	add	sp, #12
     bc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     bc2:	46c0      	nop			; (mov r8, r8)
     bc4:	00000bcd 	.word	0x00000bcd
     bc8:	41004480 	.word	0x41004480

00000bcc <port_pin_set_config>:
 *  \param[in] config    Configuration settings for the pin
 */
void port_pin_set_config(
		const uint8_t gpio_pin,
		const struct port_config *const config)
{
     bcc:	b500      	push	{lr}
     bce:	b083      	sub	sp, #12
	config->mux_position = SYSTEM_PINMUX_GPIO;
     bd0:	ab01      	add	r3, sp, #4
     bd2:	2280      	movs	r2, #128	; 0x80
     bd4:	701a      	strb	r2, [r3, #0]

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = SYSTEM_PINMUX_GPIO;
	pinmux_config.direction    = (enum system_pinmux_pin_dir)config->direction;
     bd6:	780a      	ldrb	r2, [r1, #0]
     bd8:	705a      	strb	r2, [r3, #1]
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->input_pull;
     bda:	784a      	ldrb	r2, [r1, #1]
     bdc:	709a      	strb	r2, [r3, #2]
	pinmux_config.powersave    = config->powersave;
     bde:	788a      	ldrb	r2, [r1, #2]
     be0:	70da      	strb	r2, [r3, #3]

	system_pinmux_pin_set_config(gpio_pin, &pinmux_config);
     be2:	0019      	movs	r1, r3
     be4:	4b01      	ldr	r3, [pc, #4]	; (bec <port_pin_set_config+0x20>)
     be6:	4798      	blx	r3
}
     be8:	b003      	add	sp, #12
     bea:	bd00      	pop	{pc}
     bec:	00001131 	.word	0x00001131

00000bf0 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
     bf0:	b510      	push	{r4, lr}
	switch (clock_source) {
     bf2:	2808      	cmp	r0, #8
     bf4:	d803      	bhi.n	bfe <system_clock_source_get_hz+0xe>
     bf6:	0080      	lsls	r0, r0, #2
     bf8:	4b1c      	ldr	r3, [pc, #112]	; (c6c <system_clock_source_get_hz+0x7c>)
     bfa:	581b      	ldr	r3, [r3, r0]
     bfc:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
     bfe:	2000      	movs	r0, #0
     c00:	e032      	b.n	c68 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc.frequency;
     c02:	4b1b      	ldr	r3, [pc, #108]	; (c70 <system_clock_source_get_hz+0x80>)
     c04:	6918      	ldr	r0, [r3, #16]
     c06:	e02f      	b.n	c68 <system_clock_source_get_hz+0x78>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
     c08:	4b1a      	ldr	r3, [pc, #104]	; (c74 <system_clock_source_get_hz+0x84>)
     c0a:	6a1b      	ldr	r3, [r3, #32]
     c0c:	059b      	lsls	r3, r3, #22
     c0e:	0f9b      	lsrs	r3, r3, #30
     c10:	4819      	ldr	r0, [pc, #100]	; (c78 <system_clock_source_get_hz+0x88>)
     c12:	40d8      	lsrs	r0, r3
     c14:	e028      	b.n	c68 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc32k.frequency;
     c16:	4b16      	ldr	r3, [pc, #88]	; (c70 <system_clock_source_get_hz+0x80>)
     c18:	6958      	ldr	r0, [r3, #20]
     c1a:	e025      	b.n	c68 <system_clock_source_get_hz+0x78>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
     c1c:	4b14      	ldr	r3, [pc, #80]	; (c70 <system_clock_source_get_hz+0x80>)
     c1e:	681b      	ldr	r3, [r3, #0]
			return 0;
     c20:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
     c22:	079b      	lsls	r3, r3, #30
     c24:	d520      	bpl.n	c68 <system_clock_source_get_hz+0x78>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     c26:	4913      	ldr	r1, [pc, #76]	; (c74 <system_clock_source_get_hz+0x84>)
     c28:	2210      	movs	r2, #16
     c2a:	68cb      	ldr	r3, [r1, #12]
     c2c:	421a      	tst	r2, r3
     c2e:	d0fc      	beq.n	c2a <system_clock_source_get_hz+0x3a>
		switch(_system_clock_inst.dfll.control &
     c30:	4b0f      	ldr	r3, [pc, #60]	; (c70 <system_clock_source_get_hz+0x80>)
     c32:	681a      	ldr	r2, [r3, #0]
     c34:	2324      	movs	r3, #36	; 0x24
     c36:	4013      	ands	r3, r2
     c38:	2b04      	cmp	r3, #4
     c3a:	d001      	beq.n	c40 <system_clock_source_get_hz+0x50>
			return 48000000UL;
     c3c:	480f      	ldr	r0, [pc, #60]	; (c7c <system_clock_source_get_hz+0x8c>)
     c3e:	e013      	b.n	c68 <system_clock_source_get_hz+0x78>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
     c40:	2000      	movs	r0, #0
     c42:	4b0f      	ldr	r3, [pc, #60]	; (c80 <system_clock_source_get_hz+0x90>)
     c44:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
     c46:	4b0a      	ldr	r3, [pc, #40]	; (c70 <system_clock_source_get_hz+0x80>)
     c48:	689b      	ldr	r3, [r3, #8]
     c4a:	041b      	lsls	r3, r3, #16
     c4c:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
     c4e:	4358      	muls	r0, r3
     c50:	e00a      	b.n	c68 <system_clock_source_get_hz+0x78>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
     c52:	2350      	movs	r3, #80	; 0x50
     c54:	4a07      	ldr	r2, [pc, #28]	; (c74 <system_clock_source_get_hz+0x84>)
     c56:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
     c58:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
     c5a:	075b      	lsls	r3, r3, #29
     c5c:	d504      	bpl.n	c68 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.dpll.frequency;
     c5e:	4b04      	ldr	r3, [pc, #16]	; (c70 <system_clock_source_get_hz+0x80>)
     c60:	68d8      	ldr	r0, [r3, #12]
     c62:	e001      	b.n	c68 <system_clock_source_get_hz+0x78>
		return 32768UL;
     c64:	2080      	movs	r0, #128	; 0x80
     c66:	0200      	lsls	r0, r0, #8
	}
}
     c68:	bd10      	pop	{r4, pc}
     c6a:	46c0      	nop			; (mov r8, r8)
     c6c:	00004e20 	.word	0x00004e20
     c70:	20000094 	.word	0x20000094
     c74:	40000800 	.word	0x40000800
     c78:	007a1200 	.word	0x007a1200
     c7c:	02dc6c00 	.word	0x02dc6c00
     c80:	00001055 	.word	0x00001055

00000c84 <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
     c84:	b570      	push	{r4, r5, r6, lr}
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
     c86:	490c      	ldr	r1, [pc, #48]	; (cb8 <system_clock_source_osc8m_set_config+0x34>)
     c88:	6a0b      	ldr	r3, [r1, #32]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
     c8a:	7804      	ldrb	r4, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
     c8c:	7885      	ldrb	r5, [r0, #2]
	temp.bit.RUNSTDBY = config->run_in_standby;

	SYSCTRL->OSC8M = temp;
     c8e:	7840      	ldrb	r0, [r0, #1]
     c90:	2201      	movs	r2, #1
     c92:	4010      	ands	r0, r2
     c94:	0180      	lsls	r0, r0, #6
     c96:	2640      	movs	r6, #64	; 0x40
     c98:	43b3      	bics	r3, r6
     c9a:	4303      	orrs	r3, r0
     c9c:	402a      	ands	r2, r5
     c9e:	01d2      	lsls	r2, r2, #7
     ca0:	2080      	movs	r0, #128	; 0x80
     ca2:	4383      	bics	r3, r0
     ca4:	4313      	orrs	r3, r2
     ca6:	2203      	movs	r2, #3
     ca8:	4022      	ands	r2, r4
     caa:	0212      	lsls	r2, r2, #8
     cac:	4803      	ldr	r0, [pc, #12]	; (cbc <system_clock_source_osc8m_set_config+0x38>)
     cae:	4003      	ands	r3, r0
     cb0:	4313      	orrs	r3, r2
     cb2:	620b      	str	r3, [r1, #32]
}
     cb4:	bd70      	pop	{r4, r5, r6, pc}
     cb6:	46c0      	nop			; (mov r8, r8)
     cb8:	40000800 	.word	0x40000800
     cbc:	fffffcff 	.word	0xfffffcff

00000cc0 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
     cc0:	2808      	cmp	r0, #8
     cc2:	d803      	bhi.n	ccc <system_clock_source_enable+0xc>
     cc4:	0080      	lsls	r0, r0, #2
     cc6:	4b25      	ldr	r3, [pc, #148]	; (d5c <system_clock_source_enable+0x9c>)
     cc8:	581b      	ldr	r3, [r3, r0]
     cca:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     ccc:	2017      	movs	r0, #23
     cce:	e044      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
     cd0:	4a23      	ldr	r2, [pc, #140]	; (d60 <system_clock_source_enable+0xa0>)
     cd2:	6a13      	ldr	r3, [r2, #32]
     cd4:	2102      	movs	r1, #2
     cd6:	430b      	orrs	r3, r1
     cd8:	6213      	str	r3, [r2, #32]
		return STATUS_OK;
     cda:	2000      	movs	r0, #0
     cdc:	e03d      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
     cde:	4a20      	ldr	r2, [pc, #128]	; (d60 <system_clock_source_enable+0xa0>)
     ce0:	6993      	ldr	r3, [r2, #24]
     ce2:	2102      	movs	r1, #2
     ce4:	430b      	orrs	r3, r1
     ce6:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
     ce8:	2000      	movs	r0, #0
		break;
     cea:	e036      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
     cec:	4a1c      	ldr	r2, [pc, #112]	; (d60 <system_clock_source_enable+0xa0>)
     cee:	8a13      	ldrh	r3, [r2, #16]
     cf0:	2102      	movs	r1, #2
     cf2:	430b      	orrs	r3, r1
     cf4:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
     cf6:	2000      	movs	r0, #0
		break;
     cf8:	e02f      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
     cfa:	4a19      	ldr	r2, [pc, #100]	; (d60 <system_clock_source_enable+0xa0>)
     cfc:	8a93      	ldrh	r3, [r2, #20]
     cfe:	2102      	movs	r1, #2
     d00:	430b      	orrs	r3, r1
     d02:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
     d04:	2000      	movs	r0, #0
		break;
     d06:	e028      	b.n	d5a <system_clock_source_enable+0x9a>
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
     d08:	4916      	ldr	r1, [pc, #88]	; (d64 <system_clock_source_enable+0xa4>)
     d0a:	680b      	ldr	r3, [r1, #0]
     d0c:	2202      	movs	r2, #2
     d0e:	4313      	orrs	r3, r2
     d10:	600b      	str	r3, [r1, #0]
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
     d12:	4b13      	ldr	r3, [pc, #76]	; (d60 <system_clock_source_enable+0xa0>)
     d14:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     d16:	0019      	movs	r1, r3
     d18:	320e      	adds	r2, #14
     d1a:	68cb      	ldr	r3, [r1, #12]
     d1c:	421a      	tst	r2, r3
     d1e:	d0fc      	beq.n	d1a <system_clock_source_enable+0x5a>
	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
     d20:	4a10      	ldr	r2, [pc, #64]	; (d64 <system_clock_source_enable+0xa4>)
     d22:	6891      	ldr	r1, [r2, #8]
     d24:	4b0e      	ldr	r3, [pc, #56]	; (d60 <system_clock_source_enable+0xa0>)
     d26:	62d9      	str	r1, [r3, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
     d28:	6852      	ldr	r2, [r2, #4]
     d2a:	629a      	str	r2, [r3, #40]	; 0x28
	SYSCTRL->DFLLCTRL.reg = 0;
     d2c:	2200      	movs	r2, #0
     d2e:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     d30:	0019      	movs	r1, r3
     d32:	3210      	adds	r2, #16
     d34:	68cb      	ldr	r3, [r1, #12]
     d36:	421a      	tst	r2, r3
     d38:	d0fc      	beq.n	d34 <system_clock_source_enable+0x74>
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
     d3a:	4b0a      	ldr	r3, [pc, #40]	; (d64 <system_clock_source_enable+0xa4>)
     d3c:	681b      	ldr	r3, [r3, #0]
     d3e:	b29b      	uxth	r3, r3
     d40:	4a07      	ldr	r2, [pc, #28]	; (d60 <system_clock_source_enable+0xa0>)
     d42:	8493      	strh	r3, [r2, #36]	; 0x24
	return STATUS_OK;
     d44:	2000      	movs	r0, #0
     d46:	e008      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
     d48:	4905      	ldr	r1, [pc, #20]	; (d60 <system_clock_source_enable+0xa0>)
     d4a:	2244      	movs	r2, #68	; 0x44
     d4c:	5c8b      	ldrb	r3, [r1, r2]
     d4e:	2002      	movs	r0, #2
     d50:	4303      	orrs	r3, r0
     d52:	548b      	strb	r3, [r1, r2]
	return STATUS_OK;
     d54:	2000      	movs	r0, #0
		break;
     d56:	e000      	b.n	d5a <system_clock_source_enable+0x9a>
		return STATUS_OK;
     d58:	2000      	movs	r0, #0
}
     d5a:	4770      	bx	lr
     d5c:	00004e44 	.word	0x00004e44
     d60:	40000800 	.word	0x40000800
     d64:	20000094 	.word	0x20000094

00000d68 <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
     d68:	b530      	push	{r4, r5, lr}
     d6a:	b085      	sub	sp, #20
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
     d6c:	22c2      	movs	r2, #194	; 0xc2
     d6e:	00d2      	lsls	r2, r2, #3
     d70:	4b1a      	ldr	r3, [pc, #104]	; (ddc <system_clock_init+0x74>)
     d72:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
     d74:	4a1a      	ldr	r2, [pc, #104]	; (de0 <system_clock_init+0x78>)
     d76:	6853      	ldr	r3, [r2, #4]
     d78:	211e      	movs	r1, #30
     d7a:	438b      	bics	r3, r1
     d7c:	6053      	str	r3, [r2, #4]
	gclk_conf.source_generator = GCLK_GENERATOR_1;
     d7e:	2301      	movs	r3, #1
     d80:	466a      	mov	r2, sp
     d82:	7013      	strb	r3, [r2, #0]
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
     d84:	2400      	movs	r4, #0
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
     d86:	4d17      	ldr	r5, [pc, #92]	; (de4 <system_clock_init+0x7c>)
     d88:	b2e0      	uxtb	r0, r4
     d8a:	4669      	mov	r1, sp
     d8c:	47a8      	blx	r5
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
     d8e:	3401      	adds	r4, #1
     d90:	2c25      	cmp	r4, #37	; 0x25
     d92:	d1f9      	bne.n	d88 <system_clock_init+0x20>
	config->run_in_standby  = false;
     d94:	a803      	add	r0, sp, #12
     d96:	2400      	movs	r4, #0
     d98:	7044      	strb	r4, [r0, #1]
	config->on_demand       = true;
     d9a:	2501      	movs	r5, #1
     d9c:	7085      	strb	r5, [r0, #2]

	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
     d9e:	7004      	strb	r4, [r0, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;

	system_clock_source_osc8m_set_config(&osc8m_conf);
     da0:	4b11      	ldr	r3, [pc, #68]	; (de8 <system_clock_init+0x80>)
     da2:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
     da4:	2006      	movs	r0, #6
     da6:	4b11      	ldr	r3, [pc, #68]	; (dec <system_clock_init+0x84>)
     da8:	4798      	blx	r3


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
     daa:	4b11      	ldr	r3, [pc, #68]	; (df0 <system_clock_init+0x88>)
     dac:	4798      	blx	r3
	PM->CPUSEL.reg = (uint32_t)divider;
     dae:	4b11      	ldr	r3, [pc, #68]	; (df4 <system_clock_init+0x8c>)
     db0:	721c      	strb	r4, [r3, #8]
			PM->APBASEL.reg = (uint32_t)divider;
     db2:	725c      	strb	r4, [r3, #9]
			PM->APBBSEL.reg = (uint32_t)divider;
     db4:	729c      	strb	r4, [r3, #10]
			PM->APBCSEL.reg = (uint32_t)divider;
     db6:	72dc      	strb	r4, [r3, #11]
	config->division_factor    = 1;
     db8:	9501      	str	r5, [sp, #4]
	config->high_when_disabled = false;
     dba:	466b      	mov	r3, sp
     dbc:	705c      	strb	r4, [r3, #1]
	config->source_clock       = GCLK_SOURCE_OSC8M;
     dbe:	2306      	movs	r3, #6
     dc0:	466a      	mov	r2, sp
     dc2:	7013      	strb	r3, [r2, #0]
	config->run_in_standby     = false;
     dc4:	7214      	strb	r4, [r2, #8]
	config->output_enable      = false;
     dc6:	7254      	strb	r4, [r2, #9]
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
     dc8:	4669      	mov	r1, sp
     dca:	2000      	movs	r0, #0
     dcc:	4b0a      	ldr	r3, [pc, #40]	; (df8 <system_clock_init+0x90>)
     dce:	4798      	blx	r3
     dd0:	2000      	movs	r0, #0
     dd2:	4b0a      	ldr	r3, [pc, #40]	; (dfc <system_clock_init+0x94>)
     dd4:	4798      	blx	r3
#endif
}
     dd6:	b005      	add	sp, #20
     dd8:	bd30      	pop	{r4, r5, pc}
     dda:	46c0      	nop			; (mov r8, r8)
     ddc:	40000800 	.word	0x40000800
     de0:	41004000 	.word	0x41004000
     de4:	00001039 	.word	0x00001039
     de8:	00000c85 	.word	0x00000c85
     dec:	00000cc1 	.word	0x00000cc1
     df0:	00000e01 	.word	0x00000e01
     df4:	40000400 	.word	0x40000400
     df8:	00000e25 	.word	0x00000e25
     dfc:	00000edd 	.word	0x00000edd

00000e00 <system_gclk_init>:
			PM->APBAMASK.reg |= mask;
     e00:	4a06      	ldr	r2, [pc, #24]	; (e1c <system_gclk_init+0x1c>)
     e02:	6993      	ldr	r3, [r2, #24]
     e04:	2108      	movs	r1, #8
     e06:	430b      	orrs	r3, r1
     e08:	6193      	str	r3, [r2, #24]
{
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBA, PM_APBAMASK_GCLK);

	/* Software reset the module to ensure it is re-initialized correctly */
	GCLK->CTRL.reg = GCLK_CTRL_SWRST;
     e0a:	2201      	movs	r2, #1
     e0c:	4b04      	ldr	r3, [pc, #16]	; (e20 <system_gclk_init+0x20>)
     e0e:	701a      	strb	r2, [r3, #0]
	while (GCLK->CTRL.reg & GCLK_CTRL_SWRST) {
     e10:	0019      	movs	r1, r3
     e12:	780b      	ldrb	r3, [r1, #0]
     e14:	4213      	tst	r3, r2
     e16:	d1fc      	bne.n	e12 <system_gclk_init+0x12>
		/* Wait for reset to complete */
	}
}
     e18:	4770      	bx	lr
     e1a:	46c0      	nop			; (mov r8, r8)
     e1c:	40000400 	.word	0x40000400
     e20:	40000c00 	.word	0x40000c00

00000e24 <system_gclk_gen_set_config>:
 * \param[in] config     Configuration settings for the generator
 */
void system_gclk_gen_set_config(
		const uint8_t generator,
		struct system_gclk_gen_config *const config)
{
     e24:	b570      	push	{r4, r5, r6, lr}
     e26:	0006      	movs	r6, r0
	/* Sanity check arguments */
	Assert(config);

	/* Cache new register configurations to minimize sync requirements. */
	uint32_t new_genctrl_config = (generator << GCLK_GENCTRL_ID_Pos);
     e28:	0004      	movs	r4, r0
	uint32_t new_gendiv_config  = (generator << GCLK_GENDIV_ID_Pos);

	/* Select the requested source clock for the generator */
	new_genctrl_config |= config->source_clock << GCLK_GENCTRL_SRC_Pos;
     e2a:	780d      	ldrb	r5, [r1, #0]
     e2c:	022d      	lsls	r5, r5, #8
     e2e:	4305      	orrs	r5, r0

	/* Configure the clock to be either high or low when disabled */
	if (config->high_when_disabled) {
     e30:	784b      	ldrb	r3, [r1, #1]
     e32:	2b00      	cmp	r3, #0
     e34:	d002      	beq.n	e3c <system_gclk_gen_set_config+0x18>
		new_genctrl_config |= GCLK_GENCTRL_OOV;
     e36:	2380      	movs	r3, #128	; 0x80
     e38:	02db      	lsls	r3, r3, #11
     e3a:	431d      	orrs	r5, r3
	}

	/* Configure if the clock output to I/O pin should be enabled. */
	if (config->output_enable) {
     e3c:	7a4b      	ldrb	r3, [r1, #9]
     e3e:	2b00      	cmp	r3, #0
     e40:	d002      	beq.n	e48 <system_gclk_gen_set_config+0x24>
		new_genctrl_config |= GCLK_GENCTRL_OE;
     e42:	2380      	movs	r3, #128	; 0x80
     e44:	031b      	lsls	r3, r3, #12
     e46:	431d      	orrs	r5, r3
	}

	/* Set division factor */
	if (config->division_factor > 1) {
     e48:	6848      	ldr	r0, [r1, #4]
     e4a:	2801      	cmp	r0, #1
     e4c:	d910      	bls.n	e70 <system_gclk_gen_set_config+0x4c>
		/* Check if division is a power of two */
		if (((config->division_factor & (config->division_factor - 1)) == 0)) {
     e4e:	1e43      	subs	r3, r0, #1
     e50:	4218      	tst	r0, r3
     e52:	d134      	bne.n	ebe <system_gclk_gen_set_config+0x9a>
			 * register */

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
     e54:	2802      	cmp	r0, #2
     e56:	d930      	bls.n	eba <system_gclk_gen_set_config+0x96>
     e58:	2302      	movs	r3, #2
     e5a:	2200      	movs	r2, #0
						mask <<= 1) {
				div2_count++;
     e5c:	3201      	adds	r2, #1
						mask <<= 1) {
     e5e:	005b      	lsls	r3, r3, #1
			for (mask = (1UL << 1); mask < config->division_factor;
     e60:	4298      	cmp	r0, r3
     e62:	d8fb      	bhi.n	e5c <system_gclk_gen_set_config+0x38>
			}

			/* Set binary divider power of 2 division factor */
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
     e64:	0212      	lsls	r2, r2, #8
     e66:	4332      	orrs	r2, r6
     e68:	0014      	movs	r4, r2
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
     e6a:	2380      	movs	r3, #128	; 0x80
     e6c:	035b      	lsls	r3, r3, #13
     e6e:	431d      	orrs	r5, r3
		}

	}

	/* Enable or disable the clock in standby mode */
	if (config->run_in_standby) {
     e70:	7a0b      	ldrb	r3, [r1, #8]
     e72:	2b00      	cmp	r3, #0
     e74:	d002      	beq.n	e7c <system_gclk_gen_set_config+0x58>
		new_genctrl_config |= GCLK_GENCTRL_RUNSTDBY;
     e76:	2380      	movs	r3, #128	; 0x80
     e78:	039b      	lsls	r3, r3, #14
     e7a:	431d      	orrs	r5, r3
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     e7c:	4a13      	ldr	r2, [pc, #76]	; (ecc <system_gclk_gen_set_config+0xa8>)
     e7e:	7853      	ldrb	r3, [r2, #1]
	}

	while (system_gclk_is_syncing()) {
     e80:	b25b      	sxtb	r3, r3
     e82:	2b00      	cmp	r3, #0
     e84:	dbfb      	blt.n	e7e <system_gclk_gen_set_config+0x5a>
	cpu_irq_enter_critical();
     e86:	4b12      	ldr	r3, [pc, #72]	; (ed0 <system_gclk_gen_set_config+0xac>)
     e88:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the correct generator */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
     e8a:	4b12      	ldr	r3, [pc, #72]	; (ed4 <system_gclk_gen_set_config+0xb0>)
     e8c:	701e      	strb	r6, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     e8e:	4a0f      	ldr	r2, [pc, #60]	; (ecc <system_gclk_gen_set_config+0xa8>)
     e90:	7853      	ldrb	r3, [r2, #1]

	/* Write the new generator configuration */
	while (system_gclk_is_syncing()) {
     e92:	b25b      	sxtb	r3, r3
     e94:	2b00      	cmp	r3, #0
     e96:	dbfb      	blt.n	e90 <system_gclk_gen_set_config+0x6c>
		/* Wait for synchronization */
	};
	GCLK->GENDIV.reg  = new_gendiv_config;
     e98:	4b0c      	ldr	r3, [pc, #48]	; (ecc <system_gclk_gen_set_config+0xa8>)
     e9a:	609c      	str	r4, [r3, #8]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     e9c:	001a      	movs	r2, r3
     e9e:	7853      	ldrb	r3, [r2, #1]

	while (system_gclk_is_syncing()) {
     ea0:	b25b      	sxtb	r3, r3
     ea2:	2b00      	cmp	r3, #0
     ea4:	dbfb      	blt.n	e9e <system_gclk_gen_set_config+0x7a>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = new_genctrl_config | (GCLK->GENCTRL.reg & GCLK_GENCTRL_GENEN);
     ea6:	4a09      	ldr	r2, [pc, #36]	; (ecc <system_gclk_gen_set_config+0xa8>)
     ea8:	6853      	ldr	r3, [r2, #4]
     eaa:	2180      	movs	r1, #128	; 0x80
     eac:	0249      	lsls	r1, r1, #9
     eae:	400b      	ands	r3, r1
     eb0:	431d      	orrs	r5, r3
     eb2:	6055      	str	r5, [r2, #4]
	cpu_irq_leave_critical();
     eb4:	4b08      	ldr	r3, [pc, #32]	; (ed8 <system_gclk_gen_set_config+0xb4>)
     eb6:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     eb8:	bd70      	pop	{r4, r5, r6, pc}
			for (mask = (1UL << 1); mask < config->division_factor;
     eba:	2200      	movs	r2, #0
     ebc:	e7d2      	b.n	e64 <system_gclk_gen_set_config+0x40>
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;
     ebe:	0204      	lsls	r4, r0, #8
			new_gendiv_config  |=
     ec0:	4334      	orrs	r4, r6
			new_genctrl_config |= GCLK_GENCTRL_IDC;
     ec2:	2380      	movs	r3, #128	; 0x80
     ec4:	029b      	lsls	r3, r3, #10
     ec6:	431d      	orrs	r5, r3
     ec8:	e7d2      	b.n	e70 <system_gclk_gen_set_config+0x4c>
     eca:	46c0      	nop			; (mov r8, r8)
     ecc:	40000c00 	.word	0x40000c00
     ed0:	00000b25 	.word	0x00000b25
     ed4:	40000c08 	.word	0x40000c08
     ed8:	00000b65 	.word	0x00000b65

00000edc <system_gclk_gen_enable>:
 *
 * \param[in] generator  Generic Clock Generator index to enable
 */
void system_gclk_gen_enable(
		const uint8_t generator)
{
     edc:	b510      	push	{r4, lr}
     ede:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     ee0:	4a0b      	ldr	r2, [pc, #44]	; (f10 <system_gclk_gen_enable+0x34>)
     ee2:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     ee4:	b25b      	sxtb	r3, r3
     ee6:	2b00      	cmp	r3, #0
     ee8:	dbfb      	blt.n	ee2 <system_gclk_gen_enable+0x6>
	cpu_irq_enter_critical();
     eea:	4b0a      	ldr	r3, [pc, #40]	; (f14 <system_gclk_gen_enable+0x38>)
     eec:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the requested generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     eee:	4b0a      	ldr	r3, [pc, #40]	; (f18 <system_gclk_gen_enable+0x3c>)
     ef0:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     ef2:	4a07      	ldr	r2, [pc, #28]	; (f10 <system_gclk_gen_enable+0x34>)
     ef4:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     ef6:	b25b      	sxtb	r3, r3
     ef8:	2b00      	cmp	r3, #0
     efa:	dbfb      	blt.n	ef4 <system_gclk_gen_enable+0x18>
		/* Wait for synchronization */
	};

	/* Enable generator */
	GCLK->GENCTRL.reg |= GCLK_GENCTRL_GENEN;
     efc:	4a04      	ldr	r2, [pc, #16]	; (f10 <system_gclk_gen_enable+0x34>)
     efe:	6851      	ldr	r1, [r2, #4]
     f00:	2380      	movs	r3, #128	; 0x80
     f02:	025b      	lsls	r3, r3, #9
     f04:	430b      	orrs	r3, r1
     f06:	6053      	str	r3, [r2, #4]
	cpu_irq_leave_critical();
     f08:	4b04      	ldr	r3, [pc, #16]	; (f1c <system_gclk_gen_enable+0x40>)
     f0a:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     f0c:	bd10      	pop	{r4, pc}
     f0e:	46c0      	nop			; (mov r8, r8)
     f10:	40000c00 	.word	0x40000c00
     f14:	00000b25 	.word	0x00000b25
     f18:	40000c04 	.word	0x40000c04
     f1c:	00000b65 	.word	0x00000b65

00000f20 <system_gclk_gen_get_hz>:
 *
 * \return The frequency of the generic clock generator, in Hz.
 */
uint32_t system_gclk_gen_get_hz(
		const uint8_t generator)
{
     f20:	b570      	push	{r4, r5, r6, lr}
     f22:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     f24:	4a1a      	ldr	r2, [pc, #104]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f26:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     f28:	b25b      	sxtb	r3, r3
     f2a:	2b00      	cmp	r3, #0
     f2c:	dbfb      	blt.n	f26 <system_gclk_gen_get_hz+0x6>
	cpu_irq_enter_critical();
     f2e:	4b19      	ldr	r3, [pc, #100]	; (f94 <system_gclk_gen_get_hz+0x74>)
     f30:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the appropriate generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     f32:	4b19      	ldr	r3, [pc, #100]	; (f98 <system_gclk_gen_get_hz+0x78>)
     f34:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     f36:	4a16      	ldr	r2, [pc, #88]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f38:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     f3a:	b25b      	sxtb	r3, r3
     f3c:	2b00      	cmp	r3, #0
     f3e:	dbfb      	blt.n	f38 <system_gclk_gen_get_hz+0x18>
		/* Wait for synchronization */
	};

	/* Get the frequency of the source connected to the GCLK generator */
	uint32_t gen_input_hz = system_clock_source_get_hz(
			(enum system_clock_source)GCLK->GENCTRL.bit.SRC);
     f40:	4e13      	ldr	r6, [pc, #76]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f42:	6870      	ldr	r0, [r6, #4]
     f44:	04c0      	lsls	r0, r0, #19
     f46:	0ec0      	lsrs	r0, r0, #27
	uint32_t gen_input_hz = system_clock_source_get_hz(
     f48:	4b14      	ldr	r3, [pc, #80]	; (f9c <system_gclk_gen_get_hz+0x7c>)
     f4a:	4798      	blx	r3
     f4c:	0005      	movs	r5, r0

	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     f4e:	4b12      	ldr	r3, [pc, #72]	; (f98 <system_gclk_gen_get_hz+0x78>)
     f50:	701c      	strb	r4, [r3, #0]

	uint8_t divsel = GCLK->GENCTRL.bit.DIVSEL;
     f52:	6876      	ldr	r6, [r6, #4]
     f54:	02f6      	lsls	r6, r6, #11
     f56:	0ff6      	lsrs	r6, r6, #31

	/* Select the appropriate generator division register */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
     f58:	4b11      	ldr	r3, [pc, #68]	; (fa0 <system_gclk_gen_get_hz+0x80>)
     f5a:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     f5c:	4a0c      	ldr	r2, [pc, #48]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f5e:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     f60:	b25b      	sxtb	r3, r3
     f62:	2b00      	cmp	r3, #0
     f64:	dbfb      	blt.n	f5e <system_gclk_gen_get_hz+0x3e>
		/* Wait for synchronization */
	};

	uint32_t divider = GCLK->GENDIV.bit.DIV;
     f66:	4b0a      	ldr	r3, [pc, #40]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f68:	689c      	ldr	r4, [r3, #8]
     f6a:	0224      	lsls	r4, r4, #8
     f6c:	0c24      	lsrs	r4, r4, #16
	cpu_irq_leave_critical();
     f6e:	4b0d      	ldr	r3, [pc, #52]	; (fa4 <system_gclk_gen_get_hz+0x84>)
     f70:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Check if the generator is using fractional or binary division */
	if (!divsel && divider > 1) {
     f72:	2e00      	cmp	r6, #0
     f74:	d107      	bne.n	f86 <system_gclk_gen_get_hz+0x66>
     f76:	2c01      	cmp	r4, #1
     f78:	d907      	bls.n	f8a <system_gclk_gen_get_hz+0x6a>
		gen_input_hz /= divider;
     f7a:	0021      	movs	r1, r4
     f7c:	0028      	movs	r0, r5
     f7e:	4b0a      	ldr	r3, [pc, #40]	; (fa8 <system_gclk_gen_get_hz+0x88>)
     f80:	4798      	blx	r3
     f82:	0005      	movs	r5, r0
     f84:	e001      	b.n	f8a <system_gclk_gen_get_hz+0x6a>
	} else if (divsel) {
		gen_input_hz >>= (divider+1);
     f86:	3401      	adds	r4, #1
     f88:	40e5      	lsrs	r5, r4
	}

	return gen_input_hz;
}
     f8a:	0028      	movs	r0, r5
     f8c:	bd70      	pop	{r4, r5, r6, pc}
     f8e:	46c0      	nop			; (mov r8, r8)
     f90:	40000c00 	.word	0x40000c00
     f94:	00000b25 	.word	0x00000b25
     f98:	40000c04 	.word	0x40000c04
     f9c:	00000bf1 	.word	0x00000bf1
     fa0:	40000c08 	.word	0x40000c08
     fa4:	00000b65 	.word	0x00000b65
     fa8:	00001539 	.word	0x00001539

00000fac <system_gclk_chan_enable>:
 *
 * \param[in] channel   Generic Clock channel to enable
 */
void system_gclk_chan_enable(
		const uint8_t channel)
{
     fac:	b510      	push	{r4, lr}
     fae:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
     fb0:	4b06      	ldr	r3, [pc, #24]	; (fcc <system_gclk_chan_enable+0x20>)
     fb2:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
     fb4:	4b06      	ldr	r3, [pc, #24]	; (fd0 <system_gclk_chan_enable+0x24>)
     fb6:	701c      	strb	r4, [r3, #0]

	/* Enable the generic clock */
	GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_CLKEN;
     fb8:	4a06      	ldr	r2, [pc, #24]	; (fd4 <system_gclk_chan_enable+0x28>)
     fba:	8853      	ldrh	r3, [r2, #2]
     fbc:	2180      	movs	r1, #128	; 0x80
     fbe:	01c9      	lsls	r1, r1, #7
     fc0:	430b      	orrs	r3, r1
     fc2:	8053      	strh	r3, [r2, #2]
	cpu_irq_leave_critical();
     fc4:	4b04      	ldr	r3, [pc, #16]	; (fd8 <system_gclk_chan_enable+0x2c>)
     fc6:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     fc8:	bd10      	pop	{r4, pc}
     fca:	46c0      	nop			; (mov r8, r8)
     fcc:	00000b25 	.word	0x00000b25
     fd0:	40000c02 	.word	0x40000c02
     fd4:	40000c00 	.word	0x40000c00
     fd8:	00000b65 	.word	0x00000b65

00000fdc <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
     fdc:	b510      	push	{r4, lr}
     fde:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
     fe0:	4b0f      	ldr	r3, [pc, #60]	; (1020 <system_gclk_chan_disable+0x44>)
     fe2:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
     fe4:	4b0f      	ldr	r3, [pc, #60]	; (1024 <system_gclk_chan_disable+0x48>)
     fe6:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
     fe8:	4a0f      	ldr	r2, [pc, #60]	; (1028 <system_gclk_chan_disable+0x4c>)
     fea:	8853      	ldrh	r3, [r2, #2]
     fec:	051b      	lsls	r3, r3, #20
     fee:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
     ff0:	8853      	ldrh	r3, [r2, #2]
     ff2:	490e      	ldr	r1, [pc, #56]	; (102c <system_gclk_chan_disable+0x50>)
     ff4:	400b      	ands	r3, r1
     ff6:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
     ff8:	8853      	ldrh	r3, [r2, #2]
     ffa:	490d      	ldr	r1, [pc, #52]	; (1030 <system_gclk_chan_disable+0x54>)
     ffc:	400b      	ands	r3, r1
     ffe:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    1000:	0011      	movs	r1, r2
    1002:	2280      	movs	r2, #128	; 0x80
    1004:	01d2      	lsls	r2, r2, #7
    1006:	884b      	ldrh	r3, [r1, #2]
    1008:	4213      	tst	r3, r2
    100a:	d1fc      	bne.n	1006 <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    100c:	4906      	ldr	r1, [pc, #24]	; (1028 <system_gclk_chan_disable+0x4c>)
    100e:	884a      	ldrh	r2, [r1, #2]
    1010:	0203      	lsls	r3, r0, #8
    1012:	4806      	ldr	r0, [pc, #24]	; (102c <system_gclk_chan_disable+0x50>)
    1014:	4002      	ands	r2, r0
    1016:	4313      	orrs	r3, r2
    1018:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
    101a:	4b06      	ldr	r3, [pc, #24]	; (1034 <system_gclk_chan_disable+0x58>)
    101c:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    101e:	bd10      	pop	{r4, pc}
    1020:	00000b25 	.word	0x00000b25
    1024:	40000c02 	.word	0x40000c02
    1028:	40000c00 	.word	0x40000c00
    102c:	fffff0ff 	.word	0xfffff0ff
    1030:	ffffbfff 	.word	0xffffbfff
    1034:	00000b65 	.word	0x00000b65

00001038 <system_gclk_chan_set_config>:
{
    1038:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    103a:	780c      	ldrb	r4, [r1, #0]
    103c:	0224      	lsls	r4, r4, #8
    103e:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
    1040:	4b02      	ldr	r3, [pc, #8]	; (104c <system_gclk_chan_set_config+0x14>)
    1042:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    1044:	b2a4      	uxth	r4, r4
    1046:	4b02      	ldr	r3, [pc, #8]	; (1050 <system_gclk_chan_set_config+0x18>)
    1048:	805c      	strh	r4, [r3, #2]
}
    104a:	bd10      	pop	{r4, pc}
    104c:	00000fdd 	.word	0x00000fdd
    1050:	40000c00 	.word	0x40000c00

00001054 <system_gclk_chan_get_hz>:
 *
 * \return The frequency of the generic clock channel, in Hz.
 */
uint32_t system_gclk_chan_get_hz(
		const uint8_t channel)
{
    1054:	b510      	push	{r4, lr}
    1056:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1058:	4b06      	ldr	r3, [pc, #24]	; (1074 <system_gclk_chan_get_hz+0x20>)
    105a:	4798      	blx	r3
	uint8_t gen_id;

	system_interrupt_enter_critical_section();

	/* Select the requested generic clock channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    105c:	4b06      	ldr	r3, [pc, #24]	; (1078 <system_gclk_chan_get_hz+0x24>)
    105e:	701c      	strb	r4, [r3, #0]
	gen_id = GCLK->CLKCTRL.bit.GEN;
    1060:	4b06      	ldr	r3, [pc, #24]	; (107c <system_gclk_chan_get_hz+0x28>)
    1062:	885c      	ldrh	r4, [r3, #2]
    1064:	0524      	lsls	r4, r4, #20
    1066:	0f24      	lsrs	r4, r4, #28
	cpu_irq_leave_critical();
    1068:	4b05      	ldr	r3, [pc, #20]	; (1080 <system_gclk_chan_get_hz+0x2c>)
    106a:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Return the clock speed of the associated GCLK generator */
	return system_gclk_gen_get_hz(gen_id);
    106c:	0020      	movs	r0, r4
    106e:	4b05      	ldr	r3, [pc, #20]	; (1084 <system_gclk_chan_get_hz+0x30>)
    1070:	4798      	blx	r3
}
    1072:	bd10      	pop	{r4, pc}
    1074:	00000b25 	.word	0x00000b25
    1078:	40000c02 	.word	0x40000c02
    107c:	40000c00 	.word	0x40000c00
    1080:	00000b65 	.word	0x00000b65
    1084:	00000f21 	.word	0x00000f21

00001088 <_system_pinmux_config>:
 */
static void _system_pinmux_config(
		PortGroup *const port,
		const uint32_t pin_mask,
		const struct system_pinmux_config *const config)
{
    1088:	b530      	push	{r4, r5, lr}

	/* Track the configuration bits into a temporary variable before writing */
	uint32_t pin_cfg = 0;

	/* Enabled powersave mode, don't create configuration */
	if (!config->powersave) {
    108a:	78d3      	ldrb	r3, [r2, #3]
    108c:	2b00      	cmp	r3, #0
    108e:	d135      	bne.n	10fc <_system_pinmux_config+0x74>
		/* Enable the pin peripheral MUX flag if non-GPIO selected (pinmux will
		 * be written later) and store the new MUX mask */
		if (config->mux_position != SYSTEM_PINMUX_GPIO) {
    1090:	7813      	ldrb	r3, [r2, #0]
    1092:	2b80      	cmp	r3, #128	; 0x80
    1094:	d029      	beq.n	10ea <_system_pinmux_config+0x62>
			pin_cfg |= PORT_WRCONFIG_PMUXEN;
			pin_cfg |= (config->mux_position << PORT_WRCONFIG_PMUX_Pos);
    1096:	061b      	lsls	r3, r3, #24
    1098:	2480      	movs	r4, #128	; 0x80
    109a:	0264      	lsls	r4, r4, #9
    109c:	4323      	orrs	r3, r4
		}

		/* Check if the user has requested that the input buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_INPUT) ||
    109e:	7854      	ldrb	r4, [r2, #1]
    10a0:	2502      	movs	r5, #2
    10a2:	43ac      	bics	r4, r5
    10a4:	d106      	bne.n	10b4 <_system_pinmux_config+0x2c>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Enable input buffer flag */
			pin_cfg |= PORT_WRCONFIG_INEN;

			/* Enable pull-up/pull-down control flag if requested */
			if (config->input_pull != SYSTEM_PINMUX_PIN_PULL_NONE) {
    10a6:	7894      	ldrb	r4, [r2, #2]
    10a8:	2c00      	cmp	r4, #0
    10aa:	d120      	bne.n	10ee <_system_pinmux_config+0x66>
			pin_cfg |= PORT_WRCONFIG_INEN;
    10ac:	2480      	movs	r4, #128	; 0x80
    10ae:	02a4      	lsls	r4, r4, #10
    10b0:	4323      	orrs	r3, r4
				pin_cfg |= PORT_WRCONFIG_PULLEN;
			}

			/* Clear the port DIR bits to disable the output buffer */
			port->DIRCLR.reg = pin_mask;
    10b2:	6041      	str	r1, [r0, #4]
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    10b4:	7854      	ldrb	r4, [r2, #1]
    10b6:	3c01      	subs	r4, #1
    10b8:	2c01      	cmp	r4, #1
    10ba:	d91c      	bls.n	10f6 <_system_pinmux_config+0x6e>
		port->DIRCLR.reg = pin_mask;
	}

	/* The Write Configuration register (WRCONFIG) requires the
	 * pins to to grouped into two 16-bit half-words - split them out here */
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    10bc:	040d      	lsls	r5, r1, #16
    10be:	0c2d      	lsrs	r5, r5, #16

	/* Configure the lower 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    10c0:	24a0      	movs	r4, #160	; 0xa0
    10c2:	05e4      	lsls	r4, r4, #23
    10c4:	432c      	orrs	r4, r5
    10c6:	431c      	orrs	r4, r3
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    10c8:	6284      	str	r4, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    10ca:	0c0d      	lsrs	r5, r1, #16

	/* Configure the upper 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    10cc:	24d0      	movs	r4, #208	; 0xd0
    10ce:	0624      	lsls	r4, r4, #24
    10d0:	432c      	orrs	r4, r5
    10d2:	431c      	orrs	r4, r3
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    10d4:	6284      	str	r4, [r0, #40]	; 0x28
			PORT_WRCONFIG_HWSEL;

	if(!config->powersave) {
    10d6:	78d4      	ldrb	r4, [r2, #3]
    10d8:	2c00      	cmp	r4, #0
    10da:	d122      	bne.n	1122 <_system_pinmux_config+0x9a>
		/* Set the pull-up state once the port pins are configured if one was
		 * requested and it does not violate the valid set of port
		 * configurations */
		if (pin_cfg & PORT_WRCONFIG_PULLEN) {
    10dc:	035b      	lsls	r3, r3, #13
    10de:	d51c      	bpl.n	111a <_system_pinmux_config+0x92>
			/* Set the OUT register bits to enable the pull-up if requested,
			 * clear to enable pull-down */
			if (config->input_pull == SYSTEM_PINMUX_PIN_PULL_UP) {
    10e0:	7893      	ldrb	r3, [r2, #2]
    10e2:	2b01      	cmp	r3, #1
    10e4:	d01e      	beq.n	1124 <_system_pinmux_config+0x9c>
				port->OUTSET.reg = pin_mask;
			} else {
				port->OUTCLR.reg = pin_mask;
    10e6:	6141      	str	r1, [r0, #20]
    10e8:	e017      	b.n	111a <_system_pinmux_config+0x92>
	uint32_t pin_cfg = 0;
    10ea:	2300      	movs	r3, #0
    10ec:	e7d7      	b.n	109e <_system_pinmux_config+0x16>
				pin_cfg |= PORT_WRCONFIG_PULLEN;
    10ee:	24c0      	movs	r4, #192	; 0xc0
    10f0:	02e4      	lsls	r4, r4, #11
    10f2:	4323      	orrs	r3, r4
    10f4:	e7dd      	b.n	10b2 <_system_pinmux_config+0x2a>
			pin_cfg &= ~PORT_WRCONFIG_PULLEN;
    10f6:	4c0d      	ldr	r4, [pc, #52]	; (112c <_system_pinmux_config+0xa4>)
    10f8:	4023      	ands	r3, r4
    10fa:	e7df      	b.n	10bc <_system_pinmux_config+0x34>
		port->DIRCLR.reg = pin_mask;
    10fc:	6041      	str	r1, [r0, #4]
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    10fe:	040c      	lsls	r4, r1, #16
    1100:	0c24      	lsrs	r4, r4, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1102:	23a0      	movs	r3, #160	; 0xa0
    1104:	05db      	lsls	r3, r3, #23
    1106:	4323      	orrs	r3, r4
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1108:	6283      	str	r3, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    110a:	0c0c      	lsrs	r4, r1, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    110c:	23d0      	movs	r3, #208	; 0xd0
    110e:	061b      	lsls	r3, r3, #24
    1110:	4323      	orrs	r3, r4
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1112:	6283      	str	r3, [r0, #40]	; 0x28
	if(!config->powersave) {
    1114:	78d3      	ldrb	r3, [r2, #3]
    1116:	2b00      	cmp	r3, #0
    1118:	d103      	bne.n	1122 <_system_pinmux_config+0x9a>
			}
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    111a:	7853      	ldrb	r3, [r2, #1]
    111c:	3b01      	subs	r3, #1
    111e:	2b01      	cmp	r3, #1
    1120:	d902      	bls.n	1128 <_system_pinmux_config+0xa0>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Set the port DIR bits to enable the output buffer */
			port->DIRSET.reg = pin_mask;
		}
	}
}
    1122:	bd30      	pop	{r4, r5, pc}
				port->OUTSET.reg = pin_mask;
    1124:	6181      	str	r1, [r0, #24]
    1126:	e7f8      	b.n	111a <_system_pinmux_config+0x92>
			port->DIRSET.reg = pin_mask;
    1128:	6081      	str	r1, [r0, #8]
}
    112a:	e7fa      	b.n	1122 <_system_pinmux_config+0x9a>
    112c:	fffbffff 	.word	0xfffbffff

00001130 <system_pinmux_pin_set_config>:
 * \param[in] config    Configuration settings for the pin
 */
void system_pinmux_pin_set_config(
		const uint8_t gpio_pin,
		const struct system_pinmux_config *const config)
{
    1130:	b510      	push	{r4, lr}
    1132:	000a      	movs	r2, r1
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    1134:	09c1      	lsrs	r1, r0, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    1136:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
    1138:	2900      	cmp	r1, #0
    113a:	d104      	bne.n	1146 <system_pinmux_pin_set_config+0x16>
		return &(ports[port_index]->Group[group_index]);
    113c:	0943      	lsrs	r3, r0, #5
    113e:	01db      	lsls	r3, r3, #7
    1140:	4905      	ldr	r1, [pc, #20]	; (1158 <system_pinmux_pin_set_config+0x28>)
    1142:	468c      	mov	ip, r1
    1144:	4463      	add	r3, ip
	PortGroup *const port = system_pinmux_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask = (1UL << (gpio_pin % 32));
    1146:	241f      	movs	r4, #31
    1148:	4020      	ands	r0, r4
    114a:	2101      	movs	r1, #1
    114c:	4081      	lsls	r1, r0

	_system_pinmux_config(port, pin_mask, config);
    114e:	0018      	movs	r0, r3
    1150:	4b02      	ldr	r3, [pc, #8]	; (115c <system_pinmux_pin_set_config+0x2c>)
    1152:	4798      	blx	r3
}
    1154:	bd10      	pop	{r4, pc}
    1156:	46c0      	nop			; (mov r8, r8)
    1158:	41004400 	.word	0x41004400
    115c:	00001089 	.word	0x00001089

00001160 <_system_dummy_init>:
 */
void _system_dummy_init(void);
void _system_dummy_init(void)
{
	return;
}
    1160:	4770      	bx	lr
	...

00001164 <system_init>:
 *  - Board hardware initialization (via the Board module)
 *  - Event system driver initialization (via the EVSYS module)
 *  - External Interrupt driver initialization (via the EXTINT module)
 */
void system_init(void)
{
    1164:	b510      	push	{r4, lr}
	/* Configure GCLK and clock sources according to conf_clocks.h */
	system_clock_init();
    1166:	4b05      	ldr	r3, [pc, #20]	; (117c <system_init+0x18>)
    1168:	4798      	blx	r3

	/* Initialize board hardware */
	system_board_init();
    116a:	4b05      	ldr	r3, [pc, #20]	; (1180 <system_init+0x1c>)
    116c:	4798      	blx	r3

	/* Initialize EVSYS hardware */
	_system_events_init();
    116e:	4b05      	ldr	r3, [pc, #20]	; (1184 <system_init+0x20>)
    1170:	4798      	blx	r3

	/* Initialize External hardware */
	_system_extint_init();
    1172:	4b05      	ldr	r3, [pc, #20]	; (1188 <system_init+0x24>)
    1174:	4798      	blx	r3
	
	/* Initialize DIVAS hardware */
	_system_divas_init();
    1176:	4b05      	ldr	r3, [pc, #20]	; (118c <system_init+0x28>)
    1178:	4798      	blx	r3
}
    117a:	bd10      	pop	{r4, pc}
    117c:	00000d69 	.word	0x00000d69
    1180:	00000b95 	.word	0x00000b95
    1184:	00001161 	.word	0x00001161
    1188:	000001cd 	.word	0x000001cd
    118c:	00001161 	.word	0x00001161

00001190 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    1190:	e7fe      	b.n	1190 <Dummy_Handler>
	...

00001194 <Reset_Handler>:
{
    1194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
    1196:	4a2a      	ldr	r2, [pc, #168]	; (1240 <Reset_Handler+0xac>)
    1198:	4b2a      	ldr	r3, [pc, #168]	; (1244 <Reset_Handler+0xb0>)
    119a:	429a      	cmp	r2, r3
    119c:	d011      	beq.n	11c2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
    119e:	001a      	movs	r2, r3
    11a0:	4b29      	ldr	r3, [pc, #164]	; (1248 <Reset_Handler+0xb4>)
    11a2:	429a      	cmp	r2, r3
    11a4:	d20d      	bcs.n	11c2 <Reset_Handler+0x2e>
    11a6:	4a29      	ldr	r2, [pc, #164]	; (124c <Reset_Handler+0xb8>)
    11a8:	3303      	adds	r3, #3
    11aa:	1a9b      	subs	r3, r3, r2
    11ac:	089b      	lsrs	r3, r3, #2
    11ae:	3301      	adds	r3, #1
    11b0:	009b      	lsls	r3, r3, #2
    11b2:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
    11b4:	4823      	ldr	r0, [pc, #140]	; (1244 <Reset_Handler+0xb0>)
    11b6:	4922      	ldr	r1, [pc, #136]	; (1240 <Reset_Handler+0xac>)
    11b8:	588c      	ldr	r4, [r1, r2]
    11ba:	5084      	str	r4, [r0, r2]
    11bc:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    11be:	429a      	cmp	r2, r3
    11c0:	d1fa      	bne.n	11b8 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
    11c2:	4a23      	ldr	r2, [pc, #140]	; (1250 <Reset_Handler+0xbc>)
    11c4:	4b23      	ldr	r3, [pc, #140]	; (1254 <Reset_Handler+0xc0>)
    11c6:	429a      	cmp	r2, r3
    11c8:	d20a      	bcs.n	11e0 <Reset_Handler+0x4c>
    11ca:	43d3      	mvns	r3, r2
    11cc:	4921      	ldr	r1, [pc, #132]	; (1254 <Reset_Handler+0xc0>)
    11ce:	185b      	adds	r3, r3, r1
    11d0:	2103      	movs	r1, #3
    11d2:	438b      	bics	r3, r1
    11d4:	3304      	adds	r3, #4
    11d6:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
    11d8:	2100      	movs	r1, #0
    11da:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
    11dc:	4293      	cmp	r3, r2
    11de:	d1fc      	bne.n	11da <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    11e0:	4a1d      	ldr	r2, [pc, #116]	; (1258 <Reset_Handler+0xc4>)
    11e2:	21ff      	movs	r1, #255	; 0xff
    11e4:	4b1d      	ldr	r3, [pc, #116]	; (125c <Reset_Handler+0xc8>)
    11e6:	438b      	bics	r3, r1
    11e8:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    11ea:	39fd      	subs	r1, #253	; 0xfd
    11ec:	2390      	movs	r3, #144	; 0x90
    11ee:	005b      	lsls	r3, r3, #1
    11f0:	4a1b      	ldr	r2, [pc, #108]	; (1260 <Reset_Handler+0xcc>)
    11f2:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
    11f4:	4a1b      	ldr	r2, [pc, #108]	; (1264 <Reset_Handler+0xd0>)
    11f6:	78d3      	ldrb	r3, [r2, #3]
    11f8:	2503      	movs	r5, #3
    11fa:	43ab      	bics	r3, r5
    11fc:	2402      	movs	r4, #2
    11fe:	4323      	orrs	r3, r4
    1200:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
    1202:	78d3      	ldrb	r3, [r2, #3]
    1204:	270c      	movs	r7, #12
    1206:	43bb      	bics	r3, r7
    1208:	2608      	movs	r6, #8
    120a:	4333      	orrs	r3, r6
    120c:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    120e:	4b16      	ldr	r3, [pc, #88]	; (1268 <Reset_Handler+0xd4>)
    1210:	7b98      	ldrb	r0, [r3, #14]
    1212:	2230      	movs	r2, #48	; 0x30
    1214:	4390      	bics	r0, r2
    1216:	2220      	movs	r2, #32
    1218:	4310      	orrs	r0, r2
    121a:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    121c:	7b99      	ldrb	r1, [r3, #14]
    121e:	43b9      	bics	r1, r7
    1220:	4331      	orrs	r1, r6
    1222:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    1224:	7b9a      	ldrb	r2, [r3, #14]
    1226:	43aa      	bics	r2, r5
    1228:	4322      	orrs	r2, r4
    122a:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    122c:	4a0f      	ldr	r2, [pc, #60]	; (126c <Reset_Handler+0xd8>)
    122e:	6853      	ldr	r3, [r2, #4]
    1230:	2180      	movs	r1, #128	; 0x80
    1232:	430b      	orrs	r3, r1
    1234:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    1236:	4b0e      	ldr	r3, [pc, #56]	; (1270 <Reset_Handler+0xdc>)
    1238:	4798      	blx	r3
        main();
    123a:	4b0e      	ldr	r3, [pc, #56]	; (1274 <Reset_Handler+0xe0>)
    123c:	4798      	blx	r3
    123e:	e7fe      	b.n	123e <Reset_Handler+0xaa>
    1240:	00005054 	.word	0x00005054
    1244:	20000000 	.word	0x20000000
    1248:	2000006c 	.word	0x2000006c
    124c:	20000004 	.word	0x20000004
    1250:	2000006c 	.word	0x2000006c
    1254:	2000026c 	.word	0x2000026c
    1258:	e000ed00 	.word	0xe000ed00
    125c:	00000000 	.word	0x00000000
    1260:	41007000 	.word	0x41007000
    1264:	41005000 	.word	0x41005000
    1268:	41004800 	.word	0x41004800
    126c:	41004000 	.word	0x41004000
    1270:	000024e5 	.word	0x000024e5
    1274:	000013c5 	.word	0x000013c5

00001278 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    1278:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    127a:	4a06      	ldr	r2, [pc, #24]	; (1294 <_sbrk+0x1c>)
    127c:	6812      	ldr	r2, [r2, #0]
    127e:	2a00      	cmp	r2, #0
    1280:	d004      	beq.n	128c <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1282:	4a04      	ldr	r2, [pc, #16]	; (1294 <_sbrk+0x1c>)
    1284:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    1286:	18c3      	adds	r3, r0, r3
    1288:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    128a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    128c:	4902      	ldr	r1, [pc, #8]	; (1298 <_sbrk+0x20>)
    128e:	4a01      	ldr	r2, [pc, #4]	; (1294 <_sbrk+0x1c>)
    1290:	6011      	str	r1, [r2, #0]
    1292:	e7f6      	b.n	1282 <_sbrk+0xa>
    1294:	200000ac 	.word	0x200000ac
    1298:	20002270 	.word	0x20002270

0000129c <extint_detection_callback>:
	return (port_base->IN.reg & pin_mask);
    129c:	4b09      	ldr	r3, [pc, #36]	; (12c4 <extint_detection_callback+0x28>)
    129e:	6a1b      	ldr	r3, [r3, #32]
	if (level) {
    12a0:	061b      	lsls	r3, r3, #24
    12a2:	d409      	bmi.n	12b8 <extint_detection_callback+0x1c>
	} else {
		port_base->OUTCLR.reg = pin_mask;
    12a4:	2280      	movs	r2, #128	; 0x80
    12a6:	05d2      	lsls	r2, r2, #23
    12a8:	4b07      	ldr	r3, [pc, #28]	; (12c8 <extint_detection_callback+0x2c>)
    12aa:	615a      	str	r2, [r3, #20]
void extint_detection_callback(void)
{
	bool pin_state = port_pin_get_input_level(PIN_PA07);
    port_pin_set_output_level(LED_0_PIN, pin_state);
	
	pulse++;
    12ac:	4a07      	ldr	r2, [pc, #28]	; (12cc <extint_detection_callback+0x30>)
    12ae:	7813      	ldrb	r3, [r2, #0]
    12b0:	3301      	adds	r3, #1
    12b2:	b2db      	uxtb	r3, r3
    12b4:	7013      	strb	r3, [r2, #0]
}
    12b6:	4770      	bx	lr
		port_base->OUTSET.reg = pin_mask;
    12b8:	2280      	movs	r2, #128	; 0x80
    12ba:	05d2      	lsls	r2, r2, #23
    12bc:	4b02      	ldr	r3, [pc, #8]	; (12c8 <extint_detection_callback+0x2c>)
    12be:	619a      	str	r2, [r3, #24]
    12c0:	e7f4      	b.n	12ac <extint_detection_callback+0x10>
    12c2:	46c0      	nop			; (mov r8, r8)
    12c4:	41004400 	.word	0x41004400
    12c8:	41004480 	.word	0x41004480
    12cc:	200000b4 	.word	0x200000b4

000012d0 <configure_extint_channel>:
{
    12d0:	b510      	push	{r4, lr}
    12d2:	b084      	sub	sp, #16
	extint_chan_get_config_defaults(&config_extint_chan);
    12d4:	ac01      	add	r4, sp, #4
    12d6:	0020      	movs	r0, r4
    12d8:	4b07      	ldr	r3, [pc, #28]	; (12f8 <configure_extint_channel+0x28>)
    12da:	4798      	blx	r3
	config_extint_chan.gpio_pin           = PIN_PA07A_EIC_EXTINT7;
    12dc:	2307      	movs	r3, #7
    12de:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux       = MUX_PA07A_EIC_EXTINT7;
    12e0:	2300      	movs	r3, #0
    12e2:	6063      	str	r3, [r4, #4]
	config_extint_chan.gpio_pin_pull      = EXTINT_PULL_UP;
    12e4:	3301      	adds	r3, #1
    12e6:	7223      	strb	r3, [r4, #8]
	config_extint_chan.detection_criteria = EXTINT_DETECT_RISING;
    12e8:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(7, &config_extint_chan);
    12ea:	0021      	movs	r1, r4
    12ec:	2007      	movs	r0, #7
    12ee:	4b03      	ldr	r3, [pc, #12]	; (12fc <configure_extint_channel+0x2c>)
    12f0:	4798      	blx	r3
}
    12f2:	b004      	add	sp, #16
    12f4:	bd10      	pop	{r4, pc}
    12f6:	46c0      	nop			; (mov r8, r8)
    12f8:	00000239 	.word	0x00000239
    12fc:	0000024d 	.word	0x0000024d

00001300 <configure_extint_callbacks>:
{
    1300:	b510      	push	{r4, lr}
extint_register_callback(extint_detection_callback,7,EXTINT_CALLBACK_TYPE_DETECT);
    1302:	2200      	movs	r2, #0
    1304:	2107      	movs	r1, #7
    1306:	4804      	ldr	r0, [pc, #16]	; (1318 <configure_extint_callbacks+0x18>)
    1308:	4b04      	ldr	r3, [pc, #16]	; (131c <configure_extint_callbacks+0x1c>)
    130a:	4798      	blx	r3
extint_chan_enable_callback(7,EXTINT_CALLBACK_TYPE_DETECT);
    130c:	2100      	movs	r1, #0
    130e:	2007      	movs	r0, #7
    1310:	4b03      	ldr	r3, [pc, #12]	; (1320 <configure_extint_callbacks+0x20>)
    1312:	4798      	blx	r3
}
    1314:	bd10      	pop	{r4, pc}
    1316:	46c0      	nop			; (mov r8, r8)
    1318:	0000129d 	.word	0x0000129d
    131c:	00000115 	.word	0x00000115
    1320:	00000141 	.word	0x00000141

00001324 <configure_usart>:
void configure_usart(void);
struct usart_module usart_instance;


void configure_usart(void)
{
    1324:	b530      	push	{r4, r5, lr}
    1326:	b091      	sub	sp, #68	; 0x44
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    1328:	2380      	movs	r3, #128	; 0x80
    132a:	05db      	lsls	r3, r3, #23
    132c:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    132e:	2300      	movs	r3, #0
    1330:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    1332:	22ff      	movs	r2, #255	; 0xff
    1334:	4669      	mov	r1, sp
    1336:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    1338:	2200      	movs	r2, #0
    133a:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    133c:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
    133e:	2101      	movs	r1, #1
    1340:	2024      	movs	r0, #36	; 0x24
    1342:	466c      	mov	r4, sp
    1344:	5421      	strb	r1, [r4, r0]
	config->transmitter_enable = true;
    1346:	3001      	adds	r0, #1
    1348:	5421      	strb	r1, [r4, r0]
	config->clock_polarity_inverted = false;
    134a:	3125      	adds	r1, #37	; 0x25
    134c:	5463      	strb	r3, [r4, r1]
	config->use_external_clock = false;
    134e:	3101      	adds	r1, #1
    1350:	5463      	strb	r3, [r4, r1]
	config->ext_clock_freq   = 0;
    1352:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    1354:	3105      	adds	r1, #5
    1356:	5463      	strb	r3, [r4, r1]
	config->generator_source = GCLK_GENERATOR_0;
    1358:	3101      	adds	r1, #1
    135a:	5463      	strb	r3, [r4, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    135c:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    135e:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    1360:	76e3      	strb	r3, [r4, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    1362:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    1364:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    1366:	7662      	strb	r2, [r4, #25]
	config->receive_pulse_length                    = 19;
    1368:	2313      	movs	r3, #19
    136a:	76a3      	strb	r3, [r4, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    136c:	7762      	strb	r2, [r4, #29]

	usart_get_config_defaults(&config_usart);
	


		config_usart.baudrate    = 115200;
    136e:	23e1      	movs	r3, #225	; 0xe1
    1370:	025b      	lsls	r3, r3, #9
    1372:	9308      	str	r3, [sp, #32]
		config_usart.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
    1374:	2380      	movs	r3, #128	; 0x80
    1376:	035b      	lsls	r3, r3, #13
    1378:	9303      	str	r3, [sp, #12]
		config_usart.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
    137a:	4b0d      	ldr	r3, [pc, #52]	; (13b0 <configure_usart+0x8c>)
    137c:	930c      	str	r3, [sp, #48]	; 0x30
		config_usart.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
    137e:	4b0d      	ldr	r3, [pc, #52]	; (13b4 <configure_usart+0x90>)
    1380:	930d      	str	r3, [sp, #52]	; 0x34
		config_usart.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
    1382:	2301      	movs	r3, #1
    1384:	425b      	negs	r3, r3
    1386:	930e      	str	r3, [sp, #56]	; 0x38
		config_usart.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
    1388:	930f      	str	r3, [sp, #60]	; 0x3c

		while (usart_init(&usart_instance,
    138a:	4d0b      	ldr	r5, [pc, #44]	; (13b8 <configure_usart+0x94>)
    138c:	4c0b      	ldr	r4, [pc, #44]	; (13bc <configure_usart+0x98>)
    138e:	466a      	mov	r2, sp
    1390:	490b      	ldr	r1, [pc, #44]	; (13c0 <configure_usart+0x9c>)
    1392:	0028      	movs	r0, r5
    1394:	47a0      	blx	r4
    1396:	2800      	cmp	r0, #0
    1398:	d1f9      	bne.n	138e <configure_usart+0x6a>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    139a:	4b07      	ldr	r3, [pc, #28]	; (13b8 <configure_usart+0x94>)
    139c:	681a      	ldr	r2, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
    139e:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    13a0:	2b00      	cmp	r3, #0
    13a2:	d1fc      	bne.n	139e <configure_usart+0x7a>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    13a4:	6813      	ldr	r3, [r2, #0]
    13a6:	2102      	movs	r1, #2
    13a8:	430b      	orrs	r3, r1
    13aa:	6013      	str	r3, [r2, #0]
		EDBG_CDC_MODULE, &config_usart) != STATUS_OK) {
		}

	usart_enable(&usart_instance);
	
}
    13ac:	b011      	add	sp, #68	; 0x44
    13ae:	bd30      	pop	{r4, r5, pc}
    13b0:	00160002 	.word	0x00160002
    13b4:	00170002 	.word	0x00170002
    13b8:	20000118 	.word	0x20000118
    13bc:	000006ed 	.word	0x000006ed
    13c0:	42001400 	.word	0x42001400

000013c4 <main>:

int main(void)
{
    13c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    13c6:	46de      	mov	lr, fp
    13c8:	4657      	mov	r7, sl
    13ca:	464e      	mov	r6, r9
    13cc:	4645      	mov	r5, r8
    13ce:	b5e0      	push	{r5, r6, r7, lr}
    13d0:	b089      	sub	sp, #36	; 0x24
	system_init();
    13d2:	4b3f      	ldr	r3, [pc, #252]	; (14d0 <main+0x10c>)
    13d4:	4798      	blx	r3
	configure_usart();
    13d6:	4b3f      	ldr	r3, [pc, #252]	; (14d4 <main+0x110>)
    13d8:	4798      	blx	r3
	
    configure_extint_channel();
    13da:	4b3f      	ldr	r3, [pc, #252]	; (14d8 <main+0x114>)
    13dc:	4798      	blx	r3
	configure_extint_callbacks();
    13de:	4b3f      	ldr	r3, [pc, #252]	; (14dc <main+0x118>)
    13e0:	4798      	blx	r3
	cpu_irq_enable();
    13e2:	2201      	movs	r2, #1
    13e4:	4b3e      	ldr	r3, [pc, #248]	; (14e0 <main+0x11c>)
    13e6:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
    13e8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    13ec:	b662      	cpsie	i
	

	uint16_t temp;

	while (true) {
		pulse = 0;
    13ee:	4b3d      	ldr	r3, [pc, #244]	; (14e4 <main+0x120>)
    13f0:	469a      	mov	sl, r3
    13f2:	2300      	movs	r3, #0
    13f4:	4698      	mov	r8, r3
    13f6:	469b      	mov	fp, r3
    13f8:	4b39      	ldr	r3, [pc, #228]	; (14e0 <main+0x11c>)
    13fa:	4699      	mov	r9, r3
    13fc:	4653      	mov	r3, sl
    13fe:	465a      	mov	r2, fp
    1400:	701a      	strb	r2, [r3, #0]
    1402:	464b      	mov	r3, r9
    1404:	2201      	movs	r2, #1
    1406:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
    1408:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    140c:	b662      	cpsie	i
		system_interrupt_enable_global();
		DelayMs(1000);
    140e:	4b36      	ldr	r3, [pc, #216]	; (14e8 <main+0x124>)
    1410:	9300      	str	r3, [sp, #0]
    1412:	9b00      	ldr	r3, [sp, #0]
    1414:	1e5a      	subs	r2, r3, #1
    1416:	9200      	str	r2, [sp, #0]
    1418:	2b00      	cmp	r3, #0
    141a:	d1fa      	bne.n	1412 <main+0x4e>
  __ASM volatile ("cpsid i" : : : "memory");
    141c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
    141e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    1422:	4b2f      	ldr	r3, [pc, #188]	; (14e0 <main+0x11c>)
    1424:	4642      	mov	r2, r8
    1426:	701a      	strb	r2, [r3, #0]
		system_interrupt_disable_global();
		
		flowRate = 33.83 * pulse/kFactor;
    1428:	4d2e      	ldr	r5, [pc, #184]	; (14e4 <main+0x120>)
    142a:	7828      	ldrb	r0, [r5, #0]
    142c:	b2c0      	uxtb	r0, r0
    142e:	4c2f      	ldr	r4, [pc, #188]	; (14ec <main+0x128>)
    1430:	4b2f      	ldr	r3, [pc, #188]	; (14f0 <main+0x12c>)
    1432:	4798      	blx	r3
    1434:	4a2f      	ldr	r2, [pc, #188]	; (14f4 <main+0x130>)
    1436:	4b30      	ldr	r3, [pc, #192]	; (14f8 <main+0x134>)
    1438:	4e30      	ldr	r6, [pc, #192]	; (14fc <main+0x138>)
    143a:	47b0      	blx	r6
    143c:	0006      	movs	r6, r0
    143e:	000f      	movs	r7, r1
    1440:	4b2f      	ldr	r3, [pc, #188]	; (1500 <main+0x13c>)
    1442:	6818      	ldr	r0, [r3, #0]
    1444:	4b2f      	ldr	r3, [pc, #188]	; (1504 <main+0x140>)
    1446:	4798      	blx	r3
    1448:	0002      	movs	r2, r0
    144a:	000b      	movs	r3, r1
    144c:	0030      	movs	r0, r6
    144e:	0039      	movs	r1, r7
    1450:	4e2d      	ldr	r6, [pc, #180]	; (1508 <main+0x144>)
    1452:	47b0      	blx	r6
    1454:	4b2d      	ldr	r3, [pc, #180]	; (150c <main+0x148>)
    1456:	4798      	blx	r3
    1458:	6020      	str	r0, [r4, #0]
		
		itoa(pulse, buff1, 10);
    145a:	7828      	ldrb	r0, [r5, #0]
    145c:	b2c0      	uxtb	r0, r0
    145e:	4e2c      	ldr	r6, [pc, #176]	; (1510 <main+0x14c>)
    1460:	220a      	movs	r2, #10
    1462:	0031      	movs	r1, r6
    1464:	4b2b      	ldr	r3, [pc, #172]	; (1514 <main+0x150>)
    1466:	4798      	blx	r3
		
		char *gcvtf(float flowRate, int ndigit, char *buff2);		
		      gcvtf(flowRate,2,buff2);
    1468:	4d2b      	ldr	r5, [pc, #172]	; (1518 <main+0x154>)
    146a:	6820      	ldr	r0, [r4, #0]
    146c:	002a      	movs	r2, r5
    146e:	2102      	movs	r1, #2
    1470:	4b2a      	ldr	r3, [pc, #168]	; (151c <main+0x158>)
    1472:	4798      	blx	r3
		
		usart_write_buffer_wait(&usart_instance, buff1, sizeof(buff1));
    1474:	4c2a      	ldr	r4, [pc, #168]	; (1520 <main+0x15c>)
    1476:	2278      	movs	r2, #120	; 0x78
    1478:	0031      	movs	r1, r6
    147a:	0020      	movs	r0, r4
    147c:	4e29      	ldr	r6, [pc, #164]	; (1524 <main+0x160>)
    147e:	47b0      	blx	r6
		uint8_t string1[] = "  pulse \t";
    1480:	a901      	add	r1, sp, #4
    1482:	4b29      	ldr	r3, [pc, #164]	; (1528 <main+0x164>)
    1484:	000a      	movs	r2, r1
    1486:	cb81      	ldmia	r3!, {r0, r7}
    1488:	c281      	stmia	r2!, {r0, r7}
    148a:	881b      	ldrh	r3, [r3, #0]
    148c:	8013      	strh	r3, [r2, #0]
		usart_write_buffer_wait(&usart_instance, string1, sizeof(string1));
    148e:	220a      	movs	r2, #10
    1490:	0020      	movs	r0, r4
    1492:	47b0      	blx	r6
		
		usart_write_buffer_wait(&usart_instance, buff2, sizeof(buff2));
    1494:	22c8      	movs	r2, #200	; 0xc8
    1496:	0029      	movs	r1, r5
    1498:	0020      	movs	r0, r4
    149a:	47b0      	blx	r6
		uint8_t string2[] = "  Oz/min \r\n";
    149c:	a904      	add	r1, sp, #16
    149e:	4b23      	ldr	r3, [pc, #140]	; (152c <main+0x168>)
    14a0:	000a      	movs	r2, r1
    14a2:	cba1      	ldmia	r3!, {r0, r5, r7}
    14a4:	c2a1      	stmia	r2!, {r0, r5, r7}
		usart_write_buffer_wait(&usart_instance, string2, sizeof(string2));
    14a6:	220c      	movs	r2, #12
    14a8:	0020      	movs	r0, r4
    14aa:	47b0      	blx	r6
		
		
		if (usart_read_wait(&usart_instance, &temp) == STATUS_OK) {
    14ac:	211e      	movs	r1, #30
    14ae:	4469      	add	r1, sp
    14b0:	0020      	movs	r0, r4
    14b2:	4b1f      	ldr	r3, [pc, #124]	; (1530 <main+0x16c>)
    14b4:	4798      	blx	r3
    14b6:	2800      	cmp	r0, #0
    14b8:	d1a0      	bne.n	13fc <main+0x38>
			while (usart_write_wait(&usart_instance, temp) != STATUS_OK) {
    14ba:	251e      	movs	r5, #30
    14bc:	446d      	add	r5, sp
    14be:	4c18      	ldr	r4, [pc, #96]	; (1520 <main+0x15c>)
    14c0:	4e1c      	ldr	r6, [pc, #112]	; (1534 <main+0x170>)
    14c2:	8829      	ldrh	r1, [r5, #0]
    14c4:	0020      	movs	r0, r4
    14c6:	47b0      	blx	r6
    14c8:	2800      	cmp	r0, #0
    14ca:	d1fa      	bne.n	14c2 <main+0xfe>
    14cc:	e796      	b.n	13fc <main+0x38>
    14ce:	46c0      	nop			; (mov r8, r8)
    14d0:	00001165 	.word	0x00001165
    14d4:	00001325 	.word	0x00001325
    14d8:	000012d1 	.word	0x000012d1
    14dc:	00001301 	.word	0x00001301
    14e0:	20000000 	.word	0x20000000
    14e4:	200000b4 	.word	0x200000b4
    14e8:	000f4240 	.word	0x000f4240
    14ec:	200000b0 	.word	0x200000b0
    14f0:	0000220d 	.word	0x0000220d
    14f4:	70a3d70a 	.word	0x70a3d70a
    14f8:	4040ea3d 	.word	0x4040ea3d
    14fc:	00001d0d 	.word	0x00001d0d
    1500:	20000004 	.word	0x20000004
    1504:	00002291 	.word	0x00002291
    1508:	000016a5 	.word	0x000016a5
    150c:	00002335 	.word	0x00002335
    1510:	20000124 	.word	0x20000124
    1514:	0000255d 	.word	0x0000255d
    1518:	2000019c 	.word	0x2000019c
    151c:	000024d1 	.word	0x000024d1
    1520:	20000118 	.word	0x20000118
    1524:	00000a69 	.word	0x00000a69
    1528:	00004e68 	.word	0x00004e68
    152c:	00004e74 	.word	0x00004e74
    1530:	00000a05 	.word	0x00000a05
    1534:	000009e1 	.word	0x000009e1

00001538 <__udivsi3>:
    1538:	2200      	movs	r2, #0
    153a:	0843      	lsrs	r3, r0, #1
    153c:	428b      	cmp	r3, r1
    153e:	d374      	bcc.n	162a <__udivsi3+0xf2>
    1540:	0903      	lsrs	r3, r0, #4
    1542:	428b      	cmp	r3, r1
    1544:	d35f      	bcc.n	1606 <__udivsi3+0xce>
    1546:	0a03      	lsrs	r3, r0, #8
    1548:	428b      	cmp	r3, r1
    154a:	d344      	bcc.n	15d6 <__udivsi3+0x9e>
    154c:	0b03      	lsrs	r3, r0, #12
    154e:	428b      	cmp	r3, r1
    1550:	d328      	bcc.n	15a4 <__udivsi3+0x6c>
    1552:	0c03      	lsrs	r3, r0, #16
    1554:	428b      	cmp	r3, r1
    1556:	d30d      	bcc.n	1574 <__udivsi3+0x3c>
    1558:	22ff      	movs	r2, #255	; 0xff
    155a:	0209      	lsls	r1, r1, #8
    155c:	ba12      	rev	r2, r2
    155e:	0c03      	lsrs	r3, r0, #16
    1560:	428b      	cmp	r3, r1
    1562:	d302      	bcc.n	156a <__udivsi3+0x32>
    1564:	1212      	asrs	r2, r2, #8
    1566:	0209      	lsls	r1, r1, #8
    1568:	d065      	beq.n	1636 <__udivsi3+0xfe>
    156a:	0b03      	lsrs	r3, r0, #12
    156c:	428b      	cmp	r3, r1
    156e:	d319      	bcc.n	15a4 <__udivsi3+0x6c>
    1570:	e000      	b.n	1574 <__udivsi3+0x3c>
    1572:	0a09      	lsrs	r1, r1, #8
    1574:	0bc3      	lsrs	r3, r0, #15
    1576:	428b      	cmp	r3, r1
    1578:	d301      	bcc.n	157e <__udivsi3+0x46>
    157a:	03cb      	lsls	r3, r1, #15
    157c:	1ac0      	subs	r0, r0, r3
    157e:	4152      	adcs	r2, r2
    1580:	0b83      	lsrs	r3, r0, #14
    1582:	428b      	cmp	r3, r1
    1584:	d301      	bcc.n	158a <__udivsi3+0x52>
    1586:	038b      	lsls	r3, r1, #14
    1588:	1ac0      	subs	r0, r0, r3
    158a:	4152      	adcs	r2, r2
    158c:	0b43      	lsrs	r3, r0, #13
    158e:	428b      	cmp	r3, r1
    1590:	d301      	bcc.n	1596 <__udivsi3+0x5e>
    1592:	034b      	lsls	r3, r1, #13
    1594:	1ac0      	subs	r0, r0, r3
    1596:	4152      	adcs	r2, r2
    1598:	0b03      	lsrs	r3, r0, #12
    159a:	428b      	cmp	r3, r1
    159c:	d301      	bcc.n	15a2 <__udivsi3+0x6a>
    159e:	030b      	lsls	r3, r1, #12
    15a0:	1ac0      	subs	r0, r0, r3
    15a2:	4152      	adcs	r2, r2
    15a4:	0ac3      	lsrs	r3, r0, #11
    15a6:	428b      	cmp	r3, r1
    15a8:	d301      	bcc.n	15ae <__udivsi3+0x76>
    15aa:	02cb      	lsls	r3, r1, #11
    15ac:	1ac0      	subs	r0, r0, r3
    15ae:	4152      	adcs	r2, r2
    15b0:	0a83      	lsrs	r3, r0, #10
    15b2:	428b      	cmp	r3, r1
    15b4:	d301      	bcc.n	15ba <__udivsi3+0x82>
    15b6:	028b      	lsls	r3, r1, #10
    15b8:	1ac0      	subs	r0, r0, r3
    15ba:	4152      	adcs	r2, r2
    15bc:	0a43      	lsrs	r3, r0, #9
    15be:	428b      	cmp	r3, r1
    15c0:	d301      	bcc.n	15c6 <__udivsi3+0x8e>
    15c2:	024b      	lsls	r3, r1, #9
    15c4:	1ac0      	subs	r0, r0, r3
    15c6:	4152      	adcs	r2, r2
    15c8:	0a03      	lsrs	r3, r0, #8
    15ca:	428b      	cmp	r3, r1
    15cc:	d301      	bcc.n	15d2 <__udivsi3+0x9a>
    15ce:	020b      	lsls	r3, r1, #8
    15d0:	1ac0      	subs	r0, r0, r3
    15d2:	4152      	adcs	r2, r2
    15d4:	d2cd      	bcs.n	1572 <__udivsi3+0x3a>
    15d6:	09c3      	lsrs	r3, r0, #7
    15d8:	428b      	cmp	r3, r1
    15da:	d301      	bcc.n	15e0 <__udivsi3+0xa8>
    15dc:	01cb      	lsls	r3, r1, #7
    15de:	1ac0      	subs	r0, r0, r3
    15e0:	4152      	adcs	r2, r2
    15e2:	0983      	lsrs	r3, r0, #6
    15e4:	428b      	cmp	r3, r1
    15e6:	d301      	bcc.n	15ec <__udivsi3+0xb4>
    15e8:	018b      	lsls	r3, r1, #6
    15ea:	1ac0      	subs	r0, r0, r3
    15ec:	4152      	adcs	r2, r2
    15ee:	0943      	lsrs	r3, r0, #5
    15f0:	428b      	cmp	r3, r1
    15f2:	d301      	bcc.n	15f8 <__udivsi3+0xc0>
    15f4:	014b      	lsls	r3, r1, #5
    15f6:	1ac0      	subs	r0, r0, r3
    15f8:	4152      	adcs	r2, r2
    15fa:	0903      	lsrs	r3, r0, #4
    15fc:	428b      	cmp	r3, r1
    15fe:	d301      	bcc.n	1604 <__udivsi3+0xcc>
    1600:	010b      	lsls	r3, r1, #4
    1602:	1ac0      	subs	r0, r0, r3
    1604:	4152      	adcs	r2, r2
    1606:	08c3      	lsrs	r3, r0, #3
    1608:	428b      	cmp	r3, r1
    160a:	d301      	bcc.n	1610 <__udivsi3+0xd8>
    160c:	00cb      	lsls	r3, r1, #3
    160e:	1ac0      	subs	r0, r0, r3
    1610:	4152      	adcs	r2, r2
    1612:	0883      	lsrs	r3, r0, #2
    1614:	428b      	cmp	r3, r1
    1616:	d301      	bcc.n	161c <__udivsi3+0xe4>
    1618:	008b      	lsls	r3, r1, #2
    161a:	1ac0      	subs	r0, r0, r3
    161c:	4152      	adcs	r2, r2
    161e:	0843      	lsrs	r3, r0, #1
    1620:	428b      	cmp	r3, r1
    1622:	d301      	bcc.n	1628 <__udivsi3+0xf0>
    1624:	004b      	lsls	r3, r1, #1
    1626:	1ac0      	subs	r0, r0, r3
    1628:	4152      	adcs	r2, r2
    162a:	1a41      	subs	r1, r0, r1
    162c:	d200      	bcs.n	1630 <__udivsi3+0xf8>
    162e:	4601      	mov	r1, r0
    1630:	4152      	adcs	r2, r2
    1632:	4610      	mov	r0, r2
    1634:	4770      	bx	lr
    1636:	e7ff      	b.n	1638 <__udivsi3+0x100>
    1638:	b501      	push	{r0, lr}
    163a:	2000      	movs	r0, #0
    163c:	f000 f806 	bl	164c <__aeabi_idiv0>
    1640:	bd02      	pop	{r1, pc}
    1642:	46c0      	nop			; (mov r8, r8)

00001644 <__aeabi_uidivmod>:
    1644:	2900      	cmp	r1, #0
    1646:	d0f7      	beq.n	1638 <__udivsi3+0x100>
    1648:	e776      	b.n	1538 <__udivsi3>
    164a:	4770      	bx	lr

0000164c <__aeabi_idiv0>:
    164c:	4770      	bx	lr
    164e:	46c0      	nop			; (mov r8, r8)

00001650 <__aeabi_lmul>:
    1650:	b5f0      	push	{r4, r5, r6, r7, lr}
    1652:	46ce      	mov	lr, r9
    1654:	4647      	mov	r7, r8
    1656:	0415      	lsls	r5, r2, #16
    1658:	0c2d      	lsrs	r5, r5, #16
    165a:	002e      	movs	r6, r5
    165c:	b580      	push	{r7, lr}
    165e:	0407      	lsls	r7, r0, #16
    1660:	0c14      	lsrs	r4, r2, #16
    1662:	0c3f      	lsrs	r7, r7, #16
    1664:	4699      	mov	r9, r3
    1666:	0c03      	lsrs	r3, r0, #16
    1668:	437e      	muls	r6, r7
    166a:	435d      	muls	r5, r3
    166c:	4367      	muls	r7, r4
    166e:	4363      	muls	r3, r4
    1670:	197f      	adds	r7, r7, r5
    1672:	0c34      	lsrs	r4, r6, #16
    1674:	19e4      	adds	r4, r4, r7
    1676:	469c      	mov	ip, r3
    1678:	42a5      	cmp	r5, r4
    167a:	d903      	bls.n	1684 <__aeabi_lmul+0x34>
    167c:	2380      	movs	r3, #128	; 0x80
    167e:	025b      	lsls	r3, r3, #9
    1680:	4698      	mov	r8, r3
    1682:	44c4      	add	ip, r8
    1684:	464b      	mov	r3, r9
    1686:	4351      	muls	r1, r2
    1688:	4343      	muls	r3, r0
    168a:	0436      	lsls	r6, r6, #16
    168c:	0c36      	lsrs	r6, r6, #16
    168e:	0c25      	lsrs	r5, r4, #16
    1690:	0424      	lsls	r4, r4, #16
    1692:	4465      	add	r5, ip
    1694:	19a4      	adds	r4, r4, r6
    1696:	1859      	adds	r1, r3, r1
    1698:	1949      	adds	r1, r1, r5
    169a:	0020      	movs	r0, r4
    169c:	bc0c      	pop	{r2, r3}
    169e:	4690      	mov	r8, r2
    16a0:	4699      	mov	r9, r3
    16a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

000016a4 <__aeabi_ddiv>:
    16a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    16a6:	4657      	mov	r7, sl
    16a8:	4645      	mov	r5, r8
    16aa:	46de      	mov	lr, fp
    16ac:	464e      	mov	r6, r9
    16ae:	b5e0      	push	{r5, r6, r7, lr}
    16b0:	004c      	lsls	r4, r1, #1
    16b2:	030e      	lsls	r6, r1, #12
    16b4:	b087      	sub	sp, #28
    16b6:	4683      	mov	fp, r0
    16b8:	4692      	mov	sl, r2
    16ba:	001d      	movs	r5, r3
    16bc:	4680      	mov	r8, r0
    16be:	0b36      	lsrs	r6, r6, #12
    16c0:	0d64      	lsrs	r4, r4, #21
    16c2:	0fcf      	lsrs	r7, r1, #31
    16c4:	2c00      	cmp	r4, #0
    16c6:	d04f      	beq.n	1768 <__aeabi_ddiv+0xc4>
    16c8:	4b6f      	ldr	r3, [pc, #444]	; (1888 <__aeabi_ddiv+0x1e4>)
    16ca:	429c      	cmp	r4, r3
    16cc:	d035      	beq.n	173a <__aeabi_ddiv+0x96>
    16ce:	2380      	movs	r3, #128	; 0x80
    16d0:	0f42      	lsrs	r2, r0, #29
    16d2:	041b      	lsls	r3, r3, #16
    16d4:	00f6      	lsls	r6, r6, #3
    16d6:	4313      	orrs	r3, r2
    16d8:	4333      	orrs	r3, r6
    16da:	4699      	mov	r9, r3
    16dc:	00c3      	lsls	r3, r0, #3
    16de:	4698      	mov	r8, r3
    16e0:	4b6a      	ldr	r3, [pc, #424]	; (188c <__aeabi_ddiv+0x1e8>)
    16e2:	2600      	movs	r6, #0
    16e4:	469c      	mov	ip, r3
    16e6:	2300      	movs	r3, #0
    16e8:	4464      	add	r4, ip
    16ea:	9303      	str	r3, [sp, #12]
    16ec:	032b      	lsls	r3, r5, #12
    16ee:	0b1b      	lsrs	r3, r3, #12
    16f0:	469b      	mov	fp, r3
    16f2:	006b      	lsls	r3, r5, #1
    16f4:	0fed      	lsrs	r5, r5, #31
    16f6:	4650      	mov	r0, sl
    16f8:	0d5b      	lsrs	r3, r3, #21
    16fa:	9501      	str	r5, [sp, #4]
    16fc:	d05e      	beq.n	17bc <__aeabi_ddiv+0x118>
    16fe:	4a62      	ldr	r2, [pc, #392]	; (1888 <__aeabi_ddiv+0x1e4>)
    1700:	4293      	cmp	r3, r2
    1702:	d053      	beq.n	17ac <__aeabi_ddiv+0x108>
    1704:	465a      	mov	r2, fp
    1706:	00d1      	lsls	r1, r2, #3
    1708:	2280      	movs	r2, #128	; 0x80
    170a:	0f40      	lsrs	r0, r0, #29
    170c:	0412      	lsls	r2, r2, #16
    170e:	4302      	orrs	r2, r0
    1710:	430a      	orrs	r2, r1
    1712:	4693      	mov	fp, r2
    1714:	4652      	mov	r2, sl
    1716:	00d1      	lsls	r1, r2, #3
    1718:	4a5c      	ldr	r2, [pc, #368]	; (188c <__aeabi_ddiv+0x1e8>)
    171a:	4694      	mov	ip, r2
    171c:	2200      	movs	r2, #0
    171e:	4463      	add	r3, ip
    1720:	0038      	movs	r0, r7
    1722:	4068      	eors	r0, r5
    1724:	4684      	mov	ip, r0
    1726:	9002      	str	r0, [sp, #8]
    1728:	1ae4      	subs	r4, r4, r3
    172a:	4316      	orrs	r6, r2
    172c:	2e0f      	cmp	r6, #15
    172e:	d900      	bls.n	1732 <__aeabi_ddiv+0x8e>
    1730:	e0b4      	b.n	189c <__aeabi_ddiv+0x1f8>
    1732:	4b57      	ldr	r3, [pc, #348]	; (1890 <__aeabi_ddiv+0x1ec>)
    1734:	00b6      	lsls	r6, r6, #2
    1736:	599b      	ldr	r3, [r3, r6]
    1738:	469f      	mov	pc, r3
    173a:	0003      	movs	r3, r0
    173c:	4333      	orrs	r3, r6
    173e:	4699      	mov	r9, r3
    1740:	d16c      	bne.n	181c <__aeabi_ddiv+0x178>
    1742:	2300      	movs	r3, #0
    1744:	4698      	mov	r8, r3
    1746:	3302      	adds	r3, #2
    1748:	2608      	movs	r6, #8
    174a:	9303      	str	r3, [sp, #12]
    174c:	e7ce      	b.n	16ec <__aeabi_ddiv+0x48>
    174e:	46cb      	mov	fp, r9
    1750:	4641      	mov	r1, r8
    1752:	9a03      	ldr	r2, [sp, #12]
    1754:	9701      	str	r7, [sp, #4]
    1756:	2a02      	cmp	r2, #2
    1758:	d165      	bne.n	1826 <__aeabi_ddiv+0x182>
    175a:	9b01      	ldr	r3, [sp, #4]
    175c:	4c4a      	ldr	r4, [pc, #296]	; (1888 <__aeabi_ddiv+0x1e4>)
    175e:	469c      	mov	ip, r3
    1760:	2300      	movs	r3, #0
    1762:	2200      	movs	r2, #0
    1764:	4698      	mov	r8, r3
    1766:	e06b      	b.n	1840 <__aeabi_ddiv+0x19c>
    1768:	0003      	movs	r3, r0
    176a:	4333      	orrs	r3, r6
    176c:	4699      	mov	r9, r3
    176e:	d04e      	beq.n	180e <__aeabi_ddiv+0x16a>
    1770:	2e00      	cmp	r6, #0
    1772:	d100      	bne.n	1776 <__aeabi_ddiv+0xd2>
    1774:	e1bc      	b.n	1af0 <__aeabi_ddiv+0x44c>
    1776:	0030      	movs	r0, r6
    1778:	f000 fe66 	bl	2448 <__clzsi2>
    177c:	0003      	movs	r3, r0
    177e:	3b0b      	subs	r3, #11
    1780:	2b1c      	cmp	r3, #28
    1782:	dd00      	ble.n	1786 <__aeabi_ddiv+0xe2>
    1784:	e1ac      	b.n	1ae0 <__aeabi_ddiv+0x43c>
    1786:	221d      	movs	r2, #29
    1788:	1ad3      	subs	r3, r2, r3
    178a:	465a      	mov	r2, fp
    178c:	0001      	movs	r1, r0
    178e:	40da      	lsrs	r2, r3
    1790:	3908      	subs	r1, #8
    1792:	408e      	lsls	r6, r1
    1794:	0013      	movs	r3, r2
    1796:	4333      	orrs	r3, r6
    1798:	4699      	mov	r9, r3
    179a:	465b      	mov	r3, fp
    179c:	408b      	lsls	r3, r1
    179e:	4698      	mov	r8, r3
    17a0:	2300      	movs	r3, #0
    17a2:	4c3c      	ldr	r4, [pc, #240]	; (1894 <__aeabi_ddiv+0x1f0>)
    17a4:	2600      	movs	r6, #0
    17a6:	1a24      	subs	r4, r4, r0
    17a8:	9303      	str	r3, [sp, #12]
    17aa:	e79f      	b.n	16ec <__aeabi_ddiv+0x48>
    17ac:	4651      	mov	r1, sl
    17ae:	465a      	mov	r2, fp
    17b0:	4311      	orrs	r1, r2
    17b2:	d129      	bne.n	1808 <__aeabi_ddiv+0x164>
    17b4:	2200      	movs	r2, #0
    17b6:	4693      	mov	fp, r2
    17b8:	3202      	adds	r2, #2
    17ba:	e7b1      	b.n	1720 <__aeabi_ddiv+0x7c>
    17bc:	4659      	mov	r1, fp
    17be:	4301      	orrs	r1, r0
    17c0:	d01e      	beq.n	1800 <__aeabi_ddiv+0x15c>
    17c2:	465b      	mov	r3, fp
    17c4:	2b00      	cmp	r3, #0
    17c6:	d100      	bne.n	17ca <__aeabi_ddiv+0x126>
    17c8:	e19e      	b.n	1b08 <__aeabi_ddiv+0x464>
    17ca:	4658      	mov	r0, fp
    17cc:	f000 fe3c 	bl	2448 <__clzsi2>
    17d0:	0003      	movs	r3, r0
    17d2:	3b0b      	subs	r3, #11
    17d4:	2b1c      	cmp	r3, #28
    17d6:	dd00      	ble.n	17da <__aeabi_ddiv+0x136>
    17d8:	e18f      	b.n	1afa <__aeabi_ddiv+0x456>
    17da:	0002      	movs	r2, r0
    17dc:	4659      	mov	r1, fp
    17de:	3a08      	subs	r2, #8
    17e0:	4091      	lsls	r1, r2
    17e2:	468b      	mov	fp, r1
    17e4:	211d      	movs	r1, #29
    17e6:	1acb      	subs	r3, r1, r3
    17e8:	4651      	mov	r1, sl
    17ea:	40d9      	lsrs	r1, r3
    17ec:	000b      	movs	r3, r1
    17ee:	4659      	mov	r1, fp
    17f0:	430b      	orrs	r3, r1
    17f2:	4651      	mov	r1, sl
    17f4:	469b      	mov	fp, r3
    17f6:	4091      	lsls	r1, r2
    17f8:	4b26      	ldr	r3, [pc, #152]	; (1894 <__aeabi_ddiv+0x1f0>)
    17fa:	2200      	movs	r2, #0
    17fc:	1a1b      	subs	r3, r3, r0
    17fe:	e78f      	b.n	1720 <__aeabi_ddiv+0x7c>
    1800:	2300      	movs	r3, #0
    1802:	2201      	movs	r2, #1
    1804:	469b      	mov	fp, r3
    1806:	e78b      	b.n	1720 <__aeabi_ddiv+0x7c>
    1808:	4651      	mov	r1, sl
    180a:	2203      	movs	r2, #3
    180c:	e788      	b.n	1720 <__aeabi_ddiv+0x7c>
    180e:	2300      	movs	r3, #0
    1810:	4698      	mov	r8, r3
    1812:	3301      	adds	r3, #1
    1814:	2604      	movs	r6, #4
    1816:	2400      	movs	r4, #0
    1818:	9303      	str	r3, [sp, #12]
    181a:	e767      	b.n	16ec <__aeabi_ddiv+0x48>
    181c:	2303      	movs	r3, #3
    181e:	46b1      	mov	r9, r6
    1820:	9303      	str	r3, [sp, #12]
    1822:	260c      	movs	r6, #12
    1824:	e762      	b.n	16ec <__aeabi_ddiv+0x48>
    1826:	2a03      	cmp	r2, #3
    1828:	d100      	bne.n	182c <__aeabi_ddiv+0x188>
    182a:	e25c      	b.n	1ce6 <__aeabi_ddiv+0x642>
    182c:	9b01      	ldr	r3, [sp, #4]
    182e:	2a01      	cmp	r2, #1
    1830:	d000      	beq.n	1834 <__aeabi_ddiv+0x190>
    1832:	e1e4      	b.n	1bfe <__aeabi_ddiv+0x55a>
    1834:	4013      	ands	r3, r2
    1836:	469c      	mov	ip, r3
    1838:	2300      	movs	r3, #0
    183a:	2400      	movs	r4, #0
    183c:	2200      	movs	r2, #0
    183e:	4698      	mov	r8, r3
    1840:	2100      	movs	r1, #0
    1842:	0312      	lsls	r2, r2, #12
    1844:	0b13      	lsrs	r3, r2, #12
    1846:	0d0a      	lsrs	r2, r1, #20
    1848:	0512      	lsls	r2, r2, #20
    184a:	431a      	orrs	r2, r3
    184c:	0523      	lsls	r3, r4, #20
    184e:	4c12      	ldr	r4, [pc, #72]	; (1898 <__aeabi_ddiv+0x1f4>)
    1850:	4640      	mov	r0, r8
    1852:	4022      	ands	r2, r4
    1854:	4313      	orrs	r3, r2
    1856:	4662      	mov	r2, ip
    1858:	005b      	lsls	r3, r3, #1
    185a:	07d2      	lsls	r2, r2, #31
    185c:	085b      	lsrs	r3, r3, #1
    185e:	4313      	orrs	r3, r2
    1860:	0019      	movs	r1, r3
    1862:	b007      	add	sp, #28
    1864:	bc3c      	pop	{r2, r3, r4, r5}
    1866:	4690      	mov	r8, r2
    1868:	4699      	mov	r9, r3
    186a:	46a2      	mov	sl, r4
    186c:	46ab      	mov	fp, r5
    186e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1870:	2300      	movs	r3, #0
    1872:	2280      	movs	r2, #128	; 0x80
    1874:	469c      	mov	ip, r3
    1876:	0312      	lsls	r2, r2, #12
    1878:	4698      	mov	r8, r3
    187a:	4c03      	ldr	r4, [pc, #12]	; (1888 <__aeabi_ddiv+0x1e4>)
    187c:	e7e0      	b.n	1840 <__aeabi_ddiv+0x19c>
    187e:	2300      	movs	r3, #0
    1880:	4c01      	ldr	r4, [pc, #4]	; (1888 <__aeabi_ddiv+0x1e4>)
    1882:	2200      	movs	r2, #0
    1884:	4698      	mov	r8, r3
    1886:	e7db      	b.n	1840 <__aeabi_ddiv+0x19c>
    1888:	000007ff 	.word	0x000007ff
    188c:	fffffc01 	.word	0xfffffc01
    1890:	00004e80 	.word	0x00004e80
    1894:	fffffc0d 	.word	0xfffffc0d
    1898:	800fffff 	.word	0x800fffff
    189c:	45d9      	cmp	r9, fp
    189e:	d900      	bls.n	18a2 <__aeabi_ddiv+0x1fe>
    18a0:	e139      	b.n	1b16 <__aeabi_ddiv+0x472>
    18a2:	d100      	bne.n	18a6 <__aeabi_ddiv+0x202>
    18a4:	e134      	b.n	1b10 <__aeabi_ddiv+0x46c>
    18a6:	2300      	movs	r3, #0
    18a8:	4646      	mov	r6, r8
    18aa:	464d      	mov	r5, r9
    18ac:	469a      	mov	sl, r3
    18ae:	3c01      	subs	r4, #1
    18b0:	465b      	mov	r3, fp
    18b2:	0e0a      	lsrs	r2, r1, #24
    18b4:	021b      	lsls	r3, r3, #8
    18b6:	431a      	orrs	r2, r3
    18b8:	020b      	lsls	r3, r1, #8
    18ba:	0c17      	lsrs	r7, r2, #16
    18bc:	9303      	str	r3, [sp, #12]
    18be:	0413      	lsls	r3, r2, #16
    18c0:	0c1b      	lsrs	r3, r3, #16
    18c2:	0039      	movs	r1, r7
    18c4:	0028      	movs	r0, r5
    18c6:	4690      	mov	r8, r2
    18c8:	9301      	str	r3, [sp, #4]
    18ca:	f7ff fe35 	bl	1538 <__udivsi3>
    18ce:	0002      	movs	r2, r0
    18d0:	9b01      	ldr	r3, [sp, #4]
    18d2:	4683      	mov	fp, r0
    18d4:	435a      	muls	r2, r3
    18d6:	0028      	movs	r0, r5
    18d8:	0039      	movs	r1, r7
    18da:	4691      	mov	r9, r2
    18dc:	f7ff feb2 	bl	1644 <__aeabi_uidivmod>
    18e0:	0c35      	lsrs	r5, r6, #16
    18e2:	0409      	lsls	r1, r1, #16
    18e4:	430d      	orrs	r5, r1
    18e6:	45a9      	cmp	r9, r5
    18e8:	d90d      	bls.n	1906 <__aeabi_ddiv+0x262>
    18ea:	465b      	mov	r3, fp
    18ec:	4445      	add	r5, r8
    18ee:	3b01      	subs	r3, #1
    18f0:	45a8      	cmp	r8, r5
    18f2:	d900      	bls.n	18f6 <__aeabi_ddiv+0x252>
    18f4:	e13a      	b.n	1b6c <__aeabi_ddiv+0x4c8>
    18f6:	45a9      	cmp	r9, r5
    18f8:	d800      	bhi.n	18fc <__aeabi_ddiv+0x258>
    18fa:	e137      	b.n	1b6c <__aeabi_ddiv+0x4c8>
    18fc:	2302      	movs	r3, #2
    18fe:	425b      	negs	r3, r3
    1900:	469c      	mov	ip, r3
    1902:	4445      	add	r5, r8
    1904:	44e3      	add	fp, ip
    1906:	464b      	mov	r3, r9
    1908:	1aeb      	subs	r3, r5, r3
    190a:	0039      	movs	r1, r7
    190c:	0018      	movs	r0, r3
    190e:	9304      	str	r3, [sp, #16]
    1910:	f7ff fe12 	bl	1538 <__udivsi3>
    1914:	9b01      	ldr	r3, [sp, #4]
    1916:	0005      	movs	r5, r0
    1918:	4343      	muls	r3, r0
    191a:	0039      	movs	r1, r7
    191c:	9804      	ldr	r0, [sp, #16]
    191e:	4699      	mov	r9, r3
    1920:	f7ff fe90 	bl	1644 <__aeabi_uidivmod>
    1924:	0433      	lsls	r3, r6, #16
    1926:	0409      	lsls	r1, r1, #16
    1928:	0c1b      	lsrs	r3, r3, #16
    192a:	430b      	orrs	r3, r1
    192c:	4599      	cmp	r9, r3
    192e:	d909      	bls.n	1944 <__aeabi_ddiv+0x2a0>
    1930:	4443      	add	r3, r8
    1932:	1e6a      	subs	r2, r5, #1
    1934:	4598      	cmp	r8, r3
    1936:	d900      	bls.n	193a <__aeabi_ddiv+0x296>
    1938:	e11a      	b.n	1b70 <__aeabi_ddiv+0x4cc>
    193a:	4599      	cmp	r9, r3
    193c:	d800      	bhi.n	1940 <__aeabi_ddiv+0x29c>
    193e:	e117      	b.n	1b70 <__aeabi_ddiv+0x4cc>
    1940:	3d02      	subs	r5, #2
    1942:	4443      	add	r3, r8
    1944:	464a      	mov	r2, r9
    1946:	1a9b      	subs	r3, r3, r2
    1948:	465a      	mov	r2, fp
    194a:	0412      	lsls	r2, r2, #16
    194c:	432a      	orrs	r2, r5
    194e:	9903      	ldr	r1, [sp, #12]
    1950:	4693      	mov	fp, r2
    1952:	0c10      	lsrs	r0, r2, #16
    1954:	0c0a      	lsrs	r2, r1, #16
    1956:	4691      	mov	r9, r2
    1958:	0409      	lsls	r1, r1, #16
    195a:	465a      	mov	r2, fp
    195c:	0c09      	lsrs	r1, r1, #16
    195e:	464e      	mov	r6, r9
    1960:	000d      	movs	r5, r1
    1962:	0412      	lsls	r2, r2, #16
    1964:	0c12      	lsrs	r2, r2, #16
    1966:	4345      	muls	r5, r0
    1968:	9105      	str	r1, [sp, #20]
    196a:	4351      	muls	r1, r2
    196c:	4372      	muls	r2, r6
    196e:	4370      	muls	r0, r6
    1970:	1952      	adds	r2, r2, r5
    1972:	0c0e      	lsrs	r6, r1, #16
    1974:	18b2      	adds	r2, r6, r2
    1976:	4295      	cmp	r5, r2
    1978:	d903      	bls.n	1982 <__aeabi_ddiv+0x2de>
    197a:	2580      	movs	r5, #128	; 0x80
    197c:	026d      	lsls	r5, r5, #9
    197e:	46ac      	mov	ip, r5
    1980:	4460      	add	r0, ip
    1982:	0c15      	lsrs	r5, r2, #16
    1984:	0409      	lsls	r1, r1, #16
    1986:	0412      	lsls	r2, r2, #16
    1988:	0c09      	lsrs	r1, r1, #16
    198a:	1828      	adds	r0, r5, r0
    198c:	1852      	adds	r2, r2, r1
    198e:	4283      	cmp	r3, r0
    1990:	d200      	bcs.n	1994 <__aeabi_ddiv+0x2f0>
    1992:	e0ce      	b.n	1b32 <__aeabi_ddiv+0x48e>
    1994:	d100      	bne.n	1998 <__aeabi_ddiv+0x2f4>
    1996:	e0c8      	b.n	1b2a <__aeabi_ddiv+0x486>
    1998:	1a1d      	subs	r5, r3, r0
    199a:	4653      	mov	r3, sl
    199c:	1a9e      	subs	r6, r3, r2
    199e:	45b2      	cmp	sl, r6
    19a0:	4192      	sbcs	r2, r2
    19a2:	4252      	negs	r2, r2
    19a4:	1aab      	subs	r3, r5, r2
    19a6:	469a      	mov	sl, r3
    19a8:	4598      	cmp	r8, r3
    19aa:	d100      	bne.n	19ae <__aeabi_ddiv+0x30a>
    19ac:	e117      	b.n	1bde <__aeabi_ddiv+0x53a>
    19ae:	0039      	movs	r1, r7
    19b0:	0018      	movs	r0, r3
    19b2:	f7ff fdc1 	bl	1538 <__udivsi3>
    19b6:	9b01      	ldr	r3, [sp, #4]
    19b8:	0005      	movs	r5, r0
    19ba:	4343      	muls	r3, r0
    19bc:	0039      	movs	r1, r7
    19be:	4650      	mov	r0, sl
    19c0:	9304      	str	r3, [sp, #16]
    19c2:	f7ff fe3f 	bl	1644 <__aeabi_uidivmod>
    19c6:	9804      	ldr	r0, [sp, #16]
    19c8:	040b      	lsls	r3, r1, #16
    19ca:	0c31      	lsrs	r1, r6, #16
    19cc:	4319      	orrs	r1, r3
    19ce:	4288      	cmp	r0, r1
    19d0:	d909      	bls.n	19e6 <__aeabi_ddiv+0x342>
    19d2:	4441      	add	r1, r8
    19d4:	1e6b      	subs	r3, r5, #1
    19d6:	4588      	cmp	r8, r1
    19d8:	d900      	bls.n	19dc <__aeabi_ddiv+0x338>
    19da:	e107      	b.n	1bec <__aeabi_ddiv+0x548>
    19dc:	4288      	cmp	r0, r1
    19de:	d800      	bhi.n	19e2 <__aeabi_ddiv+0x33e>
    19e0:	e104      	b.n	1bec <__aeabi_ddiv+0x548>
    19e2:	3d02      	subs	r5, #2
    19e4:	4441      	add	r1, r8
    19e6:	9b04      	ldr	r3, [sp, #16]
    19e8:	1acb      	subs	r3, r1, r3
    19ea:	0018      	movs	r0, r3
    19ec:	0039      	movs	r1, r7
    19ee:	9304      	str	r3, [sp, #16]
    19f0:	f7ff fda2 	bl	1538 <__udivsi3>
    19f4:	9b01      	ldr	r3, [sp, #4]
    19f6:	4682      	mov	sl, r0
    19f8:	4343      	muls	r3, r0
    19fa:	0039      	movs	r1, r7
    19fc:	9804      	ldr	r0, [sp, #16]
    19fe:	9301      	str	r3, [sp, #4]
    1a00:	f7ff fe20 	bl	1644 <__aeabi_uidivmod>
    1a04:	9801      	ldr	r0, [sp, #4]
    1a06:	040b      	lsls	r3, r1, #16
    1a08:	0431      	lsls	r1, r6, #16
    1a0a:	0c09      	lsrs	r1, r1, #16
    1a0c:	4319      	orrs	r1, r3
    1a0e:	4288      	cmp	r0, r1
    1a10:	d90d      	bls.n	1a2e <__aeabi_ddiv+0x38a>
    1a12:	4653      	mov	r3, sl
    1a14:	4441      	add	r1, r8
    1a16:	3b01      	subs	r3, #1
    1a18:	4588      	cmp	r8, r1
    1a1a:	d900      	bls.n	1a1e <__aeabi_ddiv+0x37a>
    1a1c:	e0e8      	b.n	1bf0 <__aeabi_ddiv+0x54c>
    1a1e:	4288      	cmp	r0, r1
    1a20:	d800      	bhi.n	1a24 <__aeabi_ddiv+0x380>
    1a22:	e0e5      	b.n	1bf0 <__aeabi_ddiv+0x54c>
    1a24:	2302      	movs	r3, #2
    1a26:	425b      	negs	r3, r3
    1a28:	469c      	mov	ip, r3
    1a2a:	4441      	add	r1, r8
    1a2c:	44e2      	add	sl, ip
    1a2e:	9b01      	ldr	r3, [sp, #4]
    1a30:	042d      	lsls	r5, r5, #16
    1a32:	1ace      	subs	r6, r1, r3
    1a34:	4651      	mov	r1, sl
    1a36:	4329      	orrs	r1, r5
    1a38:	9d05      	ldr	r5, [sp, #20]
    1a3a:	464f      	mov	r7, r9
    1a3c:	002a      	movs	r2, r5
    1a3e:	040b      	lsls	r3, r1, #16
    1a40:	0c08      	lsrs	r0, r1, #16
    1a42:	0c1b      	lsrs	r3, r3, #16
    1a44:	435a      	muls	r2, r3
    1a46:	4345      	muls	r5, r0
    1a48:	437b      	muls	r3, r7
    1a4a:	4378      	muls	r0, r7
    1a4c:	195b      	adds	r3, r3, r5
    1a4e:	0c17      	lsrs	r7, r2, #16
    1a50:	18fb      	adds	r3, r7, r3
    1a52:	429d      	cmp	r5, r3
    1a54:	d903      	bls.n	1a5e <__aeabi_ddiv+0x3ba>
    1a56:	2580      	movs	r5, #128	; 0x80
    1a58:	026d      	lsls	r5, r5, #9
    1a5a:	46ac      	mov	ip, r5
    1a5c:	4460      	add	r0, ip
    1a5e:	0c1d      	lsrs	r5, r3, #16
    1a60:	0412      	lsls	r2, r2, #16
    1a62:	041b      	lsls	r3, r3, #16
    1a64:	0c12      	lsrs	r2, r2, #16
    1a66:	1828      	adds	r0, r5, r0
    1a68:	189b      	adds	r3, r3, r2
    1a6a:	4286      	cmp	r6, r0
    1a6c:	d200      	bcs.n	1a70 <__aeabi_ddiv+0x3cc>
    1a6e:	e093      	b.n	1b98 <__aeabi_ddiv+0x4f4>
    1a70:	d100      	bne.n	1a74 <__aeabi_ddiv+0x3d0>
    1a72:	e08e      	b.n	1b92 <__aeabi_ddiv+0x4ee>
    1a74:	2301      	movs	r3, #1
    1a76:	4319      	orrs	r1, r3
    1a78:	4ba0      	ldr	r3, [pc, #640]	; (1cfc <__aeabi_ddiv+0x658>)
    1a7a:	18e3      	adds	r3, r4, r3
    1a7c:	2b00      	cmp	r3, #0
    1a7e:	dc00      	bgt.n	1a82 <__aeabi_ddiv+0x3de>
    1a80:	e099      	b.n	1bb6 <__aeabi_ddiv+0x512>
    1a82:	074a      	lsls	r2, r1, #29
    1a84:	d000      	beq.n	1a88 <__aeabi_ddiv+0x3e4>
    1a86:	e09e      	b.n	1bc6 <__aeabi_ddiv+0x522>
    1a88:	465a      	mov	r2, fp
    1a8a:	01d2      	lsls	r2, r2, #7
    1a8c:	d506      	bpl.n	1a9c <__aeabi_ddiv+0x3f8>
    1a8e:	465a      	mov	r2, fp
    1a90:	4b9b      	ldr	r3, [pc, #620]	; (1d00 <__aeabi_ddiv+0x65c>)
    1a92:	401a      	ands	r2, r3
    1a94:	2380      	movs	r3, #128	; 0x80
    1a96:	4693      	mov	fp, r2
    1a98:	00db      	lsls	r3, r3, #3
    1a9a:	18e3      	adds	r3, r4, r3
    1a9c:	4a99      	ldr	r2, [pc, #612]	; (1d04 <__aeabi_ddiv+0x660>)
    1a9e:	4293      	cmp	r3, r2
    1aa0:	dd68      	ble.n	1b74 <__aeabi_ddiv+0x4d0>
    1aa2:	2301      	movs	r3, #1
    1aa4:	9a02      	ldr	r2, [sp, #8]
    1aa6:	4c98      	ldr	r4, [pc, #608]	; (1d08 <__aeabi_ddiv+0x664>)
    1aa8:	401a      	ands	r2, r3
    1aaa:	2300      	movs	r3, #0
    1aac:	4694      	mov	ip, r2
    1aae:	4698      	mov	r8, r3
    1ab0:	2200      	movs	r2, #0
    1ab2:	e6c5      	b.n	1840 <__aeabi_ddiv+0x19c>
    1ab4:	2280      	movs	r2, #128	; 0x80
    1ab6:	464b      	mov	r3, r9
    1ab8:	0312      	lsls	r2, r2, #12
    1aba:	4213      	tst	r3, r2
    1abc:	d00a      	beq.n	1ad4 <__aeabi_ddiv+0x430>
    1abe:	465b      	mov	r3, fp
    1ac0:	4213      	tst	r3, r2
    1ac2:	d106      	bne.n	1ad2 <__aeabi_ddiv+0x42e>
    1ac4:	431a      	orrs	r2, r3
    1ac6:	0312      	lsls	r2, r2, #12
    1ac8:	0b12      	lsrs	r2, r2, #12
    1aca:	46ac      	mov	ip, r5
    1acc:	4688      	mov	r8, r1
    1ace:	4c8e      	ldr	r4, [pc, #568]	; (1d08 <__aeabi_ddiv+0x664>)
    1ad0:	e6b6      	b.n	1840 <__aeabi_ddiv+0x19c>
    1ad2:	464b      	mov	r3, r9
    1ad4:	431a      	orrs	r2, r3
    1ad6:	0312      	lsls	r2, r2, #12
    1ad8:	0b12      	lsrs	r2, r2, #12
    1ada:	46bc      	mov	ip, r7
    1adc:	4c8a      	ldr	r4, [pc, #552]	; (1d08 <__aeabi_ddiv+0x664>)
    1ade:	e6af      	b.n	1840 <__aeabi_ddiv+0x19c>
    1ae0:	0003      	movs	r3, r0
    1ae2:	465a      	mov	r2, fp
    1ae4:	3b28      	subs	r3, #40	; 0x28
    1ae6:	409a      	lsls	r2, r3
    1ae8:	2300      	movs	r3, #0
    1aea:	4691      	mov	r9, r2
    1aec:	4698      	mov	r8, r3
    1aee:	e657      	b.n	17a0 <__aeabi_ddiv+0xfc>
    1af0:	4658      	mov	r0, fp
    1af2:	f000 fca9 	bl	2448 <__clzsi2>
    1af6:	3020      	adds	r0, #32
    1af8:	e640      	b.n	177c <__aeabi_ddiv+0xd8>
    1afa:	0003      	movs	r3, r0
    1afc:	4652      	mov	r2, sl
    1afe:	3b28      	subs	r3, #40	; 0x28
    1b00:	409a      	lsls	r2, r3
    1b02:	2100      	movs	r1, #0
    1b04:	4693      	mov	fp, r2
    1b06:	e677      	b.n	17f8 <__aeabi_ddiv+0x154>
    1b08:	f000 fc9e 	bl	2448 <__clzsi2>
    1b0c:	3020      	adds	r0, #32
    1b0e:	e65f      	b.n	17d0 <__aeabi_ddiv+0x12c>
    1b10:	4588      	cmp	r8, r1
    1b12:	d200      	bcs.n	1b16 <__aeabi_ddiv+0x472>
    1b14:	e6c7      	b.n	18a6 <__aeabi_ddiv+0x202>
    1b16:	464b      	mov	r3, r9
    1b18:	07de      	lsls	r6, r3, #31
    1b1a:	085d      	lsrs	r5, r3, #1
    1b1c:	4643      	mov	r3, r8
    1b1e:	085b      	lsrs	r3, r3, #1
    1b20:	431e      	orrs	r6, r3
    1b22:	4643      	mov	r3, r8
    1b24:	07db      	lsls	r3, r3, #31
    1b26:	469a      	mov	sl, r3
    1b28:	e6c2      	b.n	18b0 <__aeabi_ddiv+0x20c>
    1b2a:	2500      	movs	r5, #0
    1b2c:	4592      	cmp	sl, r2
    1b2e:	d300      	bcc.n	1b32 <__aeabi_ddiv+0x48e>
    1b30:	e733      	b.n	199a <__aeabi_ddiv+0x2f6>
    1b32:	9e03      	ldr	r6, [sp, #12]
    1b34:	4659      	mov	r1, fp
    1b36:	46b4      	mov	ip, r6
    1b38:	44e2      	add	sl, ip
    1b3a:	45b2      	cmp	sl, r6
    1b3c:	41ad      	sbcs	r5, r5
    1b3e:	426d      	negs	r5, r5
    1b40:	4445      	add	r5, r8
    1b42:	18eb      	adds	r3, r5, r3
    1b44:	3901      	subs	r1, #1
    1b46:	4598      	cmp	r8, r3
    1b48:	d207      	bcs.n	1b5a <__aeabi_ddiv+0x4b6>
    1b4a:	4298      	cmp	r0, r3
    1b4c:	d900      	bls.n	1b50 <__aeabi_ddiv+0x4ac>
    1b4e:	e07f      	b.n	1c50 <__aeabi_ddiv+0x5ac>
    1b50:	d100      	bne.n	1b54 <__aeabi_ddiv+0x4b0>
    1b52:	e0bc      	b.n	1cce <__aeabi_ddiv+0x62a>
    1b54:	1a1d      	subs	r5, r3, r0
    1b56:	468b      	mov	fp, r1
    1b58:	e71f      	b.n	199a <__aeabi_ddiv+0x2f6>
    1b5a:	4598      	cmp	r8, r3
    1b5c:	d1fa      	bne.n	1b54 <__aeabi_ddiv+0x4b0>
    1b5e:	9d03      	ldr	r5, [sp, #12]
    1b60:	4555      	cmp	r5, sl
    1b62:	d9f2      	bls.n	1b4a <__aeabi_ddiv+0x4a6>
    1b64:	4643      	mov	r3, r8
    1b66:	468b      	mov	fp, r1
    1b68:	1a1d      	subs	r5, r3, r0
    1b6a:	e716      	b.n	199a <__aeabi_ddiv+0x2f6>
    1b6c:	469b      	mov	fp, r3
    1b6e:	e6ca      	b.n	1906 <__aeabi_ddiv+0x262>
    1b70:	0015      	movs	r5, r2
    1b72:	e6e7      	b.n	1944 <__aeabi_ddiv+0x2a0>
    1b74:	465a      	mov	r2, fp
    1b76:	08c9      	lsrs	r1, r1, #3
    1b78:	0752      	lsls	r2, r2, #29
    1b7a:	430a      	orrs	r2, r1
    1b7c:	055b      	lsls	r3, r3, #21
    1b7e:	4690      	mov	r8, r2
    1b80:	0d5c      	lsrs	r4, r3, #21
    1b82:	465a      	mov	r2, fp
    1b84:	2301      	movs	r3, #1
    1b86:	9902      	ldr	r1, [sp, #8]
    1b88:	0252      	lsls	r2, r2, #9
    1b8a:	4019      	ands	r1, r3
    1b8c:	0b12      	lsrs	r2, r2, #12
    1b8e:	468c      	mov	ip, r1
    1b90:	e656      	b.n	1840 <__aeabi_ddiv+0x19c>
    1b92:	2b00      	cmp	r3, #0
    1b94:	d100      	bne.n	1b98 <__aeabi_ddiv+0x4f4>
    1b96:	e76f      	b.n	1a78 <__aeabi_ddiv+0x3d4>
    1b98:	4446      	add	r6, r8
    1b9a:	1e4a      	subs	r2, r1, #1
    1b9c:	45b0      	cmp	r8, r6
    1b9e:	d929      	bls.n	1bf4 <__aeabi_ddiv+0x550>
    1ba0:	0011      	movs	r1, r2
    1ba2:	4286      	cmp	r6, r0
    1ba4:	d000      	beq.n	1ba8 <__aeabi_ddiv+0x504>
    1ba6:	e765      	b.n	1a74 <__aeabi_ddiv+0x3d0>
    1ba8:	9a03      	ldr	r2, [sp, #12]
    1baa:	4293      	cmp	r3, r2
    1bac:	d000      	beq.n	1bb0 <__aeabi_ddiv+0x50c>
    1bae:	e761      	b.n	1a74 <__aeabi_ddiv+0x3d0>
    1bb0:	e762      	b.n	1a78 <__aeabi_ddiv+0x3d4>
    1bb2:	2101      	movs	r1, #1
    1bb4:	4249      	negs	r1, r1
    1bb6:	2001      	movs	r0, #1
    1bb8:	1ac2      	subs	r2, r0, r3
    1bba:	2a38      	cmp	r2, #56	; 0x38
    1bbc:	dd21      	ble.n	1c02 <__aeabi_ddiv+0x55e>
    1bbe:	9b02      	ldr	r3, [sp, #8]
    1bc0:	4003      	ands	r3, r0
    1bc2:	469c      	mov	ip, r3
    1bc4:	e638      	b.n	1838 <__aeabi_ddiv+0x194>
    1bc6:	220f      	movs	r2, #15
    1bc8:	400a      	ands	r2, r1
    1bca:	2a04      	cmp	r2, #4
    1bcc:	d100      	bne.n	1bd0 <__aeabi_ddiv+0x52c>
    1bce:	e75b      	b.n	1a88 <__aeabi_ddiv+0x3e4>
    1bd0:	000a      	movs	r2, r1
    1bd2:	1d11      	adds	r1, r2, #4
    1bd4:	4291      	cmp	r1, r2
    1bd6:	4192      	sbcs	r2, r2
    1bd8:	4252      	negs	r2, r2
    1bda:	4493      	add	fp, r2
    1bdc:	e754      	b.n	1a88 <__aeabi_ddiv+0x3e4>
    1bde:	4b47      	ldr	r3, [pc, #284]	; (1cfc <__aeabi_ddiv+0x658>)
    1be0:	18e3      	adds	r3, r4, r3
    1be2:	2b00      	cmp	r3, #0
    1be4:	dde5      	ble.n	1bb2 <__aeabi_ddiv+0x50e>
    1be6:	2201      	movs	r2, #1
    1be8:	4252      	negs	r2, r2
    1bea:	e7f2      	b.n	1bd2 <__aeabi_ddiv+0x52e>
    1bec:	001d      	movs	r5, r3
    1bee:	e6fa      	b.n	19e6 <__aeabi_ddiv+0x342>
    1bf0:	469a      	mov	sl, r3
    1bf2:	e71c      	b.n	1a2e <__aeabi_ddiv+0x38a>
    1bf4:	42b0      	cmp	r0, r6
    1bf6:	d839      	bhi.n	1c6c <__aeabi_ddiv+0x5c8>
    1bf8:	d06e      	beq.n	1cd8 <__aeabi_ddiv+0x634>
    1bfa:	0011      	movs	r1, r2
    1bfc:	e73a      	b.n	1a74 <__aeabi_ddiv+0x3d0>
    1bfe:	9302      	str	r3, [sp, #8]
    1c00:	e73a      	b.n	1a78 <__aeabi_ddiv+0x3d4>
    1c02:	2a1f      	cmp	r2, #31
    1c04:	dc3c      	bgt.n	1c80 <__aeabi_ddiv+0x5dc>
    1c06:	2320      	movs	r3, #32
    1c08:	1a9b      	subs	r3, r3, r2
    1c0a:	000c      	movs	r4, r1
    1c0c:	4658      	mov	r0, fp
    1c0e:	4099      	lsls	r1, r3
    1c10:	4098      	lsls	r0, r3
    1c12:	1e4b      	subs	r3, r1, #1
    1c14:	4199      	sbcs	r1, r3
    1c16:	465b      	mov	r3, fp
    1c18:	40d4      	lsrs	r4, r2
    1c1a:	40d3      	lsrs	r3, r2
    1c1c:	4320      	orrs	r0, r4
    1c1e:	4308      	orrs	r0, r1
    1c20:	001a      	movs	r2, r3
    1c22:	0743      	lsls	r3, r0, #29
    1c24:	d009      	beq.n	1c3a <__aeabi_ddiv+0x596>
    1c26:	230f      	movs	r3, #15
    1c28:	4003      	ands	r3, r0
    1c2a:	2b04      	cmp	r3, #4
    1c2c:	d005      	beq.n	1c3a <__aeabi_ddiv+0x596>
    1c2e:	0001      	movs	r1, r0
    1c30:	1d08      	adds	r0, r1, #4
    1c32:	4288      	cmp	r0, r1
    1c34:	419b      	sbcs	r3, r3
    1c36:	425b      	negs	r3, r3
    1c38:	18d2      	adds	r2, r2, r3
    1c3a:	0213      	lsls	r3, r2, #8
    1c3c:	d53a      	bpl.n	1cb4 <__aeabi_ddiv+0x610>
    1c3e:	2301      	movs	r3, #1
    1c40:	9a02      	ldr	r2, [sp, #8]
    1c42:	2401      	movs	r4, #1
    1c44:	401a      	ands	r2, r3
    1c46:	2300      	movs	r3, #0
    1c48:	4694      	mov	ip, r2
    1c4a:	4698      	mov	r8, r3
    1c4c:	2200      	movs	r2, #0
    1c4e:	e5f7      	b.n	1840 <__aeabi_ddiv+0x19c>
    1c50:	2102      	movs	r1, #2
    1c52:	4249      	negs	r1, r1
    1c54:	468c      	mov	ip, r1
    1c56:	9d03      	ldr	r5, [sp, #12]
    1c58:	44e3      	add	fp, ip
    1c5a:	46ac      	mov	ip, r5
    1c5c:	44e2      	add	sl, ip
    1c5e:	45aa      	cmp	sl, r5
    1c60:	41ad      	sbcs	r5, r5
    1c62:	426d      	negs	r5, r5
    1c64:	4445      	add	r5, r8
    1c66:	18ed      	adds	r5, r5, r3
    1c68:	1a2d      	subs	r5, r5, r0
    1c6a:	e696      	b.n	199a <__aeabi_ddiv+0x2f6>
    1c6c:	1e8a      	subs	r2, r1, #2
    1c6e:	9903      	ldr	r1, [sp, #12]
    1c70:	004d      	lsls	r5, r1, #1
    1c72:	428d      	cmp	r5, r1
    1c74:	4189      	sbcs	r1, r1
    1c76:	4249      	negs	r1, r1
    1c78:	4441      	add	r1, r8
    1c7a:	1876      	adds	r6, r6, r1
    1c7c:	9503      	str	r5, [sp, #12]
    1c7e:	e78f      	b.n	1ba0 <__aeabi_ddiv+0x4fc>
    1c80:	201f      	movs	r0, #31
    1c82:	4240      	negs	r0, r0
    1c84:	1ac3      	subs	r3, r0, r3
    1c86:	4658      	mov	r0, fp
    1c88:	40d8      	lsrs	r0, r3
    1c8a:	0003      	movs	r3, r0
    1c8c:	2a20      	cmp	r2, #32
    1c8e:	d028      	beq.n	1ce2 <__aeabi_ddiv+0x63e>
    1c90:	2040      	movs	r0, #64	; 0x40
    1c92:	465d      	mov	r5, fp
    1c94:	1a82      	subs	r2, r0, r2
    1c96:	4095      	lsls	r5, r2
    1c98:	4329      	orrs	r1, r5
    1c9a:	1e4a      	subs	r2, r1, #1
    1c9c:	4191      	sbcs	r1, r2
    1c9e:	4319      	orrs	r1, r3
    1ca0:	2307      	movs	r3, #7
    1ca2:	2200      	movs	r2, #0
    1ca4:	400b      	ands	r3, r1
    1ca6:	d009      	beq.n	1cbc <__aeabi_ddiv+0x618>
    1ca8:	230f      	movs	r3, #15
    1caa:	2200      	movs	r2, #0
    1cac:	400b      	ands	r3, r1
    1cae:	0008      	movs	r0, r1
    1cb0:	2b04      	cmp	r3, #4
    1cb2:	d1bd      	bne.n	1c30 <__aeabi_ddiv+0x58c>
    1cb4:	0001      	movs	r1, r0
    1cb6:	0753      	lsls	r3, r2, #29
    1cb8:	0252      	lsls	r2, r2, #9
    1cba:	0b12      	lsrs	r2, r2, #12
    1cbc:	08c9      	lsrs	r1, r1, #3
    1cbe:	4319      	orrs	r1, r3
    1cc0:	2301      	movs	r3, #1
    1cc2:	4688      	mov	r8, r1
    1cc4:	9902      	ldr	r1, [sp, #8]
    1cc6:	2400      	movs	r4, #0
    1cc8:	4019      	ands	r1, r3
    1cca:	468c      	mov	ip, r1
    1ccc:	e5b8      	b.n	1840 <__aeabi_ddiv+0x19c>
    1cce:	4552      	cmp	r2, sl
    1cd0:	d8be      	bhi.n	1c50 <__aeabi_ddiv+0x5ac>
    1cd2:	468b      	mov	fp, r1
    1cd4:	2500      	movs	r5, #0
    1cd6:	e660      	b.n	199a <__aeabi_ddiv+0x2f6>
    1cd8:	9d03      	ldr	r5, [sp, #12]
    1cda:	429d      	cmp	r5, r3
    1cdc:	d3c6      	bcc.n	1c6c <__aeabi_ddiv+0x5c8>
    1cde:	0011      	movs	r1, r2
    1ce0:	e762      	b.n	1ba8 <__aeabi_ddiv+0x504>
    1ce2:	2500      	movs	r5, #0
    1ce4:	e7d8      	b.n	1c98 <__aeabi_ddiv+0x5f4>
    1ce6:	2280      	movs	r2, #128	; 0x80
    1ce8:	465b      	mov	r3, fp
    1cea:	0312      	lsls	r2, r2, #12
    1cec:	431a      	orrs	r2, r3
    1cee:	9b01      	ldr	r3, [sp, #4]
    1cf0:	0312      	lsls	r2, r2, #12
    1cf2:	0b12      	lsrs	r2, r2, #12
    1cf4:	469c      	mov	ip, r3
    1cf6:	4688      	mov	r8, r1
    1cf8:	4c03      	ldr	r4, [pc, #12]	; (1d08 <__aeabi_ddiv+0x664>)
    1cfa:	e5a1      	b.n	1840 <__aeabi_ddiv+0x19c>
    1cfc:	000003ff 	.word	0x000003ff
    1d00:	feffffff 	.word	0xfeffffff
    1d04:	000007fe 	.word	0x000007fe
    1d08:	000007ff 	.word	0x000007ff

00001d0c <__aeabi_dmul>:
    1d0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d0e:	4657      	mov	r7, sl
    1d10:	4645      	mov	r5, r8
    1d12:	46de      	mov	lr, fp
    1d14:	464e      	mov	r6, r9
    1d16:	b5e0      	push	{r5, r6, r7, lr}
    1d18:	030c      	lsls	r4, r1, #12
    1d1a:	4698      	mov	r8, r3
    1d1c:	004e      	lsls	r6, r1, #1
    1d1e:	0b23      	lsrs	r3, r4, #12
    1d20:	b087      	sub	sp, #28
    1d22:	0007      	movs	r7, r0
    1d24:	4692      	mov	sl, r2
    1d26:	469b      	mov	fp, r3
    1d28:	0d76      	lsrs	r6, r6, #21
    1d2a:	0fcd      	lsrs	r5, r1, #31
    1d2c:	2e00      	cmp	r6, #0
    1d2e:	d06b      	beq.n	1e08 <__aeabi_dmul+0xfc>
    1d30:	4b6d      	ldr	r3, [pc, #436]	; (1ee8 <__aeabi_dmul+0x1dc>)
    1d32:	429e      	cmp	r6, r3
    1d34:	d035      	beq.n	1da2 <__aeabi_dmul+0x96>
    1d36:	2480      	movs	r4, #128	; 0x80
    1d38:	465b      	mov	r3, fp
    1d3a:	0f42      	lsrs	r2, r0, #29
    1d3c:	0424      	lsls	r4, r4, #16
    1d3e:	00db      	lsls	r3, r3, #3
    1d40:	4314      	orrs	r4, r2
    1d42:	431c      	orrs	r4, r3
    1d44:	00c3      	lsls	r3, r0, #3
    1d46:	4699      	mov	r9, r3
    1d48:	4b68      	ldr	r3, [pc, #416]	; (1eec <__aeabi_dmul+0x1e0>)
    1d4a:	46a3      	mov	fp, r4
    1d4c:	469c      	mov	ip, r3
    1d4e:	2300      	movs	r3, #0
    1d50:	2700      	movs	r7, #0
    1d52:	4466      	add	r6, ip
    1d54:	9302      	str	r3, [sp, #8]
    1d56:	4643      	mov	r3, r8
    1d58:	031c      	lsls	r4, r3, #12
    1d5a:	005a      	lsls	r2, r3, #1
    1d5c:	0fdb      	lsrs	r3, r3, #31
    1d5e:	4650      	mov	r0, sl
    1d60:	0b24      	lsrs	r4, r4, #12
    1d62:	0d52      	lsrs	r2, r2, #21
    1d64:	4698      	mov	r8, r3
    1d66:	d100      	bne.n	1d6a <__aeabi_dmul+0x5e>
    1d68:	e076      	b.n	1e58 <__aeabi_dmul+0x14c>
    1d6a:	4b5f      	ldr	r3, [pc, #380]	; (1ee8 <__aeabi_dmul+0x1dc>)
    1d6c:	429a      	cmp	r2, r3
    1d6e:	d06d      	beq.n	1e4c <__aeabi_dmul+0x140>
    1d70:	2380      	movs	r3, #128	; 0x80
    1d72:	0f41      	lsrs	r1, r0, #29
    1d74:	041b      	lsls	r3, r3, #16
    1d76:	430b      	orrs	r3, r1
    1d78:	495c      	ldr	r1, [pc, #368]	; (1eec <__aeabi_dmul+0x1e0>)
    1d7a:	00e4      	lsls	r4, r4, #3
    1d7c:	468c      	mov	ip, r1
    1d7e:	431c      	orrs	r4, r3
    1d80:	00c3      	lsls	r3, r0, #3
    1d82:	2000      	movs	r0, #0
    1d84:	4462      	add	r2, ip
    1d86:	4641      	mov	r1, r8
    1d88:	18b6      	adds	r6, r6, r2
    1d8a:	4069      	eors	r1, r5
    1d8c:	1c72      	adds	r2, r6, #1
    1d8e:	9101      	str	r1, [sp, #4]
    1d90:	4694      	mov	ip, r2
    1d92:	4307      	orrs	r7, r0
    1d94:	2f0f      	cmp	r7, #15
    1d96:	d900      	bls.n	1d9a <__aeabi_dmul+0x8e>
    1d98:	e0b0      	b.n	1efc <__aeabi_dmul+0x1f0>
    1d9a:	4a55      	ldr	r2, [pc, #340]	; (1ef0 <__aeabi_dmul+0x1e4>)
    1d9c:	00bf      	lsls	r7, r7, #2
    1d9e:	59d2      	ldr	r2, [r2, r7]
    1da0:	4697      	mov	pc, r2
    1da2:	465b      	mov	r3, fp
    1da4:	4303      	orrs	r3, r0
    1da6:	4699      	mov	r9, r3
    1da8:	d000      	beq.n	1dac <__aeabi_dmul+0xa0>
    1daa:	e087      	b.n	1ebc <__aeabi_dmul+0x1b0>
    1dac:	2300      	movs	r3, #0
    1dae:	469b      	mov	fp, r3
    1db0:	3302      	adds	r3, #2
    1db2:	2708      	movs	r7, #8
    1db4:	9302      	str	r3, [sp, #8]
    1db6:	e7ce      	b.n	1d56 <__aeabi_dmul+0x4a>
    1db8:	4642      	mov	r2, r8
    1dba:	9201      	str	r2, [sp, #4]
    1dbc:	2802      	cmp	r0, #2
    1dbe:	d067      	beq.n	1e90 <__aeabi_dmul+0x184>
    1dc0:	2803      	cmp	r0, #3
    1dc2:	d100      	bne.n	1dc6 <__aeabi_dmul+0xba>
    1dc4:	e20e      	b.n	21e4 <STACK_SIZE+0x1e4>
    1dc6:	2801      	cmp	r0, #1
    1dc8:	d000      	beq.n	1dcc <__aeabi_dmul+0xc0>
    1dca:	e162      	b.n	2092 <STACK_SIZE+0x92>
    1dcc:	2300      	movs	r3, #0
    1dce:	2400      	movs	r4, #0
    1dd0:	2200      	movs	r2, #0
    1dd2:	4699      	mov	r9, r3
    1dd4:	9901      	ldr	r1, [sp, #4]
    1dd6:	4001      	ands	r1, r0
    1dd8:	b2cd      	uxtb	r5, r1
    1dda:	2100      	movs	r1, #0
    1ddc:	0312      	lsls	r2, r2, #12
    1dde:	0d0b      	lsrs	r3, r1, #20
    1de0:	0b12      	lsrs	r2, r2, #12
    1de2:	051b      	lsls	r3, r3, #20
    1de4:	4313      	orrs	r3, r2
    1de6:	4a43      	ldr	r2, [pc, #268]	; (1ef4 <__aeabi_dmul+0x1e8>)
    1de8:	0524      	lsls	r4, r4, #20
    1dea:	4013      	ands	r3, r2
    1dec:	431c      	orrs	r4, r3
    1dee:	0064      	lsls	r4, r4, #1
    1df0:	07ed      	lsls	r5, r5, #31
    1df2:	0864      	lsrs	r4, r4, #1
    1df4:	432c      	orrs	r4, r5
    1df6:	4648      	mov	r0, r9
    1df8:	0021      	movs	r1, r4
    1dfa:	b007      	add	sp, #28
    1dfc:	bc3c      	pop	{r2, r3, r4, r5}
    1dfe:	4690      	mov	r8, r2
    1e00:	4699      	mov	r9, r3
    1e02:	46a2      	mov	sl, r4
    1e04:	46ab      	mov	fp, r5
    1e06:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1e08:	4303      	orrs	r3, r0
    1e0a:	4699      	mov	r9, r3
    1e0c:	d04f      	beq.n	1eae <__aeabi_dmul+0x1a2>
    1e0e:	465b      	mov	r3, fp
    1e10:	2b00      	cmp	r3, #0
    1e12:	d100      	bne.n	1e16 <__aeabi_dmul+0x10a>
    1e14:	e189      	b.n	212a <STACK_SIZE+0x12a>
    1e16:	4658      	mov	r0, fp
    1e18:	f000 fb16 	bl	2448 <__clzsi2>
    1e1c:	0003      	movs	r3, r0
    1e1e:	3b0b      	subs	r3, #11
    1e20:	2b1c      	cmp	r3, #28
    1e22:	dd00      	ble.n	1e26 <__aeabi_dmul+0x11a>
    1e24:	e17a      	b.n	211c <STACK_SIZE+0x11c>
    1e26:	221d      	movs	r2, #29
    1e28:	1ad3      	subs	r3, r2, r3
    1e2a:	003a      	movs	r2, r7
    1e2c:	0001      	movs	r1, r0
    1e2e:	465c      	mov	r4, fp
    1e30:	40da      	lsrs	r2, r3
    1e32:	3908      	subs	r1, #8
    1e34:	408c      	lsls	r4, r1
    1e36:	0013      	movs	r3, r2
    1e38:	408f      	lsls	r7, r1
    1e3a:	4323      	orrs	r3, r4
    1e3c:	469b      	mov	fp, r3
    1e3e:	46b9      	mov	r9, r7
    1e40:	2300      	movs	r3, #0
    1e42:	4e2d      	ldr	r6, [pc, #180]	; (1ef8 <__aeabi_dmul+0x1ec>)
    1e44:	2700      	movs	r7, #0
    1e46:	1a36      	subs	r6, r6, r0
    1e48:	9302      	str	r3, [sp, #8]
    1e4a:	e784      	b.n	1d56 <__aeabi_dmul+0x4a>
    1e4c:	4653      	mov	r3, sl
    1e4e:	4323      	orrs	r3, r4
    1e50:	d12a      	bne.n	1ea8 <__aeabi_dmul+0x19c>
    1e52:	2400      	movs	r4, #0
    1e54:	2002      	movs	r0, #2
    1e56:	e796      	b.n	1d86 <__aeabi_dmul+0x7a>
    1e58:	4653      	mov	r3, sl
    1e5a:	4323      	orrs	r3, r4
    1e5c:	d020      	beq.n	1ea0 <__aeabi_dmul+0x194>
    1e5e:	2c00      	cmp	r4, #0
    1e60:	d100      	bne.n	1e64 <__aeabi_dmul+0x158>
    1e62:	e157      	b.n	2114 <STACK_SIZE+0x114>
    1e64:	0020      	movs	r0, r4
    1e66:	f000 faef 	bl	2448 <__clzsi2>
    1e6a:	0003      	movs	r3, r0
    1e6c:	3b0b      	subs	r3, #11
    1e6e:	2b1c      	cmp	r3, #28
    1e70:	dd00      	ble.n	1e74 <__aeabi_dmul+0x168>
    1e72:	e149      	b.n	2108 <STACK_SIZE+0x108>
    1e74:	211d      	movs	r1, #29
    1e76:	1acb      	subs	r3, r1, r3
    1e78:	4651      	mov	r1, sl
    1e7a:	0002      	movs	r2, r0
    1e7c:	40d9      	lsrs	r1, r3
    1e7e:	4653      	mov	r3, sl
    1e80:	3a08      	subs	r2, #8
    1e82:	4094      	lsls	r4, r2
    1e84:	4093      	lsls	r3, r2
    1e86:	430c      	orrs	r4, r1
    1e88:	4a1b      	ldr	r2, [pc, #108]	; (1ef8 <__aeabi_dmul+0x1ec>)
    1e8a:	1a12      	subs	r2, r2, r0
    1e8c:	2000      	movs	r0, #0
    1e8e:	e77a      	b.n	1d86 <__aeabi_dmul+0x7a>
    1e90:	2501      	movs	r5, #1
    1e92:	9b01      	ldr	r3, [sp, #4]
    1e94:	4c14      	ldr	r4, [pc, #80]	; (1ee8 <__aeabi_dmul+0x1dc>)
    1e96:	401d      	ands	r5, r3
    1e98:	2300      	movs	r3, #0
    1e9a:	2200      	movs	r2, #0
    1e9c:	4699      	mov	r9, r3
    1e9e:	e79c      	b.n	1dda <__aeabi_dmul+0xce>
    1ea0:	2400      	movs	r4, #0
    1ea2:	2200      	movs	r2, #0
    1ea4:	2001      	movs	r0, #1
    1ea6:	e76e      	b.n	1d86 <__aeabi_dmul+0x7a>
    1ea8:	4653      	mov	r3, sl
    1eaa:	2003      	movs	r0, #3
    1eac:	e76b      	b.n	1d86 <__aeabi_dmul+0x7a>
    1eae:	2300      	movs	r3, #0
    1eb0:	469b      	mov	fp, r3
    1eb2:	3301      	adds	r3, #1
    1eb4:	2704      	movs	r7, #4
    1eb6:	2600      	movs	r6, #0
    1eb8:	9302      	str	r3, [sp, #8]
    1eba:	e74c      	b.n	1d56 <__aeabi_dmul+0x4a>
    1ebc:	2303      	movs	r3, #3
    1ebe:	4681      	mov	r9, r0
    1ec0:	270c      	movs	r7, #12
    1ec2:	9302      	str	r3, [sp, #8]
    1ec4:	e747      	b.n	1d56 <__aeabi_dmul+0x4a>
    1ec6:	2280      	movs	r2, #128	; 0x80
    1ec8:	2300      	movs	r3, #0
    1eca:	2500      	movs	r5, #0
    1ecc:	0312      	lsls	r2, r2, #12
    1ece:	4699      	mov	r9, r3
    1ed0:	4c05      	ldr	r4, [pc, #20]	; (1ee8 <__aeabi_dmul+0x1dc>)
    1ed2:	e782      	b.n	1dda <__aeabi_dmul+0xce>
    1ed4:	465c      	mov	r4, fp
    1ed6:	464b      	mov	r3, r9
    1ed8:	9802      	ldr	r0, [sp, #8]
    1eda:	e76f      	b.n	1dbc <__aeabi_dmul+0xb0>
    1edc:	465c      	mov	r4, fp
    1ede:	464b      	mov	r3, r9
    1ee0:	9501      	str	r5, [sp, #4]
    1ee2:	9802      	ldr	r0, [sp, #8]
    1ee4:	e76a      	b.n	1dbc <__aeabi_dmul+0xb0>
    1ee6:	46c0      	nop			; (mov r8, r8)
    1ee8:	000007ff 	.word	0x000007ff
    1eec:	fffffc01 	.word	0xfffffc01
    1ef0:	00004ec0 	.word	0x00004ec0
    1ef4:	800fffff 	.word	0x800fffff
    1ef8:	fffffc0d 	.word	0xfffffc0d
    1efc:	464a      	mov	r2, r9
    1efe:	4649      	mov	r1, r9
    1f00:	0c17      	lsrs	r7, r2, #16
    1f02:	0c1a      	lsrs	r2, r3, #16
    1f04:	041b      	lsls	r3, r3, #16
    1f06:	0c1b      	lsrs	r3, r3, #16
    1f08:	0408      	lsls	r0, r1, #16
    1f0a:	0019      	movs	r1, r3
    1f0c:	0c00      	lsrs	r0, r0, #16
    1f0e:	4341      	muls	r1, r0
    1f10:	0015      	movs	r5, r2
    1f12:	4688      	mov	r8, r1
    1f14:	0019      	movs	r1, r3
    1f16:	437d      	muls	r5, r7
    1f18:	4379      	muls	r1, r7
    1f1a:	9503      	str	r5, [sp, #12]
    1f1c:	4689      	mov	r9, r1
    1f1e:	0029      	movs	r1, r5
    1f20:	0015      	movs	r5, r2
    1f22:	4345      	muls	r5, r0
    1f24:	444d      	add	r5, r9
    1f26:	9502      	str	r5, [sp, #8]
    1f28:	4645      	mov	r5, r8
    1f2a:	0c2d      	lsrs	r5, r5, #16
    1f2c:	46aa      	mov	sl, r5
    1f2e:	9d02      	ldr	r5, [sp, #8]
    1f30:	4455      	add	r5, sl
    1f32:	45a9      	cmp	r9, r5
    1f34:	d906      	bls.n	1f44 <__aeabi_dmul+0x238>
    1f36:	468a      	mov	sl, r1
    1f38:	2180      	movs	r1, #128	; 0x80
    1f3a:	0249      	lsls	r1, r1, #9
    1f3c:	4689      	mov	r9, r1
    1f3e:	44ca      	add	sl, r9
    1f40:	4651      	mov	r1, sl
    1f42:	9103      	str	r1, [sp, #12]
    1f44:	0c29      	lsrs	r1, r5, #16
    1f46:	9104      	str	r1, [sp, #16]
    1f48:	4641      	mov	r1, r8
    1f4a:	0409      	lsls	r1, r1, #16
    1f4c:	042d      	lsls	r5, r5, #16
    1f4e:	0c09      	lsrs	r1, r1, #16
    1f50:	4688      	mov	r8, r1
    1f52:	0029      	movs	r1, r5
    1f54:	0c25      	lsrs	r5, r4, #16
    1f56:	0424      	lsls	r4, r4, #16
    1f58:	4441      	add	r1, r8
    1f5a:	0c24      	lsrs	r4, r4, #16
    1f5c:	9105      	str	r1, [sp, #20]
    1f5e:	0021      	movs	r1, r4
    1f60:	4341      	muls	r1, r0
    1f62:	4688      	mov	r8, r1
    1f64:	0021      	movs	r1, r4
    1f66:	4379      	muls	r1, r7
    1f68:	468a      	mov	sl, r1
    1f6a:	4368      	muls	r0, r5
    1f6c:	4641      	mov	r1, r8
    1f6e:	4450      	add	r0, sl
    1f70:	4681      	mov	r9, r0
    1f72:	0c08      	lsrs	r0, r1, #16
    1f74:	4448      	add	r0, r9
    1f76:	436f      	muls	r7, r5
    1f78:	4582      	cmp	sl, r0
    1f7a:	d903      	bls.n	1f84 <__aeabi_dmul+0x278>
    1f7c:	2180      	movs	r1, #128	; 0x80
    1f7e:	0249      	lsls	r1, r1, #9
    1f80:	4689      	mov	r9, r1
    1f82:	444f      	add	r7, r9
    1f84:	0c01      	lsrs	r1, r0, #16
    1f86:	4689      	mov	r9, r1
    1f88:	0039      	movs	r1, r7
    1f8a:	4449      	add	r1, r9
    1f8c:	9102      	str	r1, [sp, #8]
    1f8e:	4641      	mov	r1, r8
    1f90:	040f      	lsls	r7, r1, #16
    1f92:	9904      	ldr	r1, [sp, #16]
    1f94:	0c3f      	lsrs	r7, r7, #16
    1f96:	4688      	mov	r8, r1
    1f98:	0400      	lsls	r0, r0, #16
    1f9a:	19c0      	adds	r0, r0, r7
    1f9c:	4480      	add	r8, r0
    1f9e:	4641      	mov	r1, r8
    1fa0:	9104      	str	r1, [sp, #16]
    1fa2:	4659      	mov	r1, fp
    1fa4:	0c0f      	lsrs	r7, r1, #16
    1fa6:	0409      	lsls	r1, r1, #16
    1fa8:	0c09      	lsrs	r1, r1, #16
    1faa:	4688      	mov	r8, r1
    1fac:	4359      	muls	r1, r3
    1fae:	468a      	mov	sl, r1
    1fb0:	0039      	movs	r1, r7
    1fb2:	4351      	muls	r1, r2
    1fb4:	4689      	mov	r9, r1
    1fb6:	4641      	mov	r1, r8
    1fb8:	434a      	muls	r2, r1
    1fba:	4651      	mov	r1, sl
    1fbc:	0c09      	lsrs	r1, r1, #16
    1fbe:	468b      	mov	fp, r1
    1fc0:	437b      	muls	r3, r7
    1fc2:	18d2      	adds	r2, r2, r3
    1fc4:	445a      	add	r2, fp
    1fc6:	4293      	cmp	r3, r2
    1fc8:	d903      	bls.n	1fd2 <__aeabi_dmul+0x2c6>
    1fca:	2380      	movs	r3, #128	; 0x80
    1fcc:	025b      	lsls	r3, r3, #9
    1fce:	469b      	mov	fp, r3
    1fd0:	44d9      	add	r9, fp
    1fd2:	4651      	mov	r1, sl
    1fd4:	0409      	lsls	r1, r1, #16
    1fd6:	0c09      	lsrs	r1, r1, #16
    1fd8:	468a      	mov	sl, r1
    1fda:	4641      	mov	r1, r8
    1fdc:	4361      	muls	r1, r4
    1fde:	437c      	muls	r4, r7
    1fe0:	0c13      	lsrs	r3, r2, #16
    1fe2:	0412      	lsls	r2, r2, #16
    1fe4:	444b      	add	r3, r9
    1fe6:	4452      	add	r2, sl
    1fe8:	46a1      	mov	r9, r4
    1fea:	468a      	mov	sl, r1
    1fec:	003c      	movs	r4, r7
    1fee:	4641      	mov	r1, r8
    1ff0:	436c      	muls	r4, r5
    1ff2:	434d      	muls	r5, r1
    1ff4:	4651      	mov	r1, sl
    1ff6:	444d      	add	r5, r9
    1ff8:	0c0f      	lsrs	r7, r1, #16
    1ffa:	197d      	adds	r5, r7, r5
    1ffc:	45a9      	cmp	r9, r5
    1ffe:	d903      	bls.n	2008 <STACK_SIZE+0x8>
    2000:	2180      	movs	r1, #128	; 0x80
    2002:	0249      	lsls	r1, r1, #9
    2004:	4688      	mov	r8, r1
    2006:	4444      	add	r4, r8
    2008:	9f04      	ldr	r7, [sp, #16]
    200a:	9903      	ldr	r1, [sp, #12]
    200c:	46b8      	mov	r8, r7
    200e:	4441      	add	r1, r8
    2010:	468b      	mov	fp, r1
    2012:	4583      	cmp	fp, r0
    2014:	4180      	sbcs	r0, r0
    2016:	4241      	negs	r1, r0
    2018:	4688      	mov	r8, r1
    201a:	4651      	mov	r1, sl
    201c:	0408      	lsls	r0, r1, #16
    201e:	042f      	lsls	r7, r5, #16
    2020:	0c00      	lsrs	r0, r0, #16
    2022:	183f      	adds	r7, r7, r0
    2024:	4658      	mov	r0, fp
    2026:	9902      	ldr	r1, [sp, #8]
    2028:	1810      	adds	r0, r2, r0
    202a:	4689      	mov	r9, r1
    202c:	4290      	cmp	r0, r2
    202e:	4192      	sbcs	r2, r2
    2030:	444f      	add	r7, r9
    2032:	46ba      	mov	sl, r7
    2034:	4252      	negs	r2, r2
    2036:	4699      	mov	r9, r3
    2038:	4693      	mov	fp, r2
    203a:	44c2      	add	sl, r8
    203c:	44d1      	add	r9, sl
    203e:	44cb      	add	fp, r9
    2040:	428f      	cmp	r7, r1
    2042:	41bf      	sbcs	r7, r7
    2044:	45c2      	cmp	sl, r8
    2046:	4189      	sbcs	r1, r1
    2048:	4599      	cmp	r9, r3
    204a:	419b      	sbcs	r3, r3
    204c:	4593      	cmp	fp, r2
    204e:	4192      	sbcs	r2, r2
    2050:	427f      	negs	r7, r7
    2052:	4249      	negs	r1, r1
    2054:	0c2d      	lsrs	r5, r5, #16
    2056:	4252      	negs	r2, r2
    2058:	430f      	orrs	r7, r1
    205a:	425b      	negs	r3, r3
    205c:	4313      	orrs	r3, r2
    205e:	197f      	adds	r7, r7, r5
    2060:	18ff      	adds	r7, r7, r3
    2062:	465b      	mov	r3, fp
    2064:	193c      	adds	r4, r7, r4
    2066:	0ddb      	lsrs	r3, r3, #23
    2068:	9a05      	ldr	r2, [sp, #20]
    206a:	0264      	lsls	r4, r4, #9
    206c:	431c      	orrs	r4, r3
    206e:	0243      	lsls	r3, r0, #9
    2070:	4313      	orrs	r3, r2
    2072:	1e5d      	subs	r5, r3, #1
    2074:	41ab      	sbcs	r3, r5
    2076:	465a      	mov	r2, fp
    2078:	0dc0      	lsrs	r0, r0, #23
    207a:	4303      	orrs	r3, r0
    207c:	0252      	lsls	r2, r2, #9
    207e:	4313      	orrs	r3, r2
    2080:	01e2      	lsls	r2, r4, #7
    2082:	d556      	bpl.n	2132 <STACK_SIZE+0x132>
    2084:	2001      	movs	r0, #1
    2086:	085a      	lsrs	r2, r3, #1
    2088:	4003      	ands	r3, r0
    208a:	4313      	orrs	r3, r2
    208c:	07e2      	lsls	r2, r4, #31
    208e:	4313      	orrs	r3, r2
    2090:	0864      	lsrs	r4, r4, #1
    2092:	485a      	ldr	r0, [pc, #360]	; (21fc <STACK_SIZE+0x1fc>)
    2094:	4460      	add	r0, ip
    2096:	2800      	cmp	r0, #0
    2098:	dd4d      	ble.n	2136 <STACK_SIZE+0x136>
    209a:	075a      	lsls	r2, r3, #29
    209c:	d009      	beq.n	20b2 <STACK_SIZE+0xb2>
    209e:	220f      	movs	r2, #15
    20a0:	401a      	ands	r2, r3
    20a2:	2a04      	cmp	r2, #4
    20a4:	d005      	beq.n	20b2 <STACK_SIZE+0xb2>
    20a6:	1d1a      	adds	r2, r3, #4
    20a8:	429a      	cmp	r2, r3
    20aa:	419b      	sbcs	r3, r3
    20ac:	425b      	negs	r3, r3
    20ae:	18e4      	adds	r4, r4, r3
    20b0:	0013      	movs	r3, r2
    20b2:	01e2      	lsls	r2, r4, #7
    20b4:	d504      	bpl.n	20c0 <STACK_SIZE+0xc0>
    20b6:	2080      	movs	r0, #128	; 0x80
    20b8:	4a51      	ldr	r2, [pc, #324]	; (2200 <STACK_SIZE+0x200>)
    20ba:	00c0      	lsls	r0, r0, #3
    20bc:	4014      	ands	r4, r2
    20be:	4460      	add	r0, ip
    20c0:	4a50      	ldr	r2, [pc, #320]	; (2204 <STACK_SIZE+0x204>)
    20c2:	4290      	cmp	r0, r2
    20c4:	dd00      	ble.n	20c8 <STACK_SIZE+0xc8>
    20c6:	e6e3      	b.n	1e90 <__aeabi_dmul+0x184>
    20c8:	2501      	movs	r5, #1
    20ca:	08db      	lsrs	r3, r3, #3
    20cc:	0762      	lsls	r2, r4, #29
    20ce:	431a      	orrs	r2, r3
    20d0:	0264      	lsls	r4, r4, #9
    20d2:	9b01      	ldr	r3, [sp, #4]
    20d4:	4691      	mov	r9, r2
    20d6:	0b22      	lsrs	r2, r4, #12
    20d8:	0544      	lsls	r4, r0, #21
    20da:	0d64      	lsrs	r4, r4, #21
    20dc:	401d      	ands	r5, r3
    20de:	e67c      	b.n	1dda <__aeabi_dmul+0xce>
    20e0:	2280      	movs	r2, #128	; 0x80
    20e2:	4659      	mov	r1, fp
    20e4:	0312      	lsls	r2, r2, #12
    20e6:	4211      	tst	r1, r2
    20e8:	d008      	beq.n	20fc <STACK_SIZE+0xfc>
    20ea:	4214      	tst	r4, r2
    20ec:	d106      	bne.n	20fc <STACK_SIZE+0xfc>
    20ee:	4322      	orrs	r2, r4
    20f0:	0312      	lsls	r2, r2, #12
    20f2:	0b12      	lsrs	r2, r2, #12
    20f4:	4645      	mov	r5, r8
    20f6:	4699      	mov	r9, r3
    20f8:	4c43      	ldr	r4, [pc, #268]	; (2208 <STACK_SIZE+0x208>)
    20fa:	e66e      	b.n	1dda <__aeabi_dmul+0xce>
    20fc:	465b      	mov	r3, fp
    20fe:	431a      	orrs	r2, r3
    2100:	0312      	lsls	r2, r2, #12
    2102:	0b12      	lsrs	r2, r2, #12
    2104:	4c40      	ldr	r4, [pc, #256]	; (2208 <STACK_SIZE+0x208>)
    2106:	e668      	b.n	1dda <__aeabi_dmul+0xce>
    2108:	0003      	movs	r3, r0
    210a:	4654      	mov	r4, sl
    210c:	3b28      	subs	r3, #40	; 0x28
    210e:	409c      	lsls	r4, r3
    2110:	2300      	movs	r3, #0
    2112:	e6b9      	b.n	1e88 <__aeabi_dmul+0x17c>
    2114:	f000 f998 	bl	2448 <__clzsi2>
    2118:	3020      	adds	r0, #32
    211a:	e6a6      	b.n	1e6a <__aeabi_dmul+0x15e>
    211c:	0003      	movs	r3, r0
    211e:	3b28      	subs	r3, #40	; 0x28
    2120:	409f      	lsls	r7, r3
    2122:	2300      	movs	r3, #0
    2124:	46bb      	mov	fp, r7
    2126:	4699      	mov	r9, r3
    2128:	e68a      	b.n	1e40 <__aeabi_dmul+0x134>
    212a:	f000 f98d 	bl	2448 <__clzsi2>
    212e:	3020      	adds	r0, #32
    2130:	e674      	b.n	1e1c <__aeabi_dmul+0x110>
    2132:	46b4      	mov	ip, r6
    2134:	e7ad      	b.n	2092 <STACK_SIZE+0x92>
    2136:	2501      	movs	r5, #1
    2138:	1a2a      	subs	r2, r5, r0
    213a:	2a38      	cmp	r2, #56	; 0x38
    213c:	dd06      	ble.n	214c <STACK_SIZE+0x14c>
    213e:	9b01      	ldr	r3, [sp, #4]
    2140:	2400      	movs	r4, #0
    2142:	401d      	ands	r5, r3
    2144:	2300      	movs	r3, #0
    2146:	2200      	movs	r2, #0
    2148:	4699      	mov	r9, r3
    214a:	e646      	b.n	1dda <__aeabi_dmul+0xce>
    214c:	2a1f      	cmp	r2, #31
    214e:	dc21      	bgt.n	2194 <STACK_SIZE+0x194>
    2150:	2520      	movs	r5, #32
    2152:	0020      	movs	r0, r4
    2154:	1aad      	subs	r5, r5, r2
    2156:	001e      	movs	r6, r3
    2158:	40ab      	lsls	r3, r5
    215a:	40a8      	lsls	r0, r5
    215c:	40d6      	lsrs	r6, r2
    215e:	1e5d      	subs	r5, r3, #1
    2160:	41ab      	sbcs	r3, r5
    2162:	4330      	orrs	r0, r6
    2164:	4318      	orrs	r0, r3
    2166:	40d4      	lsrs	r4, r2
    2168:	0743      	lsls	r3, r0, #29
    216a:	d009      	beq.n	2180 <STACK_SIZE+0x180>
    216c:	230f      	movs	r3, #15
    216e:	4003      	ands	r3, r0
    2170:	2b04      	cmp	r3, #4
    2172:	d005      	beq.n	2180 <STACK_SIZE+0x180>
    2174:	0003      	movs	r3, r0
    2176:	1d18      	adds	r0, r3, #4
    2178:	4298      	cmp	r0, r3
    217a:	419b      	sbcs	r3, r3
    217c:	425b      	negs	r3, r3
    217e:	18e4      	adds	r4, r4, r3
    2180:	0223      	lsls	r3, r4, #8
    2182:	d521      	bpl.n	21c8 <STACK_SIZE+0x1c8>
    2184:	2501      	movs	r5, #1
    2186:	9b01      	ldr	r3, [sp, #4]
    2188:	2401      	movs	r4, #1
    218a:	401d      	ands	r5, r3
    218c:	2300      	movs	r3, #0
    218e:	2200      	movs	r2, #0
    2190:	4699      	mov	r9, r3
    2192:	e622      	b.n	1dda <__aeabi_dmul+0xce>
    2194:	251f      	movs	r5, #31
    2196:	0021      	movs	r1, r4
    2198:	426d      	negs	r5, r5
    219a:	1a28      	subs	r0, r5, r0
    219c:	40c1      	lsrs	r1, r0
    219e:	0008      	movs	r0, r1
    21a0:	2a20      	cmp	r2, #32
    21a2:	d01d      	beq.n	21e0 <STACK_SIZE+0x1e0>
    21a4:	355f      	adds	r5, #95	; 0x5f
    21a6:	1aaa      	subs	r2, r5, r2
    21a8:	4094      	lsls	r4, r2
    21aa:	4323      	orrs	r3, r4
    21ac:	1e5c      	subs	r4, r3, #1
    21ae:	41a3      	sbcs	r3, r4
    21b0:	2507      	movs	r5, #7
    21b2:	4303      	orrs	r3, r0
    21b4:	401d      	ands	r5, r3
    21b6:	2200      	movs	r2, #0
    21b8:	2d00      	cmp	r5, #0
    21ba:	d009      	beq.n	21d0 <STACK_SIZE+0x1d0>
    21bc:	220f      	movs	r2, #15
    21be:	2400      	movs	r4, #0
    21c0:	401a      	ands	r2, r3
    21c2:	0018      	movs	r0, r3
    21c4:	2a04      	cmp	r2, #4
    21c6:	d1d6      	bne.n	2176 <STACK_SIZE+0x176>
    21c8:	0003      	movs	r3, r0
    21ca:	0765      	lsls	r5, r4, #29
    21cc:	0264      	lsls	r4, r4, #9
    21ce:	0b22      	lsrs	r2, r4, #12
    21d0:	08db      	lsrs	r3, r3, #3
    21d2:	432b      	orrs	r3, r5
    21d4:	2501      	movs	r5, #1
    21d6:	4699      	mov	r9, r3
    21d8:	9b01      	ldr	r3, [sp, #4]
    21da:	2400      	movs	r4, #0
    21dc:	401d      	ands	r5, r3
    21de:	e5fc      	b.n	1dda <__aeabi_dmul+0xce>
    21e0:	2400      	movs	r4, #0
    21e2:	e7e2      	b.n	21aa <STACK_SIZE+0x1aa>
    21e4:	2280      	movs	r2, #128	; 0x80
    21e6:	2501      	movs	r5, #1
    21e8:	0312      	lsls	r2, r2, #12
    21ea:	4322      	orrs	r2, r4
    21ec:	9901      	ldr	r1, [sp, #4]
    21ee:	0312      	lsls	r2, r2, #12
    21f0:	0b12      	lsrs	r2, r2, #12
    21f2:	400d      	ands	r5, r1
    21f4:	4699      	mov	r9, r3
    21f6:	4c04      	ldr	r4, [pc, #16]	; (2208 <STACK_SIZE+0x208>)
    21f8:	e5ef      	b.n	1dda <__aeabi_dmul+0xce>
    21fa:	46c0      	nop			; (mov r8, r8)
    21fc:	000003ff 	.word	0x000003ff
    2200:	feffffff 	.word	0xfeffffff
    2204:	000007fe 	.word	0x000007fe
    2208:	000007ff 	.word	0x000007ff

0000220c <__aeabi_i2d>:
    220c:	b570      	push	{r4, r5, r6, lr}
    220e:	2800      	cmp	r0, #0
    2210:	d030      	beq.n	2274 <__aeabi_i2d+0x68>
    2212:	17c3      	asrs	r3, r0, #31
    2214:	18c4      	adds	r4, r0, r3
    2216:	405c      	eors	r4, r3
    2218:	0fc5      	lsrs	r5, r0, #31
    221a:	0020      	movs	r0, r4
    221c:	f000 f914 	bl	2448 <__clzsi2>
    2220:	4b17      	ldr	r3, [pc, #92]	; (2280 <__aeabi_i2d+0x74>)
    2222:	4a18      	ldr	r2, [pc, #96]	; (2284 <__aeabi_i2d+0x78>)
    2224:	1a1b      	subs	r3, r3, r0
    2226:	1ad2      	subs	r2, r2, r3
    2228:	2a1f      	cmp	r2, #31
    222a:	dd18      	ble.n	225e <__aeabi_i2d+0x52>
    222c:	4a16      	ldr	r2, [pc, #88]	; (2288 <__aeabi_i2d+0x7c>)
    222e:	1ad2      	subs	r2, r2, r3
    2230:	4094      	lsls	r4, r2
    2232:	2200      	movs	r2, #0
    2234:	0324      	lsls	r4, r4, #12
    2236:	055b      	lsls	r3, r3, #21
    2238:	0b24      	lsrs	r4, r4, #12
    223a:	0d5b      	lsrs	r3, r3, #21
    223c:	2100      	movs	r1, #0
    223e:	0010      	movs	r0, r2
    2240:	0324      	lsls	r4, r4, #12
    2242:	0d0a      	lsrs	r2, r1, #20
    2244:	0b24      	lsrs	r4, r4, #12
    2246:	0512      	lsls	r2, r2, #20
    2248:	4322      	orrs	r2, r4
    224a:	4c10      	ldr	r4, [pc, #64]	; (228c <__aeabi_i2d+0x80>)
    224c:	051b      	lsls	r3, r3, #20
    224e:	4022      	ands	r2, r4
    2250:	4313      	orrs	r3, r2
    2252:	005b      	lsls	r3, r3, #1
    2254:	07ed      	lsls	r5, r5, #31
    2256:	085b      	lsrs	r3, r3, #1
    2258:	432b      	orrs	r3, r5
    225a:	0019      	movs	r1, r3
    225c:	bd70      	pop	{r4, r5, r6, pc}
    225e:	0021      	movs	r1, r4
    2260:	4091      	lsls	r1, r2
    2262:	000a      	movs	r2, r1
    2264:	210b      	movs	r1, #11
    2266:	1a08      	subs	r0, r1, r0
    2268:	40c4      	lsrs	r4, r0
    226a:	055b      	lsls	r3, r3, #21
    226c:	0324      	lsls	r4, r4, #12
    226e:	0b24      	lsrs	r4, r4, #12
    2270:	0d5b      	lsrs	r3, r3, #21
    2272:	e7e3      	b.n	223c <__aeabi_i2d+0x30>
    2274:	2500      	movs	r5, #0
    2276:	2300      	movs	r3, #0
    2278:	2400      	movs	r4, #0
    227a:	2200      	movs	r2, #0
    227c:	e7de      	b.n	223c <__aeabi_i2d+0x30>
    227e:	46c0      	nop			; (mov r8, r8)
    2280:	0000041e 	.word	0x0000041e
    2284:	00000433 	.word	0x00000433
    2288:	00000413 	.word	0x00000413
    228c:	800fffff 	.word	0x800fffff

00002290 <__aeabi_f2d>:
    2290:	0041      	lsls	r1, r0, #1
    2292:	0e09      	lsrs	r1, r1, #24
    2294:	1c4b      	adds	r3, r1, #1
    2296:	b570      	push	{r4, r5, r6, lr}
    2298:	b2db      	uxtb	r3, r3
    229a:	0246      	lsls	r6, r0, #9
    229c:	0a75      	lsrs	r5, r6, #9
    229e:	0fc4      	lsrs	r4, r0, #31
    22a0:	2b01      	cmp	r3, #1
    22a2:	dd14      	ble.n	22ce <__aeabi_f2d+0x3e>
    22a4:	23e0      	movs	r3, #224	; 0xe0
    22a6:	009b      	lsls	r3, r3, #2
    22a8:	076d      	lsls	r5, r5, #29
    22aa:	0b36      	lsrs	r6, r6, #12
    22ac:	18cb      	adds	r3, r1, r3
    22ae:	2100      	movs	r1, #0
    22b0:	0d0a      	lsrs	r2, r1, #20
    22b2:	0028      	movs	r0, r5
    22b4:	0512      	lsls	r2, r2, #20
    22b6:	4d1c      	ldr	r5, [pc, #112]	; (2328 <__aeabi_f2d+0x98>)
    22b8:	4332      	orrs	r2, r6
    22ba:	055b      	lsls	r3, r3, #21
    22bc:	402a      	ands	r2, r5
    22be:	085b      	lsrs	r3, r3, #1
    22c0:	4313      	orrs	r3, r2
    22c2:	005b      	lsls	r3, r3, #1
    22c4:	07e4      	lsls	r4, r4, #31
    22c6:	085b      	lsrs	r3, r3, #1
    22c8:	4323      	orrs	r3, r4
    22ca:	0019      	movs	r1, r3
    22cc:	bd70      	pop	{r4, r5, r6, pc}
    22ce:	2900      	cmp	r1, #0
    22d0:	d114      	bne.n	22fc <__aeabi_f2d+0x6c>
    22d2:	2d00      	cmp	r5, #0
    22d4:	d01e      	beq.n	2314 <__aeabi_f2d+0x84>
    22d6:	0028      	movs	r0, r5
    22d8:	f000 f8b6 	bl	2448 <__clzsi2>
    22dc:	280a      	cmp	r0, #10
    22de:	dc1c      	bgt.n	231a <__aeabi_f2d+0x8a>
    22e0:	230b      	movs	r3, #11
    22e2:	002a      	movs	r2, r5
    22e4:	1a1b      	subs	r3, r3, r0
    22e6:	40da      	lsrs	r2, r3
    22e8:	0003      	movs	r3, r0
    22ea:	3315      	adds	r3, #21
    22ec:	409d      	lsls	r5, r3
    22ee:	4b0f      	ldr	r3, [pc, #60]	; (232c <__aeabi_f2d+0x9c>)
    22f0:	0312      	lsls	r2, r2, #12
    22f2:	1a1b      	subs	r3, r3, r0
    22f4:	055b      	lsls	r3, r3, #21
    22f6:	0b16      	lsrs	r6, r2, #12
    22f8:	0d5b      	lsrs	r3, r3, #21
    22fa:	e7d8      	b.n	22ae <__aeabi_f2d+0x1e>
    22fc:	2d00      	cmp	r5, #0
    22fe:	d006      	beq.n	230e <__aeabi_f2d+0x7e>
    2300:	0b32      	lsrs	r2, r6, #12
    2302:	2680      	movs	r6, #128	; 0x80
    2304:	0336      	lsls	r6, r6, #12
    2306:	076d      	lsls	r5, r5, #29
    2308:	4316      	orrs	r6, r2
    230a:	4b09      	ldr	r3, [pc, #36]	; (2330 <__aeabi_f2d+0xa0>)
    230c:	e7cf      	b.n	22ae <__aeabi_f2d+0x1e>
    230e:	4b08      	ldr	r3, [pc, #32]	; (2330 <__aeabi_f2d+0xa0>)
    2310:	2600      	movs	r6, #0
    2312:	e7cc      	b.n	22ae <__aeabi_f2d+0x1e>
    2314:	2300      	movs	r3, #0
    2316:	2600      	movs	r6, #0
    2318:	e7c9      	b.n	22ae <__aeabi_f2d+0x1e>
    231a:	0003      	movs	r3, r0
    231c:	002a      	movs	r2, r5
    231e:	3b0b      	subs	r3, #11
    2320:	409a      	lsls	r2, r3
    2322:	2500      	movs	r5, #0
    2324:	e7e3      	b.n	22ee <__aeabi_f2d+0x5e>
    2326:	46c0      	nop			; (mov r8, r8)
    2328:	800fffff 	.word	0x800fffff
    232c:	00000389 	.word	0x00000389
    2330:	000007ff 	.word	0x000007ff

00002334 <__aeabi_d2f>:
    2334:	b5f0      	push	{r4, r5, r6, r7, lr}
    2336:	004c      	lsls	r4, r1, #1
    2338:	0d64      	lsrs	r4, r4, #21
    233a:	030b      	lsls	r3, r1, #12
    233c:	1c62      	adds	r2, r4, #1
    233e:	0f45      	lsrs	r5, r0, #29
    2340:	0a5b      	lsrs	r3, r3, #9
    2342:	0552      	lsls	r2, r2, #21
    2344:	432b      	orrs	r3, r5
    2346:	0fc9      	lsrs	r1, r1, #31
    2348:	00c5      	lsls	r5, r0, #3
    234a:	0d52      	lsrs	r2, r2, #21
    234c:	2a01      	cmp	r2, #1
    234e:	dd28      	ble.n	23a2 <__aeabi_d2f+0x6e>
    2350:	4a3a      	ldr	r2, [pc, #232]	; (243c <__aeabi_d2f+0x108>)
    2352:	18a6      	adds	r6, r4, r2
    2354:	2efe      	cmp	r6, #254	; 0xfe
    2356:	dc1b      	bgt.n	2390 <__aeabi_d2f+0x5c>
    2358:	2e00      	cmp	r6, #0
    235a:	dd3e      	ble.n	23da <__aeabi_d2f+0xa6>
    235c:	0180      	lsls	r0, r0, #6
    235e:	0002      	movs	r2, r0
    2360:	1e50      	subs	r0, r2, #1
    2362:	4182      	sbcs	r2, r0
    2364:	0f6d      	lsrs	r5, r5, #29
    2366:	432a      	orrs	r2, r5
    2368:	00db      	lsls	r3, r3, #3
    236a:	4313      	orrs	r3, r2
    236c:	075a      	lsls	r2, r3, #29
    236e:	d004      	beq.n	237a <__aeabi_d2f+0x46>
    2370:	220f      	movs	r2, #15
    2372:	401a      	ands	r2, r3
    2374:	2a04      	cmp	r2, #4
    2376:	d000      	beq.n	237a <__aeabi_d2f+0x46>
    2378:	3304      	adds	r3, #4
    237a:	2280      	movs	r2, #128	; 0x80
    237c:	04d2      	lsls	r2, r2, #19
    237e:	401a      	ands	r2, r3
    2380:	d05a      	beq.n	2438 <__aeabi_d2f+0x104>
    2382:	3601      	adds	r6, #1
    2384:	2eff      	cmp	r6, #255	; 0xff
    2386:	d003      	beq.n	2390 <__aeabi_d2f+0x5c>
    2388:	019b      	lsls	r3, r3, #6
    238a:	0a5b      	lsrs	r3, r3, #9
    238c:	b2f4      	uxtb	r4, r6
    238e:	e001      	b.n	2394 <__aeabi_d2f+0x60>
    2390:	24ff      	movs	r4, #255	; 0xff
    2392:	2300      	movs	r3, #0
    2394:	0258      	lsls	r0, r3, #9
    2396:	05e4      	lsls	r4, r4, #23
    2398:	0a40      	lsrs	r0, r0, #9
    239a:	07c9      	lsls	r1, r1, #31
    239c:	4320      	orrs	r0, r4
    239e:	4308      	orrs	r0, r1
    23a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    23a2:	2c00      	cmp	r4, #0
    23a4:	d007      	beq.n	23b6 <__aeabi_d2f+0x82>
    23a6:	431d      	orrs	r5, r3
    23a8:	d0f2      	beq.n	2390 <__aeabi_d2f+0x5c>
    23aa:	2080      	movs	r0, #128	; 0x80
    23ac:	00db      	lsls	r3, r3, #3
    23ae:	0480      	lsls	r0, r0, #18
    23b0:	4303      	orrs	r3, r0
    23b2:	26ff      	movs	r6, #255	; 0xff
    23b4:	e7da      	b.n	236c <__aeabi_d2f+0x38>
    23b6:	432b      	orrs	r3, r5
    23b8:	d003      	beq.n	23c2 <__aeabi_d2f+0x8e>
    23ba:	2305      	movs	r3, #5
    23bc:	08db      	lsrs	r3, r3, #3
    23be:	2cff      	cmp	r4, #255	; 0xff
    23c0:	d003      	beq.n	23ca <__aeabi_d2f+0x96>
    23c2:	025b      	lsls	r3, r3, #9
    23c4:	0a5b      	lsrs	r3, r3, #9
    23c6:	b2e4      	uxtb	r4, r4
    23c8:	e7e4      	b.n	2394 <__aeabi_d2f+0x60>
    23ca:	2b00      	cmp	r3, #0
    23cc:	d032      	beq.n	2434 <__aeabi_d2f+0x100>
    23ce:	2080      	movs	r0, #128	; 0x80
    23d0:	03c0      	lsls	r0, r0, #15
    23d2:	4303      	orrs	r3, r0
    23d4:	025b      	lsls	r3, r3, #9
    23d6:	0a5b      	lsrs	r3, r3, #9
    23d8:	e7dc      	b.n	2394 <__aeabi_d2f+0x60>
    23da:	0032      	movs	r2, r6
    23dc:	3217      	adds	r2, #23
    23de:	db14      	blt.n	240a <__aeabi_d2f+0xd6>
    23e0:	2280      	movs	r2, #128	; 0x80
    23e2:	271e      	movs	r7, #30
    23e4:	0412      	lsls	r2, r2, #16
    23e6:	4313      	orrs	r3, r2
    23e8:	1bbf      	subs	r7, r7, r6
    23ea:	2f1f      	cmp	r7, #31
    23ec:	dc0f      	bgt.n	240e <__aeabi_d2f+0xda>
    23ee:	4a14      	ldr	r2, [pc, #80]	; (2440 <__aeabi_d2f+0x10c>)
    23f0:	4694      	mov	ip, r2
    23f2:	4464      	add	r4, ip
    23f4:	002a      	movs	r2, r5
    23f6:	40a5      	lsls	r5, r4
    23f8:	002e      	movs	r6, r5
    23fa:	40a3      	lsls	r3, r4
    23fc:	1e75      	subs	r5, r6, #1
    23fe:	41ae      	sbcs	r6, r5
    2400:	40fa      	lsrs	r2, r7
    2402:	4333      	orrs	r3, r6
    2404:	4313      	orrs	r3, r2
    2406:	2600      	movs	r6, #0
    2408:	e7b0      	b.n	236c <__aeabi_d2f+0x38>
    240a:	2400      	movs	r4, #0
    240c:	e7d5      	b.n	23ba <__aeabi_d2f+0x86>
    240e:	2202      	movs	r2, #2
    2410:	4252      	negs	r2, r2
    2412:	1b96      	subs	r6, r2, r6
    2414:	001a      	movs	r2, r3
    2416:	40f2      	lsrs	r2, r6
    2418:	2f20      	cmp	r7, #32
    241a:	d009      	beq.n	2430 <__aeabi_d2f+0xfc>
    241c:	4809      	ldr	r0, [pc, #36]	; (2444 <__aeabi_d2f+0x110>)
    241e:	4684      	mov	ip, r0
    2420:	4464      	add	r4, ip
    2422:	40a3      	lsls	r3, r4
    2424:	432b      	orrs	r3, r5
    2426:	1e5d      	subs	r5, r3, #1
    2428:	41ab      	sbcs	r3, r5
    242a:	2600      	movs	r6, #0
    242c:	4313      	orrs	r3, r2
    242e:	e79d      	b.n	236c <__aeabi_d2f+0x38>
    2430:	2300      	movs	r3, #0
    2432:	e7f7      	b.n	2424 <__aeabi_d2f+0xf0>
    2434:	2300      	movs	r3, #0
    2436:	e7ad      	b.n	2394 <__aeabi_d2f+0x60>
    2438:	0034      	movs	r4, r6
    243a:	e7bf      	b.n	23bc <__aeabi_d2f+0x88>
    243c:	fffffc80 	.word	0xfffffc80
    2440:	fffffc82 	.word	0xfffffc82
    2444:	fffffca2 	.word	0xfffffca2

00002448 <__clzsi2>:
    2448:	211c      	movs	r1, #28
    244a:	2301      	movs	r3, #1
    244c:	041b      	lsls	r3, r3, #16
    244e:	4298      	cmp	r0, r3
    2450:	d301      	bcc.n	2456 <__clzsi2+0xe>
    2452:	0c00      	lsrs	r0, r0, #16
    2454:	3910      	subs	r1, #16
    2456:	0a1b      	lsrs	r3, r3, #8
    2458:	4298      	cmp	r0, r3
    245a:	d301      	bcc.n	2460 <__clzsi2+0x18>
    245c:	0a00      	lsrs	r0, r0, #8
    245e:	3908      	subs	r1, #8
    2460:	091b      	lsrs	r3, r3, #4
    2462:	4298      	cmp	r0, r3
    2464:	d301      	bcc.n	246a <__clzsi2+0x22>
    2466:	0900      	lsrs	r0, r0, #4
    2468:	3904      	subs	r1, #4
    246a:	a202      	add	r2, pc, #8	; (adr r2, 2474 <__clzsi2+0x2c>)
    246c:	5c10      	ldrb	r0, [r2, r0]
    246e:	1840      	adds	r0, r0, r1
    2470:	4770      	bx	lr
    2472:	46c0      	nop			; (mov r8, r8)
    2474:	02020304 	.word	0x02020304
    2478:	01010101 	.word	0x01010101
	...

00002484 <gcvt>:
    2484:	b5f0      	push	{r4, r5, r6, r7, lr}
    2486:	001c      	movs	r4, r3
    2488:	b085      	sub	sp, #20
    248a:	2300      	movs	r3, #0
    248c:	0015      	movs	r5, r2
    248e:	2200      	movs	r2, #0
    2490:	0006      	movs	r6, r0
    2492:	000f      	movs	r7, r1
    2494:	f001 fcfe 	bl	3e94 <__aeabi_dcmplt>
    2498:	0023      	movs	r3, r4
    249a:	2800      	cmp	r0, #0
    249c:	d003      	beq.n	24a6 <gcvt+0x22>
    249e:	232d      	movs	r3, #45	; 0x2d
    24a0:	3d01      	subs	r5, #1
    24a2:	7023      	strb	r3, [r4, #0]
    24a4:	1c63      	adds	r3, r4, #1
    24a6:	2200      	movs	r2, #0
    24a8:	4908      	ldr	r1, [pc, #32]	; (24cc <gcvt+0x48>)
    24aa:	9203      	str	r2, [sp, #12]
    24ac:	3267      	adds	r2, #103	; 0x67
    24ae:	9202      	str	r2, [sp, #8]
    24b0:	9301      	str	r3, [sp, #4]
    24b2:	9500      	str	r5, [sp, #0]
    24b4:	003b      	movs	r3, r7
    24b6:	0032      	movs	r2, r6
    24b8:	6808      	ldr	r0, [r1, #0]
    24ba:	f000 f90f 	bl	26dc <_gcvt>
    24be:	1e43      	subs	r3, r0, #1
    24c0:	4198      	sbcs	r0, r3
    24c2:	4240      	negs	r0, r0
    24c4:	4004      	ands	r4, r0
    24c6:	0020      	movs	r0, r4
    24c8:	b005      	add	sp, #20
    24ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24cc:	20000008 	.word	0x20000008

000024d0 <gcvtf>:
    24d0:	b570      	push	{r4, r5, r6, lr}
    24d2:	0015      	movs	r5, r2
    24d4:	000c      	movs	r4, r1
    24d6:	f7ff fedb 	bl	2290 <__aeabi_f2d>
    24da:	002b      	movs	r3, r5
    24dc:	0022      	movs	r2, r4
    24de:	f7ff ffd1 	bl	2484 <gcvt>
    24e2:	bd70      	pop	{r4, r5, r6, pc}

000024e4 <__libc_init_array>:
    24e4:	b570      	push	{r4, r5, r6, lr}
    24e6:	2600      	movs	r6, #0
    24e8:	4d0c      	ldr	r5, [pc, #48]	; (251c <__libc_init_array+0x38>)
    24ea:	4c0d      	ldr	r4, [pc, #52]	; (2520 <__libc_init_array+0x3c>)
    24ec:	1b64      	subs	r4, r4, r5
    24ee:	10a4      	asrs	r4, r4, #2
    24f0:	42a6      	cmp	r6, r4
    24f2:	d109      	bne.n	2508 <__libc_init_array+0x24>
    24f4:	2600      	movs	r6, #0
    24f6:	f002 fd9d 	bl	5034 <_init>
    24fa:	4d0a      	ldr	r5, [pc, #40]	; (2524 <__libc_init_array+0x40>)
    24fc:	4c0a      	ldr	r4, [pc, #40]	; (2528 <__libc_init_array+0x44>)
    24fe:	1b64      	subs	r4, r4, r5
    2500:	10a4      	asrs	r4, r4, #2
    2502:	42a6      	cmp	r6, r4
    2504:	d105      	bne.n	2512 <__libc_init_array+0x2e>
    2506:	bd70      	pop	{r4, r5, r6, pc}
    2508:	00b3      	lsls	r3, r6, #2
    250a:	58eb      	ldr	r3, [r5, r3]
    250c:	4798      	blx	r3
    250e:	3601      	adds	r6, #1
    2510:	e7ee      	b.n	24f0 <__libc_init_array+0xc>
    2512:	00b3      	lsls	r3, r6, #2
    2514:	58eb      	ldr	r3, [r5, r3]
    2516:	4798      	blx	r3
    2518:	3601      	adds	r6, #1
    251a:	e7f2      	b.n	2502 <__libc_init_array+0x1e>
    251c:	00005040 	.word	0x00005040
    2520:	00005040 	.word	0x00005040
    2524:	00005040 	.word	0x00005040
    2528:	00005044 	.word	0x00005044

0000252c <__itoa>:
    252c:	1e93      	subs	r3, r2, #2
    252e:	b510      	push	{r4, lr}
    2530:	000c      	movs	r4, r1
    2532:	2b22      	cmp	r3, #34	; 0x22
    2534:	d904      	bls.n	2540 <__itoa+0x14>
    2536:	2300      	movs	r3, #0
    2538:	001c      	movs	r4, r3
    253a:	700b      	strb	r3, [r1, #0]
    253c:	0020      	movs	r0, r4
    253e:	bd10      	pop	{r4, pc}
    2540:	2a0a      	cmp	r2, #10
    2542:	d109      	bne.n	2558 <__itoa+0x2c>
    2544:	2800      	cmp	r0, #0
    2546:	da07      	bge.n	2558 <__itoa+0x2c>
    2548:	232d      	movs	r3, #45	; 0x2d
    254a:	700b      	strb	r3, [r1, #0]
    254c:	2101      	movs	r1, #1
    254e:	4240      	negs	r0, r0
    2550:	1861      	adds	r1, r4, r1
    2552:	f000 f80f 	bl	2574 <__utoa>
    2556:	e7f1      	b.n	253c <__itoa+0x10>
    2558:	2100      	movs	r1, #0
    255a:	e7f9      	b.n	2550 <__itoa+0x24>

0000255c <itoa>:
    255c:	b510      	push	{r4, lr}
    255e:	f7ff ffe5 	bl	252c <__itoa>
    2562:	bd10      	pop	{r4, pc}

00002564 <memset>:
    2564:	0003      	movs	r3, r0
    2566:	1882      	adds	r2, r0, r2
    2568:	4293      	cmp	r3, r2
    256a:	d100      	bne.n	256e <memset+0xa>
    256c:	4770      	bx	lr
    256e:	7019      	strb	r1, [r3, #0]
    2570:	3301      	adds	r3, #1
    2572:	e7f9      	b.n	2568 <memset+0x4>

00002574 <__utoa>:
    2574:	b5f0      	push	{r4, r5, r6, r7, lr}
    2576:	0017      	movs	r7, r2
    2578:	b08f      	sub	sp, #60	; 0x3c
    257a:	2225      	movs	r2, #37	; 0x25
    257c:	0006      	movs	r6, r0
    257e:	000d      	movs	r5, r1
    2580:	a804      	add	r0, sp, #16
    2582:	4918      	ldr	r1, [pc, #96]	; (25e4 <__utoa+0x70>)
    2584:	f000 f978 	bl	2878 <memcpy>
    2588:	aa04      	add	r2, sp, #16
    258a:	1ebb      	subs	r3, r7, #2
    258c:	2400      	movs	r4, #0
    258e:	9203      	str	r2, [sp, #12]
    2590:	2b22      	cmp	r3, #34	; 0x22
    2592:	d905      	bls.n	25a0 <__utoa+0x2c>
    2594:	702c      	strb	r4, [r5, #0]
    2596:	0025      	movs	r5, r4
    2598:	0028      	movs	r0, r5
    259a:	b00f      	add	sp, #60	; 0x3c
    259c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    259e:	9c01      	ldr	r4, [sp, #4]
    25a0:	1c63      	adds	r3, r4, #1
    25a2:	9301      	str	r3, [sp, #4]
    25a4:	18eb      	adds	r3, r5, r3
    25a6:	9300      	str	r3, [sp, #0]
    25a8:	0030      	movs	r0, r6
    25aa:	3b01      	subs	r3, #1
    25ac:	0039      	movs	r1, r7
    25ae:	9302      	str	r3, [sp, #8]
    25b0:	f7ff f848 	bl	1644 <__aeabi_uidivmod>
    25b4:	9b03      	ldr	r3, [sp, #12]
    25b6:	9a02      	ldr	r2, [sp, #8]
    25b8:	5c5b      	ldrb	r3, [r3, r1]
    25ba:	0030      	movs	r0, r6
    25bc:	7013      	strb	r3, [r2, #0]
    25be:	0039      	movs	r1, r7
    25c0:	f7fe ffba 	bl	1538 <__udivsi3>
    25c4:	1e06      	subs	r6, r0, #0
    25c6:	d1ea      	bne.n	259e <__utoa+0x2a>
    25c8:	9b00      	ldr	r3, [sp, #0]
    25ca:	7018      	strb	r0, [r3, #0]
    25cc:	002b      	movs	r3, r5
    25ce:	1b5a      	subs	r2, r3, r5
    25d0:	4294      	cmp	r4, r2
    25d2:	dde1      	ble.n	2598 <__utoa+0x24>
    25d4:	781a      	ldrb	r2, [r3, #0]
    25d6:	5d29      	ldrb	r1, [r5, r4]
    25d8:	7019      	strb	r1, [r3, #0]
    25da:	552a      	strb	r2, [r5, r4]
    25dc:	3301      	adds	r3, #1
    25de:	3c01      	subs	r4, #1
    25e0:	e7f5      	b.n	25ce <__utoa+0x5a>
    25e2:	46c0      	nop			; (mov r8, r8)
    25e4:	00004f00 	.word	0x00004f00

000025e8 <print_e>:
    25e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    25ea:	b08b      	sub	sp, #44	; 0x2c
    25ec:	000e      	movs	r6, r1
    25ee:	a910      	add	r1, sp, #64	; 0x40
    25f0:	c910      	ldmia	r1!, {r4}
    25f2:	780d      	ldrb	r5, [r1, #0]
    25f4:	a908      	add	r1, sp, #32
    25f6:	9104      	str	r1, [sp, #16]
    25f8:	a907      	add	r1, sp, #28
    25fa:	9103      	str	r1, [sp, #12]
    25fc:	a909      	add	r1, sp, #36	; 0x24
    25fe:	9102      	str	r1, [sp, #8]
    2600:	1c61      	adds	r1, r4, #1
    2602:	9101      	str	r1, [sp, #4]
    2604:	2102      	movs	r1, #2
    2606:	9100      	str	r1, [sp, #0]
    2608:	f000 fd46 	bl	3098 <_dtoa_r>
    260c:	9f09      	ldr	r7, [sp, #36]	; 0x24
    260e:	4b32      	ldr	r3, [pc, #200]	; (26d8 <print_e+0xf0>)
    2610:	429f      	cmp	r7, r3
    2612:	d105      	bne.n	2620 <print_e+0x38>
    2614:	0001      	movs	r1, r0
    2616:	0030      	movs	r0, r6
    2618:	f000 fcb2 	bl	2f80 <strcpy>
    261c:	b00b      	add	sp, #44	; 0x2c
    261e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2620:	7803      	ldrb	r3, [r0, #0]
    2622:	9a12      	ldr	r2, [sp, #72]	; 0x48
    2624:	1c41      	adds	r1, r0, #1
    2626:	7033      	strb	r3, [r6, #0]
    2628:	4322      	orrs	r2, r4
    262a:	d109      	bne.n	2640 <print_e+0x58>
    262c:	0014      	movs	r4, r2
    262e:	1c73      	adds	r3, r6, #1
    2630:	7808      	ldrb	r0, [r1, #0]
    2632:	001a      	movs	r2, r3
    2634:	2800      	cmp	r0, #0
    2636:	d107      	bne.n	2648 <print_e+0x60>
    2638:	2d67      	cmp	r5, #103	; 0x67
    263a:	d10c      	bne.n	2656 <print_e+0x6e>
    263c:	2565      	movs	r5, #101	; 0x65
    263e:	e014      	b.n	266a <print_e+0x82>
    2640:	222e      	movs	r2, #46	; 0x2e
    2642:	1cb3      	adds	r3, r6, #2
    2644:	7072      	strb	r2, [r6, #1]
    2646:	e7f3      	b.n	2630 <print_e+0x48>
    2648:	2c00      	cmp	r4, #0
    264a:	ddf5      	ble.n	2638 <print_e+0x50>
    264c:	7018      	strb	r0, [r3, #0]
    264e:	3101      	adds	r1, #1
    2650:	3c01      	subs	r4, #1
    2652:	3301      	adds	r3, #1
    2654:	e7ec      	b.n	2630 <print_e+0x48>
    2656:	2d47      	cmp	r5, #71	; 0x47
    2658:	d039      	beq.n	26ce <print_e+0xe6>
    265a:	0021      	movs	r1, r4
    265c:	2030      	movs	r0, #48	; 0x30
    265e:	2900      	cmp	r1, #0
    2660:	dc31      	bgt.n	26c6 <print_e+0xde>
    2662:	43e3      	mvns	r3, r4
    2664:	17db      	asrs	r3, r3, #31
    2666:	401c      	ands	r4, r3
    2668:	1912      	adds	r2, r2, r4
    266a:	7015      	strb	r5, [r2, #0]
    266c:	1e7b      	subs	r3, r7, #1
    266e:	1c95      	adds	r5, r2, #2
    2670:	9309      	str	r3, [sp, #36]	; 0x24
    2672:	002c      	movs	r4, r5
    2674:	2b00      	cmp	r3, #0
    2676:	da2c      	bge.n	26d2 <print_e+0xea>
    2678:	232d      	movs	r3, #45	; 0x2d
    267a:	7053      	strb	r3, [r2, #1]
    267c:	3b2c      	subs	r3, #44	; 0x2c
    267e:	1bdf      	subs	r7, r3, r7
    2680:	9709      	str	r7, [sp, #36]	; 0x24
    2682:	9e09      	ldr	r6, [sp, #36]	; 0x24
    2684:	2e63      	cmp	r6, #99	; 0x63
    2686:	dd0c      	ble.n	26a2 <print_e+0xba>
    2688:	2164      	movs	r1, #100	; 0x64
    268a:	0030      	movs	r0, r6
    268c:	f001 fb02 	bl	3c94 <__divsi3>
    2690:	0003      	movs	r3, r0
    2692:	3330      	adds	r3, #48	; 0x30
    2694:	702b      	strb	r3, [r5, #0]
    2696:	2364      	movs	r3, #100	; 0x64
    2698:	425b      	negs	r3, r3
    269a:	4358      	muls	r0, r3
    269c:	1980      	adds	r0, r0, r6
    269e:	9009      	str	r0, [sp, #36]	; 0x24
    26a0:	1c6c      	adds	r4, r5, #1
    26a2:	9d09      	ldr	r5, [sp, #36]	; 0x24
    26a4:	210a      	movs	r1, #10
    26a6:	0028      	movs	r0, r5
    26a8:	f001 faf4 	bl	3c94 <__divsi3>
    26ac:	0003      	movs	r3, r0
    26ae:	0002      	movs	r2, r0
    26b0:	200a      	movs	r0, #10
    26b2:	4240      	negs	r0, r0
    26b4:	4358      	muls	r0, r3
    26b6:	2300      	movs	r3, #0
    26b8:	1940      	adds	r0, r0, r5
    26ba:	3230      	adds	r2, #48	; 0x30
    26bc:	3030      	adds	r0, #48	; 0x30
    26be:	7022      	strb	r2, [r4, #0]
    26c0:	7060      	strb	r0, [r4, #1]
    26c2:	70a3      	strb	r3, [r4, #2]
    26c4:	e7aa      	b.n	261c <print_e+0x34>
    26c6:	7018      	strb	r0, [r3, #0]
    26c8:	3901      	subs	r1, #1
    26ca:	3301      	adds	r3, #1
    26cc:	e7c7      	b.n	265e <print_e+0x76>
    26ce:	2545      	movs	r5, #69	; 0x45
    26d0:	e7cb      	b.n	266a <print_e+0x82>
    26d2:	232b      	movs	r3, #43	; 0x2b
    26d4:	7053      	strb	r3, [r2, #1]
    26d6:	e7d4      	b.n	2682 <print_e+0x9a>
    26d8:	0000270f 	.word	0x0000270f

000026dc <_gcvt>:
    26dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    26de:	0015      	movs	r5, r2
    26e0:	001c      	movs	r4, r3
    26e2:	b08d      	sub	sp, #52	; 0x34
    26e4:	ab14      	add	r3, sp, #80	; 0x50
    26e6:	781b      	ldrb	r3, [r3, #0]
    26e8:	0006      	movs	r6, r0
    26ea:	9307      	str	r3, [sp, #28]
    26ec:	2200      	movs	r2, #0
    26ee:	2300      	movs	r3, #0
    26f0:	0028      	movs	r0, r5
    26f2:	0021      	movs	r1, r4
    26f4:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    26f6:	f001 fbcd 	bl	3e94 <__aeabi_dcmplt>
    26fa:	2800      	cmp	r0, #0
    26fc:	d002      	beq.n	2704 <_gcvt+0x28>
    26fe:	2380      	movs	r3, #128	; 0x80
    2700:	061b      	lsls	r3, r3, #24
    2702:	18e4      	adds	r4, r4, r3
    2704:	2200      	movs	r2, #0
    2706:	2300      	movs	r3, #0
    2708:	0028      	movs	r0, r5
    270a:	0021      	movs	r1, r4
    270c:	f001 fbbc 	bl	3e88 <__aeabi_dcmpeq>
    2710:	2800      	cmp	r0, #0
    2712:	d006      	beq.n	2722 <_gcvt+0x46>
    2714:	2330      	movs	r3, #48	; 0x30
    2716:	703b      	strb	r3, [r7, #0]
    2718:	2300      	movs	r3, #0
    271a:	707b      	strb	r3, [r7, #1]
    271c:	0038      	movs	r0, r7
    271e:	b00d      	add	sp, #52	; 0x34
    2720:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2722:	4a51      	ldr	r2, [pc, #324]	; (2868 <_gcvt+0x18c>)
    2724:	4b51      	ldr	r3, [pc, #324]	; (286c <_gcvt+0x190>)
    2726:	0028      	movs	r0, r5
    2728:	0021      	movs	r1, r4
    272a:	f001 fbbd 	bl	3ea8 <__aeabi_dcmple>
    272e:	2800      	cmp	r0, #0
    2730:	d00d      	beq.n	274e <_gcvt+0x72>
    2732:	9b15      	ldr	r3, [sp, #84]	; 0x54
    2734:	002a      	movs	r2, r5
    2736:	9302      	str	r3, [sp, #8]
    2738:	9b07      	ldr	r3, [sp, #28]
    273a:	0039      	movs	r1, r7
    273c:	9301      	str	r3, [sp, #4]
    273e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2740:	0030      	movs	r0, r6
    2742:	3b01      	subs	r3, #1
    2744:	9300      	str	r3, [sp, #0]
    2746:	0023      	movs	r3, r4
    2748:	f7ff ff4e 	bl	25e8 <print_e>
    274c:	e7e6      	b.n	271c <_gcvt+0x40>
    274e:	9812      	ldr	r0, [sp, #72]	; 0x48
    2750:	f000 fb7e 	bl	2e50 <_mprec_log10>
    2754:	0002      	movs	r2, r0
    2756:	000b      	movs	r3, r1
    2758:	0028      	movs	r0, r5
    275a:	0021      	movs	r1, r4
    275c:	f001 fbb8 	bl	3ed0 <__aeabi_dcmpge>
    2760:	2800      	cmp	r0, #0
    2762:	d1e6      	bne.n	2732 <_gcvt+0x56>
    2764:	2200      	movs	r2, #0
    2766:	4b42      	ldr	r3, [pc, #264]	; (2870 <_gcvt+0x194>)
    2768:	0028      	movs	r0, r5
    276a:	0021      	movs	r1, r4
    276c:	f001 fb92 	bl	3e94 <__aeabi_dcmplt>
    2770:	ab0a      	add	r3, sp, #40	; 0x28
    2772:	9303      	str	r3, [sp, #12]
    2774:	ab09      	add	r3, sp, #36	; 0x24
    2776:	9302      	str	r3, [sp, #8]
    2778:	9b12      	ldr	r3, [sp, #72]	; 0x48
    277a:	aa0b      	add	r2, sp, #44	; 0x2c
    277c:	9301      	str	r3, [sp, #4]
    277e:	9204      	str	r2, [sp, #16]
    2780:	2303      	movs	r3, #3
    2782:	2800      	cmp	r0, #0
    2784:	d100      	bne.n	2788 <_gcvt+0xac>
    2786:	2302      	movs	r3, #2
    2788:	9300      	str	r3, [sp, #0]
    278a:	002a      	movs	r2, r5
    278c:	0023      	movs	r3, r4
    278e:	0030      	movs	r0, r6
    2790:	f000 fc82 	bl	3098 <_dtoa_r>
    2794:	4b37      	ldr	r3, [pc, #220]	; (2874 <_gcvt+0x198>)
    2796:	9a09      	ldr	r2, [sp, #36]	; 0x24
    2798:	429a      	cmp	r2, r3
    279a:	d013      	beq.n	27c4 <_gcvt+0xe8>
    279c:	003a      	movs	r2, r7
    279e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    27a0:	7804      	ldrb	r4, [r0, #0]
    27a2:	1a9b      	subs	r3, r3, r2
    27a4:	0011      	movs	r1, r2
    27a6:	18fb      	adds	r3, r7, r3
    27a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
    27aa:	2c00      	cmp	r4, #0
    27ac:	d115      	bne.n	27da <_gcvt+0xfe>
    27ae:	2101      	movs	r1, #1
    27b0:	468c      	mov	ip, r1
    27b2:	1aed      	subs	r5, r5, r3
    27b4:	18ee      	adds	r6, r5, r3
    27b6:	0011      	movs	r1, r2
    27b8:	2e00      	cmp	r6, #0
    27ba:	dc3b      	bgt.n	2834 <_gcvt+0x158>
    27bc:	2c00      	cmp	r4, #0
    27be:	d00e      	beq.n	27de <_gcvt+0x102>
    27c0:	9609      	str	r6, [sp, #36]	; 0x24
    27c2:	e00c      	b.n	27de <_gcvt+0x102>
    27c4:	0001      	movs	r1, r0
    27c6:	0038      	movs	r0, r7
    27c8:	f000 fbda 	bl	2f80 <strcpy>
    27cc:	e7a6      	b.n	271c <_gcvt+0x40>
    27ce:	3d01      	subs	r5, #1
    27d0:	7014      	strb	r4, [r2, #0]
    27d2:	3001      	adds	r0, #1
    27d4:	9509      	str	r5, [sp, #36]	; 0x24
    27d6:	3201      	adds	r2, #1
    27d8:	e7e1      	b.n	279e <_gcvt+0xc2>
    27da:	2d00      	cmp	r5, #0
    27dc:	dcf7      	bgt.n	27ce <_gcvt+0xf2>
    27de:	9c15      	ldr	r4, [sp, #84]	; 0x54
    27e0:	2c00      	cmp	r4, #0
    27e2:	d102      	bne.n	27ea <_gcvt+0x10e>
    27e4:	7804      	ldrb	r4, [r0, #0]
    27e6:	2c00      	cmp	r4, #0
    27e8:	d021      	beq.n	282e <_gcvt+0x152>
    27ea:	4297      	cmp	r7, r2
    27ec:	d102      	bne.n	27f4 <_gcvt+0x118>
    27ee:	2230      	movs	r2, #48	; 0x30
    27f0:	1c79      	adds	r1, r7, #1
    27f2:	703a      	strb	r2, [r7, #0]
    27f4:	222e      	movs	r2, #46	; 0x2e
    27f6:	2530      	movs	r5, #48	; 0x30
    27f8:	700a      	strb	r2, [r1, #0]
    27fa:	2601      	movs	r6, #1
    27fc:	1c4a      	adds	r2, r1, #1
    27fe:	2100      	movs	r1, #0
    2800:	9c09      	ldr	r4, [sp, #36]	; 0x24
    2802:	2c00      	cmp	r4, #0
    2804:	db1e      	blt.n	2844 <_gcvt+0x168>
    2806:	2900      	cmp	r1, #0
    2808:	d000      	beq.n	280c <_gcvt+0x130>
    280a:	9409      	str	r4, [sp, #36]	; 0x24
    280c:	7804      	ldrb	r4, [r0, #0]
    280e:	0011      	movs	r1, r2
    2810:	2c00      	cmp	r4, #0
    2812:	d001      	beq.n	2818 <_gcvt+0x13c>
    2814:	2b00      	cmp	r3, #0
    2816:	dc1d      	bgt.n	2854 <_gcvt+0x178>
    2818:	9815      	ldr	r0, [sp, #84]	; 0x54
    281a:	2800      	cmp	r0, #0
    281c:	d007      	beq.n	282e <_gcvt+0x152>
    281e:	0018      	movs	r0, r3
    2820:	2430      	movs	r4, #48	; 0x30
    2822:	2800      	cmp	r0, #0
    2824:	dc1b      	bgt.n	285e <_gcvt+0x182>
    2826:	43da      	mvns	r2, r3
    2828:	17d2      	asrs	r2, r2, #31
    282a:	4013      	ands	r3, r2
    282c:	18c9      	adds	r1, r1, r3
    282e:	2300      	movs	r3, #0
    2830:	700b      	strb	r3, [r1, #0]
    2832:	e773      	b.n	271c <_gcvt+0x40>
    2834:	2b00      	cmp	r3, #0
    2836:	ddc1      	ble.n	27bc <_gcvt+0xe0>
    2838:	2130      	movs	r1, #48	; 0x30
    283a:	3b01      	subs	r3, #1
    283c:	7011      	strb	r1, [r2, #0]
    283e:	4664      	mov	r4, ip
    2840:	3201      	adds	r2, #1
    2842:	e7b7      	b.n	27b4 <_gcvt+0xd8>
    2844:	2b00      	cmp	r3, #0
    2846:	ddde      	ble.n	2806 <_gcvt+0x12a>
    2848:	7015      	strb	r5, [r2, #0]
    284a:	3401      	adds	r4, #1
    284c:	3b01      	subs	r3, #1
    284e:	3201      	adds	r2, #1
    2850:	0031      	movs	r1, r6
    2852:	e7d6      	b.n	2802 <_gcvt+0x126>
    2854:	7014      	strb	r4, [r2, #0]
    2856:	3001      	adds	r0, #1
    2858:	3b01      	subs	r3, #1
    285a:	3201      	adds	r2, #1
    285c:	e7d6      	b.n	280c <_gcvt+0x130>
    285e:	7014      	strb	r4, [r2, #0]
    2860:	3801      	subs	r0, #1
    2862:	3201      	adds	r2, #1
    2864:	e7dd      	b.n	2822 <_gcvt+0x146>
    2866:	46c0      	nop			; (mov r8, r8)
    2868:	eb1c432d 	.word	0xeb1c432d
    286c:	3f1a36e2 	.word	0x3f1a36e2
    2870:	3ff00000 	.word	0x3ff00000
    2874:	0000270f 	.word	0x0000270f

00002878 <memcpy>:
    2878:	2300      	movs	r3, #0
    287a:	b510      	push	{r4, lr}
    287c:	429a      	cmp	r2, r3
    287e:	d100      	bne.n	2882 <memcpy+0xa>
    2880:	bd10      	pop	{r4, pc}
    2882:	5ccc      	ldrb	r4, [r1, r3]
    2884:	54c4      	strb	r4, [r0, r3]
    2886:	3301      	adds	r3, #1
    2888:	e7f8      	b.n	287c <memcpy+0x4>

0000288a <_Balloc>:
    288a:	b570      	push	{r4, r5, r6, lr}
    288c:	6a46      	ldr	r6, [r0, #36]	; 0x24
    288e:	0004      	movs	r4, r0
    2890:	000d      	movs	r5, r1
    2892:	2e00      	cmp	r6, #0
    2894:	d107      	bne.n	28a6 <_Balloc+0x1c>
    2896:	2010      	movs	r0, #16
    2898:	f001 f9e6 	bl	3c68 <malloc>
    289c:	6260      	str	r0, [r4, #36]	; 0x24
    289e:	6046      	str	r6, [r0, #4]
    28a0:	6086      	str	r6, [r0, #8]
    28a2:	6006      	str	r6, [r0, #0]
    28a4:	60c6      	str	r6, [r0, #12]
    28a6:	6a66      	ldr	r6, [r4, #36]	; 0x24
    28a8:	68f3      	ldr	r3, [r6, #12]
    28aa:	2b00      	cmp	r3, #0
    28ac:	d013      	beq.n	28d6 <_Balloc+0x4c>
    28ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
    28b0:	00aa      	lsls	r2, r5, #2
    28b2:	68db      	ldr	r3, [r3, #12]
    28b4:	189b      	adds	r3, r3, r2
    28b6:	6818      	ldr	r0, [r3, #0]
    28b8:	2800      	cmp	r0, #0
    28ba:	d118      	bne.n	28ee <_Balloc+0x64>
    28bc:	2101      	movs	r1, #1
    28be:	000e      	movs	r6, r1
    28c0:	40ae      	lsls	r6, r5
    28c2:	1d72      	adds	r2, r6, #5
    28c4:	0092      	lsls	r2, r2, #2
    28c6:	0020      	movs	r0, r4
    28c8:	f000 fadc 	bl	2e84 <_calloc_r>
    28cc:	2800      	cmp	r0, #0
    28ce:	d00c      	beq.n	28ea <_Balloc+0x60>
    28d0:	6045      	str	r5, [r0, #4]
    28d2:	6086      	str	r6, [r0, #8]
    28d4:	e00d      	b.n	28f2 <_Balloc+0x68>
    28d6:	2221      	movs	r2, #33	; 0x21
    28d8:	2104      	movs	r1, #4
    28da:	0020      	movs	r0, r4
    28dc:	f000 fad2 	bl	2e84 <_calloc_r>
    28e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    28e2:	60f0      	str	r0, [r6, #12]
    28e4:	68db      	ldr	r3, [r3, #12]
    28e6:	2b00      	cmp	r3, #0
    28e8:	d1e1      	bne.n	28ae <_Balloc+0x24>
    28ea:	2000      	movs	r0, #0
    28ec:	bd70      	pop	{r4, r5, r6, pc}
    28ee:	6802      	ldr	r2, [r0, #0]
    28f0:	601a      	str	r2, [r3, #0]
    28f2:	2300      	movs	r3, #0
    28f4:	6103      	str	r3, [r0, #16]
    28f6:	60c3      	str	r3, [r0, #12]
    28f8:	e7f8      	b.n	28ec <_Balloc+0x62>

000028fa <_Bfree>:
    28fa:	b570      	push	{r4, r5, r6, lr}
    28fc:	6a44      	ldr	r4, [r0, #36]	; 0x24
    28fe:	0006      	movs	r6, r0
    2900:	000d      	movs	r5, r1
    2902:	2c00      	cmp	r4, #0
    2904:	d107      	bne.n	2916 <_Bfree+0x1c>
    2906:	2010      	movs	r0, #16
    2908:	f001 f9ae 	bl	3c68 <malloc>
    290c:	6270      	str	r0, [r6, #36]	; 0x24
    290e:	6044      	str	r4, [r0, #4]
    2910:	6084      	str	r4, [r0, #8]
    2912:	6004      	str	r4, [r0, #0]
    2914:	60c4      	str	r4, [r0, #12]
    2916:	2d00      	cmp	r5, #0
    2918:	d007      	beq.n	292a <_Bfree+0x30>
    291a:	6a73      	ldr	r3, [r6, #36]	; 0x24
    291c:	686a      	ldr	r2, [r5, #4]
    291e:	68db      	ldr	r3, [r3, #12]
    2920:	0092      	lsls	r2, r2, #2
    2922:	189b      	adds	r3, r3, r2
    2924:	681a      	ldr	r2, [r3, #0]
    2926:	602a      	str	r2, [r5, #0]
    2928:	601d      	str	r5, [r3, #0]
    292a:	bd70      	pop	{r4, r5, r6, pc}

0000292c <__multadd>:
    292c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    292e:	001e      	movs	r6, r3
    2930:	2314      	movs	r3, #20
    2932:	469c      	mov	ip, r3
    2934:	0007      	movs	r7, r0
    2936:	000c      	movs	r4, r1
    2938:	2000      	movs	r0, #0
    293a:	690d      	ldr	r5, [r1, #16]
    293c:	448c      	add	ip, r1
    293e:	4663      	mov	r3, ip
    2940:	8819      	ldrh	r1, [r3, #0]
    2942:	681b      	ldr	r3, [r3, #0]
    2944:	4351      	muls	r1, r2
    2946:	0c1b      	lsrs	r3, r3, #16
    2948:	4353      	muls	r3, r2
    294a:	1989      	adds	r1, r1, r6
    294c:	0c0e      	lsrs	r6, r1, #16
    294e:	199b      	adds	r3, r3, r6
    2950:	b289      	uxth	r1, r1
    2952:	0c1e      	lsrs	r6, r3, #16
    2954:	041b      	lsls	r3, r3, #16
    2956:	185b      	adds	r3, r3, r1
    2958:	4661      	mov	r1, ip
    295a:	3001      	adds	r0, #1
    295c:	c108      	stmia	r1!, {r3}
    295e:	468c      	mov	ip, r1
    2960:	4285      	cmp	r5, r0
    2962:	dcec      	bgt.n	293e <__multadd+0x12>
    2964:	2e00      	cmp	r6, #0
    2966:	d01b      	beq.n	29a0 <__multadd+0x74>
    2968:	68a3      	ldr	r3, [r4, #8]
    296a:	429d      	cmp	r5, r3
    296c:	db12      	blt.n	2994 <__multadd+0x68>
    296e:	6863      	ldr	r3, [r4, #4]
    2970:	0038      	movs	r0, r7
    2972:	1c59      	adds	r1, r3, #1
    2974:	f7ff ff89 	bl	288a <_Balloc>
    2978:	0021      	movs	r1, r4
    297a:	6923      	ldr	r3, [r4, #16]
    297c:	9001      	str	r0, [sp, #4]
    297e:	1c9a      	adds	r2, r3, #2
    2980:	0092      	lsls	r2, r2, #2
    2982:	310c      	adds	r1, #12
    2984:	300c      	adds	r0, #12
    2986:	f7ff ff77 	bl	2878 <memcpy>
    298a:	0021      	movs	r1, r4
    298c:	0038      	movs	r0, r7
    298e:	f7ff ffb4 	bl	28fa <_Bfree>
    2992:	9c01      	ldr	r4, [sp, #4]
    2994:	1d2b      	adds	r3, r5, #4
    2996:	009b      	lsls	r3, r3, #2
    2998:	18e3      	adds	r3, r4, r3
    299a:	3501      	adds	r5, #1
    299c:	605e      	str	r6, [r3, #4]
    299e:	6125      	str	r5, [r4, #16]
    29a0:	0020      	movs	r0, r4
    29a2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

000029a4 <__hi0bits>:
    29a4:	0003      	movs	r3, r0
    29a6:	0c02      	lsrs	r2, r0, #16
    29a8:	2000      	movs	r0, #0
    29aa:	4282      	cmp	r2, r0
    29ac:	d101      	bne.n	29b2 <__hi0bits+0xe>
    29ae:	041b      	lsls	r3, r3, #16
    29b0:	3010      	adds	r0, #16
    29b2:	0e1a      	lsrs	r2, r3, #24
    29b4:	d101      	bne.n	29ba <__hi0bits+0x16>
    29b6:	3008      	adds	r0, #8
    29b8:	021b      	lsls	r3, r3, #8
    29ba:	0f1a      	lsrs	r2, r3, #28
    29bc:	d101      	bne.n	29c2 <__hi0bits+0x1e>
    29be:	3004      	adds	r0, #4
    29c0:	011b      	lsls	r3, r3, #4
    29c2:	0f9a      	lsrs	r2, r3, #30
    29c4:	d101      	bne.n	29ca <__hi0bits+0x26>
    29c6:	3002      	adds	r0, #2
    29c8:	009b      	lsls	r3, r3, #2
    29ca:	2b00      	cmp	r3, #0
    29cc:	db03      	blt.n	29d6 <__hi0bits+0x32>
    29ce:	3001      	adds	r0, #1
    29d0:	005b      	lsls	r3, r3, #1
    29d2:	d400      	bmi.n	29d6 <__hi0bits+0x32>
    29d4:	2020      	movs	r0, #32
    29d6:	4770      	bx	lr

000029d8 <__lo0bits>:
    29d8:	2207      	movs	r2, #7
    29da:	6803      	ldr	r3, [r0, #0]
    29dc:	b510      	push	{r4, lr}
    29de:	0001      	movs	r1, r0
    29e0:	401a      	ands	r2, r3
    29e2:	d00d      	beq.n	2a00 <__lo0bits+0x28>
    29e4:	2401      	movs	r4, #1
    29e6:	2000      	movs	r0, #0
    29e8:	4223      	tst	r3, r4
    29ea:	d105      	bne.n	29f8 <__lo0bits+0x20>
    29ec:	3002      	adds	r0, #2
    29ee:	4203      	tst	r3, r0
    29f0:	d003      	beq.n	29fa <__lo0bits+0x22>
    29f2:	40e3      	lsrs	r3, r4
    29f4:	0020      	movs	r0, r4
    29f6:	600b      	str	r3, [r1, #0]
    29f8:	bd10      	pop	{r4, pc}
    29fa:	089b      	lsrs	r3, r3, #2
    29fc:	600b      	str	r3, [r1, #0]
    29fe:	e7fb      	b.n	29f8 <__lo0bits+0x20>
    2a00:	b29c      	uxth	r4, r3
    2a02:	0010      	movs	r0, r2
    2a04:	2c00      	cmp	r4, #0
    2a06:	d101      	bne.n	2a0c <__lo0bits+0x34>
    2a08:	2010      	movs	r0, #16
    2a0a:	0c1b      	lsrs	r3, r3, #16
    2a0c:	b2da      	uxtb	r2, r3
    2a0e:	2a00      	cmp	r2, #0
    2a10:	d101      	bne.n	2a16 <__lo0bits+0x3e>
    2a12:	3008      	adds	r0, #8
    2a14:	0a1b      	lsrs	r3, r3, #8
    2a16:	071a      	lsls	r2, r3, #28
    2a18:	d101      	bne.n	2a1e <__lo0bits+0x46>
    2a1a:	3004      	adds	r0, #4
    2a1c:	091b      	lsrs	r3, r3, #4
    2a1e:	079a      	lsls	r2, r3, #30
    2a20:	d101      	bne.n	2a26 <__lo0bits+0x4e>
    2a22:	3002      	adds	r0, #2
    2a24:	089b      	lsrs	r3, r3, #2
    2a26:	07da      	lsls	r2, r3, #31
    2a28:	d4e8      	bmi.n	29fc <__lo0bits+0x24>
    2a2a:	085b      	lsrs	r3, r3, #1
    2a2c:	d001      	beq.n	2a32 <__lo0bits+0x5a>
    2a2e:	3001      	adds	r0, #1
    2a30:	e7e4      	b.n	29fc <__lo0bits+0x24>
    2a32:	2020      	movs	r0, #32
    2a34:	e7e0      	b.n	29f8 <__lo0bits+0x20>

00002a36 <__i2b>:
    2a36:	b510      	push	{r4, lr}
    2a38:	000c      	movs	r4, r1
    2a3a:	2101      	movs	r1, #1
    2a3c:	f7ff ff25 	bl	288a <_Balloc>
    2a40:	2301      	movs	r3, #1
    2a42:	6144      	str	r4, [r0, #20]
    2a44:	6103      	str	r3, [r0, #16]
    2a46:	bd10      	pop	{r4, pc}

00002a48 <__multiply>:
    2a48:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a4a:	690b      	ldr	r3, [r1, #16]
    2a4c:	0015      	movs	r5, r2
    2a4e:	6912      	ldr	r2, [r2, #16]
    2a50:	b089      	sub	sp, #36	; 0x24
    2a52:	000c      	movs	r4, r1
    2a54:	4293      	cmp	r3, r2
    2a56:	da01      	bge.n	2a5c <__multiply+0x14>
    2a58:	002c      	movs	r4, r5
    2a5a:	000d      	movs	r5, r1
    2a5c:	6927      	ldr	r7, [r4, #16]
    2a5e:	692e      	ldr	r6, [r5, #16]
    2a60:	68a2      	ldr	r2, [r4, #8]
    2a62:	19bb      	adds	r3, r7, r6
    2a64:	6861      	ldr	r1, [r4, #4]
    2a66:	9301      	str	r3, [sp, #4]
    2a68:	4293      	cmp	r3, r2
    2a6a:	dd00      	ble.n	2a6e <__multiply+0x26>
    2a6c:	3101      	adds	r1, #1
    2a6e:	f7ff ff0c 	bl	288a <_Balloc>
    2a72:	0003      	movs	r3, r0
    2a74:	3314      	adds	r3, #20
    2a76:	9300      	str	r3, [sp, #0]
    2a78:	9a00      	ldr	r2, [sp, #0]
    2a7a:	19bb      	adds	r3, r7, r6
    2a7c:	4694      	mov	ip, r2
    2a7e:	009b      	lsls	r3, r3, #2
    2a80:	449c      	add	ip, r3
    2a82:	0013      	movs	r3, r2
    2a84:	2200      	movs	r2, #0
    2a86:	9004      	str	r0, [sp, #16]
    2a88:	4563      	cmp	r3, ip
    2a8a:	d31c      	bcc.n	2ac6 <__multiply+0x7e>
    2a8c:	002a      	movs	r2, r5
    2a8e:	3414      	adds	r4, #20
    2a90:	00bf      	lsls	r7, r7, #2
    2a92:	19e3      	adds	r3, r4, r7
    2a94:	3214      	adds	r2, #20
    2a96:	00b6      	lsls	r6, r6, #2
    2a98:	9305      	str	r3, [sp, #20]
    2a9a:	1993      	adds	r3, r2, r6
    2a9c:	9402      	str	r4, [sp, #8]
    2a9e:	9306      	str	r3, [sp, #24]
    2aa0:	9b06      	ldr	r3, [sp, #24]
    2aa2:	429a      	cmp	r2, r3
    2aa4:	d311      	bcc.n	2aca <__multiply+0x82>
    2aa6:	9b01      	ldr	r3, [sp, #4]
    2aa8:	2b00      	cmp	r3, #0
    2aaa:	dd06      	ble.n	2aba <__multiply+0x72>
    2aac:	2304      	movs	r3, #4
    2aae:	425b      	negs	r3, r3
    2ab0:	449c      	add	ip, r3
    2ab2:	4663      	mov	r3, ip
    2ab4:	681b      	ldr	r3, [r3, #0]
    2ab6:	2b00      	cmp	r3, #0
    2ab8:	d051      	beq.n	2b5e <__multiply+0x116>
    2aba:	9b04      	ldr	r3, [sp, #16]
    2abc:	9a01      	ldr	r2, [sp, #4]
    2abe:	0018      	movs	r0, r3
    2ac0:	611a      	str	r2, [r3, #16]
    2ac2:	b009      	add	sp, #36	; 0x24
    2ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ac6:	c304      	stmia	r3!, {r2}
    2ac8:	e7de      	b.n	2a88 <__multiply+0x40>
    2aca:	8814      	ldrh	r4, [r2, #0]
    2acc:	2c00      	cmp	r4, #0
    2ace:	d01e      	beq.n	2b0e <__multiply+0xc6>
    2ad0:	2600      	movs	r6, #0
    2ad2:	9d00      	ldr	r5, [sp, #0]
    2ad4:	9f02      	ldr	r7, [sp, #8]
    2ad6:	cf01      	ldmia	r7!, {r0}
    2ad8:	9507      	str	r5, [sp, #28]
    2ada:	cd08      	ldmia	r5!, {r3}
    2adc:	9303      	str	r3, [sp, #12]
    2ade:	b283      	uxth	r3, r0
    2ae0:	4363      	muls	r3, r4
    2ae2:	0019      	movs	r1, r3
    2ae4:	466b      	mov	r3, sp
    2ae6:	0c00      	lsrs	r0, r0, #16
    2ae8:	899b      	ldrh	r3, [r3, #12]
    2aea:	4360      	muls	r0, r4
    2aec:	18cb      	adds	r3, r1, r3
    2aee:	9903      	ldr	r1, [sp, #12]
    2af0:	199b      	adds	r3, r3, r6
    2af2:	0c09      	lsrs	r1, r1, #16
    2af4:	1841      	adds	r1, r0, r1
    2af6:	0c18      	lsrs	r0, r3, #16
    2af8:	1809      	adds	r1, r1, r0
    2afa:	0c0e      	lsrs	r6, r1, #16
    2afc:	b29b      	uxth	r3, r3
    2afe:	0409      	lsls	r1, r1, #16
    2b00:	430b      	orrs	r3, r1
    2b02:	9907      	ldr	r1, [sp, #28]
    2b04:	600b      	str	r3, [r1, #0]
    2b06:	9b05      	ldr	r3, [sp, #20]
    2b08:	42bb      	cmp	r3, r7
    2b0a:	d8e4      	bhi.n	2ad6 <__multiply+0x8e>
    2b0c:	602e      	str	r6, [r5, #0]
    2b0e:	6813      	ldr	r3, [r2, #0]
    2b10:	0c1b      	lsrs	r3, r3, #16
    2b12:	9303      	str	r3, [sp, #12]
    2b14:	d01e      	beq.n	2b54 <__multiply+0x10c>
    2b16:	2600      	movs	r6, #0
    2b18:	9b00      	ldr	r3, [sp, #0]
    2b1a:	9c02      	ldr	r4, [sp, #8]
    2b1c:	681b      	ldr	r3, [r3, #0]
    2b1e:	9800      	ldr	r0, [sp, #0]
    2b20:	0007      	movs	r7, r0
    2b22:	8821      	ldrh	r1, [r4, #0]
    2b24:	9d03      	ldr	r5, [sp, #12]
    2b26:	b29b      	uxth	r3, r3
    2b28:	4369      	muls	r1, r5
    2b2a:	c820      	ldmia	r0!, {r5}
    2b2c:	0c2d      	lsrs	r5, r5, #16
    2b2e:	1949      	adds	r1, r1, r5
    2b30:	198e      	adds	r6, r1, r6
    2b32:	0431      	lsls	r1, r6, #16
    2b34:	430b      	orrs	r3, r1
    2b36:	603b      	str	r3, [r7, #0]
    2b38:	cc08      	ldmia	r4!, {r3}
    2b3a:	9903      	ldr	r1, [sp, #12]
    2b3c:	0c1b      	lsrs	r3, r3, #16
    2b3e:	434b      	muls	r3, r1
    2b40:	6879      	ldr	r1, [r7, #4]
    2b42:	0c36      	lsrs	r6, r6, #16
    2b44:	b289      	uxth	r1, r1
    2b46:	185b      	adds	r3, r3, r1
    2b48:	9905      	ldr	r1, [sp, #20]
    2b4a:	199b      	adds	r3, r3, r6
    2b4c:	0c1e      	lsrs	r6, r3, #16
    2b4e:	42a1      	cmp	r1, r4
    2b50:	d8e6      	bhi.n	2b20 <__multiply+0xd8>
    2b52:	6003      	str	r3, [r0, #0]
    2b54:	9b00      	ldr	r3, [sp, #0]
    2b56:	3204      	adds	r2, #4
    2b58:	3304      	adds	r3, #4
    2b5a:	9300      	str	r3, [sp, #0]
    2b5c:	e7a0      	b.n	2aa0 <__multiply+0x58>
    2b5e:	9b01      	ldr	r3, [sp, #4]
    2b60:	3b01      	subs	r3, #1
    2b62:	9301      	str	r3, [sp, #4]
    2b64:	e79f      	b.n	2aa6 <__multiply+0x5e>
	...

00002b68 <__pow5mult>:
    2b68:	2303      	movs	r3, #3
    2b6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2b6c:	4013      	ands	r3, r2
    2b6e:	0005      	movs	r5, r0
    2b70:	000e      	movs	r6, r1
    2b72:	0014      	movs	r4, r2
    2b74:	2b00      	cmp	r3, #0
    2b76:	d008      	beq.n	2b8a <__pow5mult+0x22>
    2b78:	4922      	ldr	r1, [pc, #136]	; (2c04 <__pow5mult+0x9c>)
    2b7a:	3b01      	subs	r3, #1
    2b7c:	009a      	lsls	r2, r3, #2
    2b7e:	5852      	ldr	r2, [r2, r1]
    2b80:	2300      	movs	r3, #0
    2b82:	0031      	movs	r1, r6
    2b84:	f7ff fed2 	bl	292c <__multadd>
    2b88:	0006      	movs	r6, r0
    2b8a:	10a3      	asrs	r3, r4, #2
    2b8c:	9301      	str	r3, [sp, #4]
    2b8e:	d036      	beq.n	2bfe <__pow5mult+0x96>
    2b90:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    2b92:	2c00      	cmp	r4, #0
    2b94:	d107      	bne.n	2ba6 <__pow5mult+0x3e>
    2b96:	2010      	movs	r0, #16
    2b98:	f001 f866 	bl	3c68 <malloc>
    2b9c:	6268      	str	r0, [r5, #36]	; 0x24
    2b9e:	6044      	str	r4, [r0, #4]
    2ba0:	6084      	str	r4, [r0, #8]
    2ba2:	6004      	str	r4, [r0, #0]
    2ba4:	60c4      	str	r4, [r0, #12]
    2ba6:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    2ba8:	68bc      	ldr	r4, [r7, #8]
    2baa:	2c00      	cmp	r4, #0
    2bac:	d107      	bne.n	2bbe <__pow5mult+0x56>
    2bae:	4916      	ldr	r1, [pc, #88]	; (2c08 <__pow5mult+0xa0>)
    2bb0:	0028      	movs	r0, r5
    2bb2:	f7ff ff40 	bl	2a36 <__i2b>
    2bb6:	2300      	movs	r3, #0
    2bb8:	0004      	movs	r4, r0
    2bba:	60b8      	str	r0, [r7, #8]
    2bbc:	6003      	str	r3, [r0, #0]
    2bbe:	2201      	movs	r2, #1
    2bc0:	9b01      	ldr	r3, [sp, #4]
    2bc2:	4213      	tst	r3, r2
    2bc4:	d00a      	beq.n	2bdc <__pow5mult+0x74>
    2bc6:	0031      	movs	r1, r6
    2bc8:	0022      	movs	r2, r4
    2bca:	0028      	movs	r0, r5
    2bcc:	f7ff ff3c 	bl	2a48 <__multiply>
    2bd0:	0007      	movs	r7, r0
    2bd2:	0031      	movs	r1, r6
    2bd4:	0028      	movs	r0, r5
    2bd6:	f7ff fe90 	bl	28fa <_Bfree>
    2bda:	003e      	movs	r6, r7
    2bdc:	9b01      	ldr	r3, [sp, #4]
    2bde:	105b      	asrs	r3, r3, #1
    2be0:	9301      	str	r3, [sp, #4]
    2be2:	d00c      	beq.n	2bfe <__pow5mult+0x96>
    2be4:	6820      	ldr	r0, [r4, #0]
    2be6:	2800      	cmp	r0, #0
    2be8:	d107      	bne.n	2bfa <__pow5mult+0x92>
    2bea:	0022      	movs	r2, r4
    2bec:	0021      	movs	r1, r4
    2bee:	0028      	movs	r0, r5
    2bf0:	f7ff ff2a 	bl	2a48 <__multiply>
    2bf4:	2300      	movs	r3, #0
    2bf6:	6020      	str	r0, [r4, #0]
    2bf8:	6003      	str	r3, [r0, #0]
    2bfa:	0004      	movs	r4, r0
    2bfc:	e7df      	b.n	2bbe <__pow5mult+0x56>
    2bfe:	0030      	movs	r0, r6
    2c00:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2c02:	46c0      	nop			; (mov r8, r8)
    2c04:	00005018 	.word	0x00005018
    2c08:	00000271 	.word	0x00000271

00002c0c <__lshift>:
    2c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c0e:	000d      	movs	r5, r1
    2c10:	0017      	movs	r7, r2
    2c12:	692b      	ldr	r3, [r5, #16]
    2c14:	1154      	asrs	r4, r2, #5
    2c16:	b085      	sub	sp, #20
    2c18:	18e3      	adds	r3, r4, r3
    2c1a:	9302      	str	r3, [sp, #8]
    2c1c:	3301      	adds	r3, #1
    2c1e:	9301      	str	r3, [sp, #4]
    2c20:	6849      	ldr	r1, [r1, #4]
    2c22:	68ab      	ldr	r3, [r5, #8]
    2c24:	9003      	str	r0, [sp, #12]
    2c26:	9a01      	ldr	r2, [sp, #4]
    2c28:	4293      	cmp	r3, r2
    2c2a:	db34      	blt.n	2c96 <__lshift+0x8a>
    2c2c:	9803      	ldr	r0, [sp, #12]
    2c2e:	f7ff fe2c 	bl	288a <_Balloc>
    2c32:	2300      	movs	r3, #0
    2c34:	0002      	movs	r2, r0
    2c36:	0006      	movs	r6, r0
    2c38:	0019      	movs	r1, r3
    2c3a:	3214      	adds	r2, #20
    2c3c:	42a3      	cmp	r3, r4
    2c3e:	db2d      	blt.n	2c9c <__lshift+0x90>
    2c40:	43e3      	mvns	r3, r4
    2c42:	17db      	asrs	r3, r3, #31
    2c44:	401c      	ands	r4, r3
    2c46:	002b      	movs	r3, r5
    2c48:	211f      	movs	r1, #31
    2c4a:	00a4      	lsls	r4, r4, #2
    2c4c:	1914      	adds	r4, r2, r4
    2c4e:	692a      	ldr	r2, [r5, #16]
    2c50:	3314      	adds	r3, #20
    2c52:	0092      	lsls	r2, r2, #2
    2c54:	189a      	adds	r2, r3, r2
    2c56:	400f      	ands	r7, r1
    2c58:	d024      	beq.n	2ca4 <__lshift+0x98>
    2c5a:	3101      	adds	r1, #1
    2c5c:	1bc9      	subs	r1, r1, r7
    2c5e:	468c      	mov	ip, r1
    2c60:	2100      	movs	r1, #0
    2c62:	6818      	ldr	r0, [r3, #0]
    2c64:	40b8      	lsls	r0, r7
    2c66:	4301      	orrs	r1, r0
    2c68:	4660      	mov	r0, ip
    2c6a:	6021      	str	r1, [r4, #0]
    2c6c:	cb02      	ldmia	r3!, {r1}
    2c6e:	3404      	adds	r4, #4
    2c70:	40c1      	lsrs	r1, r0
    2c72:	429a      	cmp	r2, r3
    2c74:	d8f5      	bhi.n	2c62 <__lshift+0x56>
    2c76:	6021      	str	r1, [r4, #0]
    2c78:	2900      	cmp	r1, #0
    2c7a:	d002      	beq.n	2c82 <__lshift+0x76>
    2c7c:	9b02      	ldr	r3, [sp, #8]
    2c7e:	3302      	adds	r3, #2
    2c80:	9301      	str	r3, [sp, #4]
    2c82:	9b01      	ldr	r3, [sp, #4]
    2c84:	9803      	ldr	r0, [sp, #12]
    2c86:	3b01      	subs	r3, #1
    2c88:	6133      	str	r3, [r6, #16]
    2c8a:	0029      	movs	r1, r5
    2c8c:	f7ff fe35 	bl	28fa <_Bfree>
    2c90:	0030      	movs	r0, r6
    2c92:	b005      	add	sp, #20
    2c94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c96:	3101      	adds	r1, #1
    2c98:	005b      	lsls	r3, r3, #1
    2c9a:	e7c4      	b.n	2c26 <__lshift+0x1a>
    2c9c:	0098      	lsls	r0, r3, #2
    2c9e:	5011      	str	r1, [r2, r0]
    2ca0:	3301      	adds	r3, #1
    2ca2:	e7cb      	b.n	2c3c <__lshift+0x30>
    2ca4:	cb02      	ldmia	r3!, {r1}
    2ca6:	c402      	stmia	r4!, {r1}
    2ca8:	429a      	cmp	r2, r3
    2caa:	d8fb      	bhi.n	2ca4 <__lshift+0x98>
    2cac:	e7e9      	b.n	2c82 <__lshift+0x76>

00002cae <__mcmp>:
    2cae:	690a      	ldr	r2, [r1, #16]
    2cb0:	6903      	ldr	r3, [r0, #16]
    2cb2:	b530      	push	{r4, r5, lr}
    2cb4:	1a9b      	subs	r3, r3, r2
    2cb6:	d10e      	bne.n	2cd6 <__mcmp+0x28>
    2cb8:	0092      	lsls	r2, r2, #2
    2cba:	3014      	adds	r0, #20
    2cbc:	3114      	adds	r1, #20
    2cbe:	1884      	adds	r4, r0, r2
    2cc0:	1889      	adds	r1, r1, r2
    2cc2:	3c04      	subs	r4, #4
    2cc4:	3904      	subs	r1, #4
    2cc6:	6822      	ldr	r2, [r4, #0]
    2cc8:	680d      	ldr	r5, [r1, #0]
    2cca:	42aa      	cmp	r2, r5
    2ccc:	d005      	beq.n	2cda <__mcmp+0x2c>
    2cce:	42aa      	cmp	r2, r5
    2cd0:	4192      	sbcs	r2, r2
    2cd2:	2301      	movs	r3, #1
    2cd4:	4313      	orrs	r3, r2
    2cd6:	0018      	movs	r0, r3
    2cd8:	bd30      	pop	{r4, r5, pc}
    2cda:	42a0      	cmp	r0, r4
    2cdc:	d3f1      	bcc.n	2cc2 <__mcmp+0x14>
    2cde:	e7fa      	b.n	2cd6 <__mcmp+0x28>

00002ce0 <__mdiff>:
    2ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ce2:	000d      	movs	r5, r1
    2ce4:	b085      	sub	sp, #20
    2ce6:	0007      	movs	r7, r0
    2ce8:	0011      	movs	r1, r2
    2cea:	0028      	movs	r0, r5
    2cec:	0014      	movs	r4, r2
    2cee:	f7ff ffde 	bl	2cae <__mcmp>
    2cf2:	1e06      	subs	r6, r0, #0
    2cf4:	d108      	bne.n	2d08 <__mdiff+0x28>
    2cf6:	0001      	movs	r1, r0
    2cf8:	0038      	movs	r0, r7
    2cfa:	f7ff fdc6 	bl	288a <_Balloc>
    2cfe:	2301      	movs	r3, #1
    2d00:	6146      	str	r6, [r0, #20]
    2d02:	6103      	str	r3, [r0, #16]
    2d04:	b005      	add	sp, #20
    2d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d08:	2301      	movs	r3, #1
    2d0a:	9301      	str	r3, [sp, #4]
    2d0c:	2800      	cmp	r0, #0
    2d0e:	db04      	blt.n	2d1a <__mdiff+0x3a>
    2d10:	0023      	movs	r3, r4
    2d12:	002c      	movs	r4, r5
    2d14:	001d      	movs	r5, r3
    2d16:	2300      	movs	r3, #0
    2d18:	9301      	str	r3, [sp, #4]
    2d1a:	6861      	ldr	r1, [r4, #4]
    2d1c:	0038      	movs	r0, r7
    2d1e:	f7ff fdb4 	bl	288a <_Balloc>
    2d22:	002f      	movs	r7, r5
    2d24:	2200      	movs	r2, #0
    2d26:	9b01      	ldr	r3, [sp, #4]
    2d28:	6926      	ldr	r6, [r4, #16]
    2d2a:	60c3      	str	r3, [r0, #12]
    2d2c:	3414      	adds	r4, #20
    2d2e:	00b3      	lsls	r3, r6, #2
    2d30:	18e3      	adds	r3, r4, r3
    2d32:	9302      	str	r3, [sp, #8]
    2d34:	692b      	ldr	r3, [r5, #16]
    2d36:	3714      	adds	r7, #20
    2d38:	009b      	lsls	r3, r3, #2
    2d3a:	18fb      	adds	r3, r7, r3
    2d3c:	9303      	str	r3, [sp, #12]
    2d3e:	0003      	movs	r3, r0
    2d40:	4694      	mov	ip, r2
    2d42:	3314      	adds	r3, #20
    2d44:	cc20      	ldmia	r4!, {r5}
    2d46:	cf04      	ldmia	r7!, {r2}
    2d48:	9201      	str	r2, [sp, #4]
    2d4a:	b2aa      	uxth	r2, r5
    2d4c:	4494      	add	ip, r2
    2d4e:	466a      	mov	r2, sp
    2d50:	4661      	mov	r1, ip
    2d52:	8892      	ldrh	r2, [r2, #4]
    2d54:	0c2d      	lsrs	r5, r5, #16
    2d56:	1a8a      	subs	r2, r1, r2
    2d58:	9901      	ldr	r1, [sp, #4]
    2d5a:	0c09      	lsrs	r1, r1, #16
    2d5c:	1a69      	subs	r1, r5, r1
    2d5e:	1415      	asrs	r5, r2, #16
    2d60:	1949      	adds	r1, r1, r5
    2d62:	140d      	asrs	r5, r1, #16
    2d64:	b292      	uxth	r2, r2
    2d66:	0409      	lsls	r1, r1, #16
    2d68:	430a      	orrs	r2, r1
    2d6a:	601a      	str	r2, [r3, #0]
    2d6c:	9a03      	ldr	r2, [sp, #12]
    2d6e:	46ac      	mov	ip, r5
    2d70:	3304      	adds	r3, #4
    2d72:	42ba      	cmp	r2, r7
    2d74:	d8e6      	bhi.n	2d44 <__mdiff+0x64>
    2d76:	9902      	ldr	r1, [sp, #8]
    2d78:	001a      	movs	r2, r3
    2d7a:	428c      	cmp	r4, r1
    2d7c:	d305      	bcc.n	2d8a <__mdiff+0xaa>
    2d7e:	3a04      	subs	r2, #4
    2d80:	6813      	ldr	r3, [r2, #0]
    2d82:	2b00      	cmp	r3, #0
    2d84:	d00e      	beq.n	2da4 <__mdiff+0xc4>
    2d86:	6106      	str	r6, [r0, #16]
    2d88:	e7bc      	b.n	2d04 <__mdiff+0x24>
    2d8a:	cc04      	ldmia	r4!, {r2}
    2d8c:	b291      	uxth	r1, r2
    2d8e:	4461      	add	r1, ip
    2d90:	140d      	asrs	r5, r1, #16
    2d92:	0c12      	lsrs	r2, r2, #16
    2d94:	1952      	adds	r2, r2, r5
    2d96:	1415      	asrs	r5, r2, #16
    2d98:	b289      	uxth	r1, r1
    2d9a:	0412      	lsls	r2, r2, #16
    2d9c:	430a      	orrs	r2, r1
    2d9e:	46ac      	mov	ip, r5
    2da0:	c304      	stmia	r3!, {r2}
    2da2:	e7e8      	b.n	2d76 <__mdiff+0x96>
    2da4:	3e01      	subs	r6, #1
    2da6:	e7ea      	b.n	2d7e <__mdiff+0x9e>

00002da8 <__d2b>:
    2da8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2daa:	001d      	movs	r5, r3
    2dac:	2101      	movs	r1, #1
    2dae:	9f08      	ldr	r7, [sp, #32]
    2db0:	0014      	movs	r4, r2
    2db2:	f7ff fd6a 	bl	288a <_Balloc>
    2db6:	032b      	lsls	r3, r5, #12
    2db8:	006d      	lsls	r5, r5, #1
    2dba:	0006      	movs	r6, r0
    2dbc:	0b1b      	lsrs	r3, r3, #12
    2dbe:	0d6d      	lsrs	r5, r5, #21
    2dc0:	d124      	bne.n	2e0c <__d2b+0x64>
    2dc2:	9301      	str	r3, [sp, #4]
    2dc4:	2c00      	cmp	r4, #0
    2dc6:	d027      	beq.n	2e18 <__d2b+0x70>
    2dc8:	4668      	mov	r0, sp
    2dca:	9400      	str	r4, [sp, #0]
    2dcc:	f7ff fe04 	bl	29d8 <__lo0bits>
    2dd0:	9c00      	ldr	r4, [sp, #0]
    2dd2:	2800      	cmp	r0, #0
    2dd4:	d01e      	beq.n	2e14 <__d2b+0x6c>
    2dd6:	9b01      	ldr	r3, [sp, #4]
    2dd8:	2120      	movs	r1, #32
    2dda:	001a      	movs	r2, r3
    2ddc:	1a09      	subs	r1, r1, r0
    2dde:	408a      	lsls	r2, r1
    2de0:	40c3      	lsrs	r3, r0
    2de2:	4322      	orrs	r2, r4
    2de4:	6172      	str	r2, [r6, #20]
    2de6:	9301      	str	r3, [sp, #4]
    2de8:	9c01      	ldr	r4, [sp, #4]
    2dea:	61b4      	str	r4, [r6, #24]
    2dec:	1e63      	subs	r3, r4, #1
    2dee:	419c      	sbcs	r4, r3
    2df0:	3401      	adds	r4, #1
    2df2:	6134      	str	r4, [r6, #16]
    2df4:	2d00      	cmp	r5, #0
    2df6:	d018      	beq.n	2e2a <__d2b+0x82>
    2df8:	4b12      	ldr	r3, [pc, #72]	; (2e44 <__d2b+0x9c>)
    2dfa:	18ed      	adds	r5, r5, r3
    2dfc:	2335      	movs	r3, #53	; 0x35
    2dfe:	182d      	adds	r5, r5, r0
    2e00:	603d      	str	r5, [r7, #0]
    2e02:	1a18      	subs	r0, r3, r0
    2e04:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2e06:	6018      	str	r0, [r3, #0]
    2e08:	0030      	movs	r0, r6
    2e0a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2e0c:	2280      	movs	r2, #128	; 0x80
    2e0e:	0352      	lsls	r2, r2, #13
    2e10:	4313      	orrs	r3, r2
    2e12:	e7d6      	b.n	2dc2 <__d2b+0x1a>
    2e14:	6174      	str	r4, [r6, #20]
    2e16:	e7e7      	b.n	2de8 <__d2b+0x40>
    2e18:	a801      	add	r0, sp, #4
    2e1a:	f7ff fddd 	bl	29d8 <__lo0bits>
    2e1e:	2401      	movs	r4, #1
    2e20:	9b01      	ldr	r3, [sp, #4]
    2e22:	6134      	str	r4, [r6, #16]
    2e24:	6173      	str	r3, [r6, #20]
    2e26:	3020      	adds	r0, #32
    2e28:	e7e4      	b.n	2df4 <__d2b+0x4c>
    2e2a:	4b07      	ldr	r3, [pc, #28]	; (2e48 <__d2b+0xa0>)
    2e2c:	18c0      	adds	r0, r0, r3
    2e2e:	4b07      	ldr	r3, [pc, #28]	; (2e4c <__d2b+0xa4>)
    2e30:	6038      	str	r0, [r7, #0]
    2e32:	18e3      	adds	r3, r4, r3
    2e34:	009b      	lsls	r3, r3, #2
    2e36:	18f3      	adds	r3, r6, r3
    2e38:	6958      	ldr	r0, [r3, #20]
    2e3a:	f7ff fdb3 	bl	29a4 <__hi0bits>
    2e3e:	0164      	lsls	r4, r4, #5
    2e40:	1a20      	subs	r0, r4, r0
    2e42:	e7df      	b.n	2e04 <__d2b+0x5c>
    2e44:	fffffbcd 	.word	0xfffffbcd
    2e48:	fffffbce 	.word	0xfffffbce
    2e4c:	3fffffff 	.word	0x3fffffff

00002e50 <_mprec_log10>:
    2e50:	b510      	push	{r4, lr}
    2e52:	0004      	movs	r4, r0
    2e54:	2817      	cmp	r0, #23
    2e56:	dc05      	bgt.n	2e64 <_mprec_log10+0x14>
    2e58:	4b07      	ldr	r3, [pc, #28]	; (2e78 <_mprec_log10+0x28>)
    2e5a:	00c4      	lsls	r4, r0, #3
    2e5c:	191c      	adds	r4, r3, r4
    2e5e:	6820      	ldr	r0, [r4, #0]
    2e60:	6861      	ldr	r1, [r4, #4]
    2e62:	bd10      	pop	{r4, pc}
    2e64:	2000      	movs	r0, #0
    2e66:	4905      	ldr	r1, [pc, #20]	; (2e7c <_mprec_log10+0x2c>)
    2e68:	2200      	movs	r2, #0
    2e6a:	4b05      	ldr	r3, [pc, #20]	; (2e80 <_mprec_log10+0x30>)
    2e6c:	3c01      	subs	r4, #1
    2e6e:	f7fe ff4d 	bl	1d0c <__aeabi_dmul>
    2e72:	2c00      	cmp	r4, #0
    2e74:	d1f8      	bne.n	2e68 <_mprec_log10+0x18>
    2e76:	e7f4      	b.n	2e62 <_mprec_log10+0x12>
    2e78:	00004f50 	.word	0x00004f50
    2e7c:	3ff00000 	.word	0x3ff00000
    2e80:	40240000 	.word	0x40240000

00002e84 <_calloc_r>:
    2e84:	434a      	muls	r2, r1
    2e86:	b570      	push	{r4, r5, r6, lr}
    2e88:	0011      	movs	r1, r2
    2e8a:	0014      	movs	r4, r2
    2e8c:	f000 f808 	bl	2ea0 <_malloc_r>
    2e90:	1e05      	subs	r5, r0, #0
    2e92:	d003      	beq.n	2e9c <_calloc_r+0x18>
    2e94:	0022      	movs	r2, r4
    2e96:	2100      	movs	r1, #0
    2e98:	f7ff fb64 	bl	2564 <memset>
    2e9c:	0028      	movs	r0, r5
    2e9e:	bd70      	pop	{r4, r5, r6, pc}

00002ea0 <_malloc_r>:
    2ea0:	2303      	movs	r3, #3
    2ea2:	b570      	push	{r4, r5, r6, lr}
    2ea4:	1ccd      	adds	r5, r1, #3
    2ea6:	439d      	bics	r5, r3
    2ea8:	3508      	adds	r5, #8
    2eaa:	0006      	movs	r6, r0
    2eac:	2d0c      	cmp	r5, #12
    2eae:	d21e      	bcs.n	2eee <_malloc_r+0x4e>
    2eb0:	250c      	movs	r5, #12
    2eb2:	42a9      	cmp	r1, r5
    2eb4:	d81d      	bhi.n	2ef2 <_malloc_r+0x52>
    2eb6:	0030      	movs	r0, r6
    2eb8:	f000 fee0 	bl	3c7c <__malloc_lock>
    2ebc:	4a25      	ldr	r2, [pc, #148]	; (2f54 <_malloc_r+0xb4>)
    2ebe:	6814      	ldr	r4, [r2, #0]
    2ec0:	0021      	movs	r1, r4
    2ec2:	2900      	cmp	r1, #0
    2ec4:	d119      	bne.n	2efa <_malloc_r+0x5a>
    2ec6:	4c24      	ldr	r4, [pc, #144]	; (2f58 <_malloc_r+0xb8>)
    2ec8:	6823      	ldr	r3, [r4, #0]
    2eca:	2b00      	cmp	r3, #0
    2ecc:	d103      	bne.n	2ed6 <_malloc_r+0x36>
    2ece:	0030      	movs	r0, r6
    2ed0:	f000 f844 	bl	2f5c <_sbrk_r>
    2ed4:	6020      	str	r0, [r4, #0]
    2ed6:	0029      	movs	r1, r5
    2ed8:	0030      	movs	r0, r6
    2eda:	f000 f83f 	bl	2f5c <_sbrk_r>
    2ede:	1c43      	adds	r3, r0, #1
    2ee0:	d12c      	bne.n	2f3c <_malloc_r+0x9c>
    2ee2:	230c      	movs	r3, #12
    2ee4:	0030      	movs	r0, r6
    2ee6:	6033      	str	r3, [r6, #0]
    2ee8:	f000 fec9 	bl	3c7e <__malloc_unlock>
    2eec:	e003      	b.n	2ef6 <_malloc_r+0x56>
    2eee:	2d00      	cmp	r5, #0
    2ef0:	dadf      	bge.n	2eb2 <_malloc_r+0x12>
    2ef2:	230c      	movs	r3, #12
    2ef4:	6033      	str	r3, [r6, #0]
    2ef6:	2000      	movs	r0, #0
    2ef8:	bd70      	pop	{r4, r5, r6, pc}
    2efa:	680b      	ldr	r3, [r1, #0]
    2efc:	1b5b      	subs	r3, r3, r5
    2efe:	d41a      	bmi.n	2f36 <_malloc_r+0x96>
    2f00:	2b0b      	cmp	r3, #11
    2f02:	d903      	bls.n	2f0c <_malloc_r+0x6c>
    2f04:	600b      	str	r3, [r1, #0]
    2f06:	18cc      	adds	r4, r1, r3
    2f08:	6025      	str	r5, [r4, #0]
    2f0a:	e003      	b.n	2f14 <_malloc_r+0x74>
    2f0c:	428c      	cmp	r4, r1
    2f0e:	d10e      	bne.n	2f2e <_malloc_r+0x8e>
    2f10:	6863      	ldr	r3, [r4, #4]
    2f12:	6013      	str	r3, [r2, #0]
    2f14:	0030      	movs	r0, r6
    2f16:	f000 feb2 	bl	3c7e <__malloc_unlock>
    2f1a:	0020      	movs	r0, r4
    2f1c:	2207      	movs	r2, #7
    2f1e:	300b      	adds	r0, #11
    2f20:	1d23      	adds	r3, r4, #4
    2f22:	4390      	bics	r0, r2
    2f24:	1ac3      	subs	r3, r0, r3
    2f26:	d0e7      	beq.n	2ef8 <_malloc_r+0x58>
    2f28:	425a      	negs	r2, r3
    2f2a:	50e2      	str	r2, [r4, r3]
    2f2c:	e7e4      	b.n	2ef8 <_malloc_r+0x58>
    2f2e:	684b      	ldr	r3, [r1, #4]
    2f30:	6063      	str	r3, [r4, #4]
    2f32:	000c      	movs	r4, r1
    2f34:	e7ee      	b.n	2f14 <_malloc_r+0x74>
    2f36:	000c      	movs	r4, r1
    2f38:	6849      	ldr	r1, [r1, #4]
    2f3a:	e7c2      	b.n	2ec2 <_malloc_r+0x22>
    2f3c:	2303      	movs	r3, #3
    2f3e:	1cc4      	adds	r4, r0, #3
    2f40:	439c      	bics	r4, r3
    2f42:	42a0      	cmp	r0, r4
    2f44:	d0e0      	beq.n	2f08 <_malloc_r+0x68>
    2f46:	1a21      	subs	r1, r4, r0
    2f48:	0030      	movs	r0, r6
    2f4a:	f000 f807 	bl	2f5c <_sbrk_r>
    2f4e:	1c43      	adds	r3, r0, #1
    2f50:	d1da      	bne.n	2f08 <_malloc_r+0x68>
    2f52:	e7c6      	b.n	2ee2 <_malloc_r+0x42>
    2f54:	200000b8 	.word	0x200000b8
    2f58:	200000bc 	.word	0x200000bc

00002f5c <_sbrk_r>:
    2f5c:	2300      	movs	r3, #0
    2f5e:	b570      	push	{r4, r5, r6, lr}
    2f60:	4c06      	ldr	r4, [pc, #24]	; (2f7c <_sbrk_r+0x20>)
    2f62:	0005      	movs	r5, r0
    2f64:	0008      	movs	r0, r1
    2f66:	6023      	str	r3, [r4, #0]
    2f68:	f7fe f986 	bl	1278 <_sbrk>
    2f6c:	1c43      	adds	r3, r0, #1
    2f6e:	d103      	bne.n	2f78 <_sbrk_r+0x1c>
    2f70:	6823      	ldr	r3, [r4, #0]
    2f72:	2b00      	cmp	r3, #0
    2f74:	d000      	beq.n	2f78 <_sbrk_r+0x1c>
    2f76:	602b      	str	r3, [r5, #0]
    2f78:	bd70      	pop	{r4, r5, r6, pc}
    2f7a:	46c0      	nop			; (mov r8, r8)
    2f7c:	20000268 	.word	0x20000268

00002f80 <strcpy>:
    2f80:	1c03      	adds	r3, r0, #0
    2f82:	780a      	ldrb	r2, [r1, #0]
    2f84:	3101      	adds	r1, #1
    2f86:	701a      	strb	r2, [r3, #0]
    2f88:	3301      	adds	r3, #1
    2f8a:	2a00      	cmp	r2, #0
    2f8c:	d1f9      	bne.n	2f82 <strcpy+0x2>
    2f8e:	4770      	bx	lr

00002f90 <quorem>:
    2f90:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f92:	6903      	ldr	r3, [r0, #16]
    2f94:	690c      	ldr	r4, [r1, #16]
    2f96:	b089      	sub	sp, #36	; 0x24
    2f98:	0007      	movs	r7, r0
    2f9a:	9105      	str	r1, [sp, #20]
    2f9c:	2600      	movs	r6, #0
    2f9e:	429c      	cmp	r4, r3
    2fa0:	dc6d      	bgt.n	307e <quorem+0xee>
    2fa2:	000b      	movs	r3, r1
    2fa4:	3c01      	subs	r4, #1
    2fa6:	3314      	adds	r3, #20
    2fa8:	00a5      	lsls	r5, r4, #2
    2faa:	9303      	str	r3, [sp, #12]
    2fac:	195b      	adds	r3, r3, r5
    2fae:	9304      	str	r3, [sp, #16]
    2fb0:	0003      	movs	r3, r0
    2fb2:	3314      	adds	r3, #20
    2fb4:	9302      	str	r3, [sp, #8]
    2fb6:	195d      	adds	r5, r3, r5
    2fb8:	9b04      	ldr	r3, [sp, #16]
    2fba:	6828      	ldr	r0, [r5, #0]
    2fbc:	681b      	ldr	r3, [r3, #0]
    2fbe:	1c59      	adds	r1, r3, #1
    2fc0:	9301      	str	r3, [sp, #4]
    2fc2:	f7fe fab9 	bl	1538 <__udivsi3>
    2fc6:	9001      	str	r0, [sp, #4]
    2fc8:	42b0      	cmp	r0, r6
    2fca:	d02d      	beq.n	3028 <quorem+0x98>
    2fcc:	9b03      	ldr	r3, [sp, #12]
    2fce:	9802      	ldr	r0, [sp, #8]
    2fd0:	469c      	mov	ip, r3
    2fd2:	9606      	str	r6, [sp, #24]
    2fd4:	4662      	mov	r2, ip
    2fd6:	ca08      	ldmia	r2!, {r3}
    2fd8:	4694      	mov	ip, r2
    2fda:	9a01      	ldr	r2, [sp, #4]
    2fdc:	b299      	uxth	r1, r3
    2fde:	4351      	muls	r1, r2
    2fe0:	0c1b      	lsrs	r3, r3, #16
    2fe2:	4353      	muls	r3, r2
    2fe4:	1989      	adds	r1, r1, r6
    2fe6:	0c0a      	lsrs	r2, r1, #16
    2fe8:	189b      	adds	r3, r3, r2
    2fea:	9307      	str	r3, [sp, #28]
    2fec:	8802      	ldrh	r2, [r0, #0]
    2fee:	0c1e      	lsrs	r6, r3, #16
    2ff0:	9b06      	ldr	r3, [sp, #24]
    2ff2:	b289      	uxth	r1, r1
    2ff4:	18d2      	adds	r2, r2, r3
    2ff6:	6803      	ldr	r3, [r0, #0]
    2ff8:	1a52      	subs	r2, r2, r1
    2ffa:	0c19      	lsrs	r1, r3, #16
    2ffc:	466b      	mov	r3, sp
    2ffe:	8b9b      	ldrh	r3, [r3, #28]
    3000:	1acb      	subs	r3, r1, r3
    3002:	1411      	asrs	r1, r2, #16
    3004:	185b      	adds	r3, r3, r1
    3006:	1419      	asrs	r1, r3, #16
    3008:	b292      	uxth	r2, r2
    300a:	041b      	lsls	r3, r3, #16
    300c:	431a      	orrs	r2, r3
    300e:	9b04      	ldr	r3, [sp, #16]
    3010:	9106      	str	r1, [sp, #24]
    3012:	c004      	stmia	r0!, {r2}
    3014:	4563      	cmp	r3, ip
    3016:	d2dd      	bcs.n	2fd4 <quorem+0x44>
    3018:	682b      	ldr	r3, [r5, #0]
    301a:	2b00      	cmp	r3, #0
    301c:	d104      	bne.n	3028 <quorem+0x98>
    301e:	9b02      	ldr	r3, [sp, #8]
    3020:	3d04      	subs	r5, #4
    3022:	42ab      	cmp	r3, r5
    3024:	d32e      	bcc.n	3084 <quorem+0xf4>
    3026:	613c      	str	r4, [r7, #16]
    3028:	9905      	ldr	r1, [sp, #20]
    302a:	0038      	movs	r0, r7
    302c:	f7ff fe3f 	bl	2cae <__mcmp>
    3030:	2800      	cmp	r0, #0
    3032:	db23      	blt.n	307c <quorem+0xec>
    3034:	2500      	movs	r5, #0
    3036:	9b01      	ldr	r3, [sp, #4]
    3038:	9802      	ldr	r0, [sp, #8]
    303a:	3301      	adds	r3, #1
    303c:	9903      	ldr	r1, [sp, #12]
    303e:	9301      	str	r3, [sp, #4]
    3040:	c908      	ldmia	r1!, {r3}
    3042:	8802      	ldrh	r2, [r0, #0]
    3044:	1955      	adds	r5, r2, r5
    3046:	b29a      	uxth	r2, r3
    3048:	1aaa      	subs	r2, r5, r2
    304a:	6805      	ldr	r5, [r0, #0]
    304c:	0c1b      	lsrs	r3, r3, #16
    304e:	0c2d      	lsrs	r5, r5, #16
    3050:	1aeb      	subs	r3, r5, r3
    3052:	1415      	asrs	r5, r2, #16
    3054:	195b      	adds	r3, r3, r5
    3056:	141d      	asrs	r5, r3, #16
    3058:	b292      	uxth	r2, r2
    305a:	041b      	lsls	r3, r3, #16
    305c:	4313      	orrs	r3, r2
    305e:	c008      	stmia	r0!, {r3}
    3060:	9b04      	ldr	r3, [sp, #16]
    3062:	428b      	cmp	r3, r1
    3064:	d2ec      	bcs.n	3040 <quorem+0xb0>
    3066:	9a02      	ldr	r2, [sp, #8]
    3068:	00a3      	lsls	r3, r4, #2
    306a:	18d3      	adds	r3, r2, r3
    306c:	681a      	ldr	r2, [r3, #0]
    306e:	2a00      	cmp	r2, #0
    3070:	d104      	bne.n	307c <quorem+0xec>
    3072:	9a02      	ldr	r2, [sp, #8]
    3074:	3b04      	subs	r3, #4
    3076:	429a      	cmp	r2, r3
    3078:	d309      	bcc.n	308e <quorem+0xfe>
    307a:	613c      	str	r4, [r7, #16]
    307c:	9e01      	ldr	r6, [sp, #4]
    307e:	0030      	movs	r0, r6
    3080:	b009      	add	sp, #36	; 0x24
    3082:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3084:	682b      	ldr	r3, [r5, #0]
    3086:	2b00      	cmp	r3, #0
    3088:	d1cd      	bne.n	3026 <quorem+0x96>
    308a:	3c01      	subs	r4, #1
    308c:	e7c7      	b.n	301e <quorem+0x8e>
    308e:	681a      	ldr	r2, [r3, #0]
    3090:	2a00      	cmp	r2, #0
    3092:	d1f2      	bne.n	307a <quorem+0xea>
    3094:	3c01      	subs	r4, #1
    3096:	e7ec      	b.n	3072 <quorem+0xe2>

00003098 <_dtoa_r>:
    3098:	b5f0      	push	{r4, r5, r6, r7, lr}
    309a:	0016      	movs	r6, r2
    309c:	001f      	movs	r7, r3
    309e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    30a0:	b09d      	sub	sp, #116	; 0x74
    30a2:	9004      	str	r0, [sp, #16]
    30a4:	9d25      	ldr	r5, [sp, #148]	; 0x94
    30a6:	9606      	str	r6, [sp, #24]
    30a8:	9707      	str	r7, [sp, #28]
    30aa:	2c00      	cmp	r4, #0
    30ac:	d108      	bne.n	30c0 <_dtoa_r+0x28>
    30ae:	2010      	movs	r0, #16
    30b0:	f000 fdda 	bl	3c68 <malloc>
    30b4:	9b04      	ldr	r3, [sp, #16]
    30b6:	6258      	str	r0, [r3, #36]	; 0x24
    30b8:	6044      	str	r4, [r0, #4]
    30ba:	6084      	str	r4, [r0, #8]
    30bc:	6004      	str	r4, [r0, #0]
    30be:	60c4      	str	r4, [r0, #12]
    30c0:	9b04      	ldr	r3, [sp, #16]
    30c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    30c4:	6819      	ldr	r1, [r3, #0]
    30c6:	2900      	cmp	r1, #0
    30c8:	d00b      	beq.n	30e2 <_dtoa_r+0x4a>
    30ca:	685a      	ldr	r2, [r3, #4]
    30cc:	2301      	movs	r3, #1
    30ce:	4093      	lsls	r3, r2
    30d0:	604a      	str	r2, [r1, #4]
    30d2:	608b      	str	r3, [r1, #8]
    30d4:	9804      	ldr	r0, [sp, #16]
    30d6:	f7ff fc10 	bl	28fa <_Bfree>
    30da:	2200      	movs	r2, #0
    30dc:	9b04      	ldr	r3, [sp, #16]
    30de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    30e0:	601a      	str	r2, [r3, #0]
    30e2:	9b07      	ldr	r3, [sp, #28]
    30e4:	2b00      	cmp	r3, #0
    30e6:	da1f      	bge.n	3128 <_dtoa_r+0x90>
    30e8:	2301      	movs	r3, #1
    30ea:	602b      	str	r3, [r5, #0]
    30ec:	007b      	lsls	r3, r7, #1
    30ee:	085b      	lsrs	r3, r3, #1
    30f0:	9307      	str	r3, [sp, #28]
    30f2:	9c07      	ldr	r4, [sp, #28]
    30f4:	4bb7      	ldr	r3, [pc, #732]	; (33d4 <_dtoa_r+0x33c>)
    30f6:	0022      	movs	r2, r4
    30f8:	9319      	str	r3, [sp, #100]	; 0x64
    30fa:	401a      	ands	r2, r3
    30fc:	429a      	cmp	r2, r3
    30fe:	d116      	bne.n	312e <_dtoa_r+0x96>
    3100:	4bb5      	ldr	r3, [pc, #724]	; (33d8 <_dtoa_r+0x340>)
    3102:	9a24      	ldr	r2, [sp, #144]	; 0x90
    3104:	6013      	str	r3, [r2, #0]
    3106:	9b06      	ldr	r3, [sp, #24]
    3108:	2b00      	cmp	r3, #0
    310a:	d103      	bne.n	3114 <_dtoa_r+0x7c>
    310c:	0324      	lsls	r4, r4, #12
    310e:	d101      	bne.n	3114 <_dtoa_r+0x7c>
    3110:	f000 fd91 	bl	3c36 <_dtoa_r+0xb9e>
    3114:	4bb1      	ldr	r3, [pc, #708]	; (33dc <_dtoa_r+0x344>)
    3116:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3118:	930a      	str	r3, [sp, #40]	; 0x28
    311a:	4bb1      	ldr	r3, [pc, #708]	; (33e0 <_dtoa_r+0x348>)
    311c:	2a00      	cmp	r2, #0
    311e:	d001      	beq.n	3124 <_dtoa_r+0x8c>
    3120:	f000 fd8f 	bl	3c42 <_dtoa_r+0xbaa>
    3124:	f000 fd8f 	bl	3c46 <_dtoa_r+0xbae>
    3128:	2300      	movs	r3, #0
    312a:	602b      	str	r3, [r5, #0]
    312c:	e7e1      	b.n	30f2 <_dtoa_r+0x5a>
    312e:	9e06      	ldr	r6, [sp, #24]
    3130:	9f07      	ldr	r7, [sp, #28]
    3132:	2200      	movs	r2, #0
    3134:	2300      	movs	r3, #0
    3136:	0030      	movs	r0, r6
    3138:	0039      	movs	r1, r7
    313a:	f000 fea5 	bl	3e88 <__aeabi_dcmpeq>
    313e:	1e05      	subs	r5, r0, #0
    3140:	d00e      	beq.n	3160 <_dtoa_r+0xc8>
    3142:	2301      	movs	r3, #1
    3144:	9a24      	ldr	r2, [sp, #144]	; 0x90
    3146:	6013      	str	r3, [r2, #0]
    3148:	4ba6      	ldr	r3, [pc, #664]	; (33e4 <_dtoa_r+0x34c>)
    314a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    314c:	930a      	str	r3, [sp, #40]	; 0x28
    314e:	2a00      	cmp	r2, #0
    3150:	d101      	bne.n	3156 <_dtoa_r+0xbe>
    3152:	f000 fd78 	bl	3c46 <_dtoa_r+0xbae>
    3156:	4aa4      	ldr	r2, [pc, #656]	; (33e8 <_dtoa_r+0x350>)
    3158:	9926      	ldr	r1, [sp, #152]	; 0x98
    315a:	600a      	str	r2, [r1, #0]
    315c:	f000 fd73 	bl	3c46 <_dtoa_r+0xbae>
    3160:	ab1a      	add	r3, sp, #104	; 0x68
    3162:	9301      	str	r3, [sp, #4]
    3164:	ab1b      	add	r3, sp, #108	; 0x6c
    3166:	9300      	str	r3, [sp, #0]
    3168:	0032      	movs	r2, r6
    316a:	003b      	movs	r3, r7
    316c:	9804      	ldr	r0, [sp, #16]
    316e:	f7ff fe1b 	bl	2da8 <__d2b>
    3172:	0063      	lsls	r3, r4, #1
    3174:	9005      	str	r0, [sp, #20]
    3176:	0d5b      	lsrs	r3, r3, #21
    3178:	d100      	bne.n	317c <_dtoa_r+0xe4>
    317a:	e07f      	b.n	327c <_dtoa_r+0x1e4>
    317c:	033a      	lsls	r2, r7, #12
    317e:	4c9b      	ldr	r4, [pc, #620]	; (33ec <_dtoa_r+0x354>)
    3180:	0b12      	lsrs	r2, r2, #12
    3182:	4314      	orrs	r4, r2
    3184:	0021      	movs	r1, r4
    3186:	4a9a      	ldr	r2, [pc, #616]	; (33f0 <_dtoa_r+0x358>)
    3188:	0030      	movs	r0, r6
    318a:	9518      	str	r5, [sp, #96]	; 0x60
    318c:	189e      	adds	r6, r3, r2
    318e:	2200      	movs	r2, #0
    3190:	4b98      	ldr	r3, [pc, #608]	; (33f4 <_dtoa_r+0x35c>)
    3192:	f001 fab7 	bl	4704 <__aeabi_dsub>
    3196:	4a98      	ldr	r2, [pc, #608]	; (33f8 <_dtoa_r+0x360>)
    3198:	4b98      	ldr	r3, [pc, #608]	; (33fc <_dtoa_r+0x364>)
    319a:	f7fe fdb7 	bl	1d0c <__aeabi_dmul>
    319e:	4a98      	ldr	r2, [pc, #608]	; (3400 <_dtoa_r+0x368>)
    31a0:	4b98      	ldr	r3, [pc, #608]	; (3404 <_dtoa_r+0x36c>)
    31a2:	f000 fe9f 	bl	3ee4 <__aeabi_dadd>
    31a6:	0004      	movs	r4, r0
    31a8:	0030      	movs	r0, r6
    31aa:	000d      	movs	r5, r1
    31ac:	f7ff f82e 	bl	220c <__aeabi_i2d>
    31b0:	4a95      	ldr	r2, [pc, #596]	; (3408 <_dtoa_r+0x370>)
    31b2:	4b96      	ldr	r3, [pc, #600]	; (340c <_dtoa_r+0x374>)
    31b4:	f7fe fdaa 	bl	1d0c <__aeabi_dmul>
    31b8:	0002      	movs	r2, r0
    31ba:	000b      	movs	r3, r1
    31bc:	0020      	movs	r0, r4
    31be:	0029      	movs	r1, r5
    31c0:	f000 fe90 	bl	3ee4 <__aeabi_dadd>
    31c4:	0004      	movs	r4, r0
    31c6:	000d      	movs	r5, r1
    31c8:	f001 fdb2 	bl	4d30 <__aeabi_d2iz>
    31cc:	2200      	movs	r2, #0
    31ce:	9003      	str	r0, [sp, #12]
    31d0:	2300      	movs	r3, #0
    31d2:	0020      	movs	r0, r4
    31d4:	0029      	movs	r1, r5
    31d6:	f000 fe5d 	bl	3e94 <__aeabi_dcmplt>
    31da:	2800      	cmp	r0, #0
    31dc:	d00e      	beq.n	31fc <_dtoa_r+0x164>
    31de:	9803      	ldr	r0, [sp, #12]
    31e0:	f7ff f814 	bl	220c <__aeabi_i2d>
    31e4:	000b      	movs	r3, r1
    31e6:	0002      	movs	r2, r0
    31e8:	0029      	movs	r1, r5
    31ea:	0020      	movs	r0, r4
    31ec:	f000 fe4c 	bl	3e88 <__aeabi_dcmpeq>
    31f0:	0003      	movs	r3, r0
    31f2:	4258      	negs	r0, r3
    31f4:	4158      	adcs	r0, r3
    31f6:	9b03      	ldr	r3, [sp, #12]
    31f8:	1a1b      	subs	r3, r3, r0
    31fa:	9303      	str	r3, [sp, #12]
    31fc:	2301      	movs	r3, #1
    31fe:	9316      	str	r3, [sp, #88]	; 0x58
    3200:	9b03      	ldr	r3, [sp, #12]
    3202:	2b16      	cmp	r3, #22
    3204:	d80f      	bhi.n	3226 <_dtoa_r+0x18e>
    3206:	4982      	ldr	r1, [pc, #520]	; (3410 <_dtoa_r+0x378>)
    3208:	00db      	lsls	r3, r3, #3
    320a:	18c9      	adds	r1, r1, r3
    320c:	6808      	ldr	r0, [r1, #0]
    320e:	6849      	ldr	r1, [r1, #4]
    3210:	9a06      	ldr	r2, [sp, #24]
    3212:	9b07      	ldr	r3, [sp, #28]
    3214:	f000 fe52 	bl	3ebc <__aeabi_dcmpgt>
    3218:	2800      	cmp	r0, #0
    321a:	d04b      	beq.n	32b4 <_dtoa_r+0x21c>
    321c:	9b03      	ldr	r3, [sp, #12]
    321e:	3b01      	subs	r3, #1
    3220:	9303      	str	r3, [sp, #12]
    3222:	2300      	movs	r3, #0
    3224:	9316      	str	r3, [sp, #88]	; 0x58
    3226:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    3228:	1b9e      	subs	r6, r3, r6
    322a:	2300      	movs	r3, #0
    322c:	930b      	str	r3, [sp, #44]	; 0x2c
    322e:	0033      	movs	r3, r6
    3230:	3b01      	subs	r3, #1
    3232:	930c      	str	r3, [sp, #48]	; 0x30
    3234:	d504      	bpl.n	3240 <_dtoa_r+0x1a8>
    3236:	2301      	movs	r3, #1
    3238:	1b9b      	subs	r3, r3, r6
    323a:	930b      	str	r3, [sp, #44]	; 0x2c
    323c:	2300      	movs	r3, #0
    323e:	930c      	str	r3, [sp, #48]	; 0x30
    3240:	9b03      	ldr	r3, [sp, #12]
    3242:	2b00      	cmp	r3, #0
    3244:	db38      	blt.n	32b8 <_dtoa_r+0x220>
    3246:	9a03      	ldr	r2, [sp, #12]
    3248:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    324a:	4694      	mov	ip, r2
    324c:	4463      	add	r3, ip
    324e:	930c      	str	r3, [sp, #48]	; 0x30
    3250:	2300      	movs	r3, #0
    3252:	920f      	str	r2, [sp, #60]	; 0x3c
    3254:	9308      	str	r3, [sp, #32]
    3256:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3258:	2501      	movs	r5, #1
    325a:	2b09      	cmp	r3, #9
    325c:	d900      	bls.n	3260 <_dtoa_r+0x1c8>
    325e:	e091      	b.n	3384 <_dtoa_r+0x2ec>
    3260:	2b05      	cmp	r3, #5
    3262:	dd02      	ble.n	326a <_dtoa_r+0x1d2>
    3264:	2500      	movs	r5, #0
    3266:	3b04      	subs	r3, #4
    3268:	9322      	str	r3, [sp, #136]	; 0x88
    326a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    326c:	1e98      	subs	r0, r3, #2
    326e:	2803      	cmp	r0, #3
    3270:	d900      	bls.n	3274 <_dtoa_r+0x1dc>
    3272:	e091      	b.n	3398 <_dtoa_r+0x300>
    3274:	f000 fd04 	bl	3c80 <__gnu_thumb1_case_uqi>
    3278:	76298482 	.word	0x76298482
    327c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    327e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    3280:	189e      	adds	r6, r3, r2
    3282:	4b64      	ldr	r3, [pc, #400]	; (3414 <_dtoa_r+0x37c>)
    3284:	18f2      	adds	r2, r6, r3
    3286:	2a20      	cmp	r2, #32
    3288:	dd0f      	ble.n	32aa <_dtoa_r+0x212>
    328a:	4b63      	ldr	r3, [pc, #396]	; (3418 <_dtoa_r+0x380>)
    328c:	9806      	ldr	r0, [sp, #24]
    328e:	18f3      	adds	r3, r6, r3
    3290:	40d8      	lsrs	r0, r3
    3292:	2340      	movs	r3, #64	; 0x40
    3294:	1a9b      	subs	r3, r3, r2
    3296:	409c      	lsls	r4, r3
    3298:	4320      	orrs	r0, r4
    329a:	f001 fd7d 	bl	4d98 <__aeabi_ui2d>
    329e:	2301      	movs	r3, #1
    32a0:	4c5e      	ldr	r4, [pc, #376]	; (341c <_dtoa_r+0x384>)
    32a2:	3e01      	subs	r6, #1
    32a4:	1909      	adds	r1, r1, r4
    32a6:	9318      	str	r3, [sp, #96]	; 0x60
    32a8:	e771      	b.n	318e <_dtoa_r+0xf6>
    32aa:	2320      	movs	r3, #32
    32ac:	9806      	ldr	r0, [sp, #24]
    32ae:	1a9b      	subs	r3, r3, r2
    32b0:	4098      	lsls	r0, r3
    32b2:	e7f2      	b.n	329a <_dtoa_r+0x202>
    32b4:	9016      	str	r0, [sp, #88]	; 0x58
    32b6:	e7b6      	b.n	3226 <_dtoa_r+0x18e>
    32b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    32ba:	9a03      	ldr	r2, [sp, #12]
    32bc:	1a9b      	subs	r3, r3, r2
    32be:	930b      	str	r3, [sp, #44]	; 0x2c
    32c0:	4253      	negs	r3, r2
    32c2:	9308      	str	r3, [sp, #32]
    32c4:	2300      	movs	r3, #0
    32c6:	930f      	str	r3, [sp, #60]	; 0x3c
    32c8:	e7c5      	b.n	3256 <_dtoa_r+0x1be>
    32ca:	2301      	movs	r3, #1
    32cc:	930e      	str	r3, [sp, #56]	; 0x38
    32ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    32d0:	2b00      	cmp	r3, #0
    32d2:	dd65      	ble.n	33a0 <_dtoa_r+0x308>
    32d4:	001f      	movs	r7, r3
    32d6:	930d      	str	r3, [sp, #52]	; 0x34
    32d8:	9a04      	ldr	r2, [sp, #16]
    32da:	6a54      	ldr	r4, [r2, #36]	; 0x24
    32dc:	2200      	movs	r2, #0
    32de:	6062      	str	r2, [r4, #4]
    32e0:	3204      	adds	r2, #4
    32e2:	0011      	movs	r1, r2
    32e4:	3114      	adds	r1, #20
    32e6:	4299      	cmp	r1, r3
    32e8:	d95f      	bls.n	33aa <_dtoa_r+0x312>
    32ea:	6861      	ldr	r1, [r4, #4]
    32ec:	9804      	ldr	r0, [sp, #16]
    32ee:	f7ff facc 	bl	288a <_Balloc>
    32f2:	9b04      	ldr	r3, [sp, #16]
    32f4:	6020      	str	r0, [r4, #0]
    32f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    32f8:	681b      	ldr	r3, [r3, #0]
    32fa:	930a      	str	r3, [sp, #40]	; 0x28
    32fc:	2f0e      	cmp	r7, #14
    32fe:	d900      	bls.n	3302 <_dtoa_r+0x26a>
    3300:	e105      	b.n	350e <_dtoa_r+0x476>
    3302:	2d00      	cmp	r5, #0
    3304:	d100      	bne.n	3308 <_dtoa_r+0x270>
    3306:	e102      	b.n	350e <_dtoa_r+0x476>
    3308:	9b06      	ldr	r3, [sp, #24]
    330a:	9c07      	ldr	r4, [sp, #28]
    330c:	9314      	str	r3, [sp, #80]	; 0x50
    330e:	9415      	str	r4, [sp, #84]	; 0x54
    3310:	9b03      	ldr	r3, [sp, #12]
    3312:	2b00      	cmp	r3, #0
    3314:	dc00      	bgt.n	3318 <_dtoa_r+0x280>
    3316:	e085      	b.n	3424 <_dtoa_r+0x38c>
    3318:	001a      	movs	r2, r3
    331a:	210f      	movs	r1, #15
    331c:	4b3c      	ldr	r3, [pc, #240]	; (3410 <_dtoa_r+0x378>)
    331e:	400a      	ands	r2, r1
    3320:	00d2      	lsls	r2, r2, #3
    3322:	189b      	adds	r3, r3, r2
    3324:	685c      	ldr	r4, [r3, #4]
    3326:	681b      	ldr	r3, [r3, #0]
    3328:	9310      	str	r3, [sp, #64]	; 0x40
    332a:	9411      	str	r4, [sp, #68]	; 0x44
    332c:	9b03      	ldr	r3, [sp, #12]
    332e:	2402      	movs	r4, #2
    3330:	111d      	asrs	r5, r3, #4
    3332:	06eb      	lsls	r3, r5, #27
    3334:	d50a      	bpl.n	334c <_dtoa_r+0x2b4>
    3336:	4b3a      	ldr	r3, [pc, #232]	; (3420 <_dtoa_r+0x388>)
    3338:	400d      	ands	r5, r1
    333a:	6a1a      	ldr	r2, [r3, #32]
    333c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    333e:	9814      	ldr	r0, [sp, #80]	; 0x50
    3340:	9915      	ldr	r1, [sp, #84]	; 0x54
    3342:	f7fe f9af 	bl	16a4 <__aeabi_ddiv>
    3346:	9006      	str	r0, [sp, #24]
    3348:	9107      	str	r1, [sp, #28]
    334a:	3401      	adds	r4, #1
    334c:	4e34      	ldr	r6, [pc, #208]	; (3420 <_dtoa_r+0x388>)
    334e:	2d00      	cmp	r5, #0
    3350:	d130      	bne.n	33b4 <_dtoa_r+0x31c>
    3352:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3354:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3356:	9806      	ldr	r0, [sp, #24]
    3358:	9907      	ldr	r1, [sp, #28]
    335a:	f7fe f9a3 	bl	16a4 <__aeabi_ddiv>
    335e:	9006      	str	r0, [sp, #24]
    3360:	9107      	str	r1, [sp, #28]
    3362:	e07a      	b.n	345a <_dtoa_r+0x3c2>
    3364:	2301      	movs	r3, #1
    3366:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    3368:	930e      	str	r3, [sp, #56]	; 0x38
    336a:	4694      	mov	ip, r2
    336c:	9b03      	ldr	r3, [sp, #12]
    336e:	4463      	add	r3, ip
    3370:	1c5f      	adds	r7, r3, #1
    3372:	930d      	str	r3, [sp, #52]	; 0x34
    3374:	1e3b      	subs	r3, r7, #0
    3376:	dcaf      	bgt.n	32d8 <_dtoa_r+0x240>
    3378:	2301      	movs	r3, #1
    337a:	e7ad      	b.n	32d8 <_dtoa_r+0x240>
    337c:	2300      	movs	r3, #0
    337e:	e7a5      	b.n	32cc <_dtoa_r+0x234>
    3380:	2300      	movs	r3, #0
    3382:	e7f0      	b.n	3366 <_dtoa_r+0x2ce>
    3384:	2300      	movs	r3, #0
    3386:	950e      	str	r5, [sp, #56]	; 0x38
    3388:	9322      	str	r3, [sp, #136]	; 0x88
    338a:	3b01      	subs	r3, #1
    338c:	2200      	movs	r2, #0
    338e:	930d      	str	r3, [sp, #52]	; 0x34
    3390:	001f      	movs	r7, r3
    3392:	3313      	adds	r3, #19
    3394:	9223      	str	r2, [sp, #140]	; 0x8c
    3396:	e79f      	b.n	32d8 <_dtoa_r+0x240>
    3398:	2301      	movs	r3, #1
    339a:	930e      	str	r3, [sp, #56]	; 0x38
    339c:	3b02      	subs	r3, #2
    339e:	e7f5      	b.n	338c <_dtoa_r+0x2f4>
    33a0:	2301      	movs	r3, #1
    33a2:	930d      	str	r3, [sp, #52]	; 0x34
    33a4:	001f      	movs	r7, r3
    33a6:	001a      	movs	r2, r3
    33a8:	e7f4      	b.n	3394 <_dtoa_r+0x2fc>
    33aa:	6861      	ldr	r1, [r4, #4]
    33ac:	0052      	lsls	r2, r2, #1
    33ae:	3101      	adds	r1, #1
    33b0:	6061      	str	r1, [r4, #4]
    33b2:	e796      	b.n	32e2 <_dtoa_r+0x24a>
    33b4:	2301      	movs	r3, #1
    33b6:	421d      	tst	r5, r3
    33b8:	d008      	beq.n	33cc <_dtoa_r+0x334>
    33ba:	9810      	ldr	r0, [sp, #64]	; 0x40
    33bc:	9911      	ldr	r1, [sp, #68]	; 0x44
    33be:	18e4      	adds	r4, r4, r3
    33c0:	6832      	ldr	r2, [r6, #0]
    33c2:	6873      	ldr	r3, [r6, #4]
    33c4:	f7fe fca2 	bl	1d0c <__aeabi_dmul>
    33c8:	9010      	str	r0, [sp, #64]	; 0x40
    33ca:	9111      	str	r1, [sp, #68]	; 0x44
    33cc:	106d      	asrs	r5, r5, #1
    33ce:	3608      	adds	r6, #8
    33d0:	e7bd      	b.n	334e <_dtoa_r+0x2b6>
    33d2:	46c0      	nop			; (mov r8, r8)
    33d4:	7ff00000 	.word	0x7ff00000
    33d8:	0000270f 	.word	0x0000270f
    33dc:	0000502d 	.word	0x0000502d
    33e0:	00005030 	.word	0x00005030
    33e4:	00005031 	.word	0x00005031
    33e8:	00005032 	.word	0x00005032
    33ec:	3ff00000 	.word	0x3ff00000
    33f0:	fffffc01 	.word	0xfffffc01
    33f4:	3ff80000 	.word	0x3ff80000
    33f8:	636f4361 	.word	0x636f4361
    33fc:	3fd287a7 	.word	0x3fd287a7
    3400:	8b60c8b3 	.word	0x8b60c8b3
    3404:	3fc68a28 	.word	0x3fc68a28
    3408:	509f79fb 	.word	0x509f79fb
    340c:	3fd34413 	.word	0x3fd34413
    3410:	00004f50 	.word	0x00004f50
    3414:	00000432 	.word	0x00000432
    3418:	00000412 	.word	0x00000412
    341c:	fe100000 	.word	0xfe100000
    3420:	00004f28 	.word	0x00004f28
    3424:	9b03      	ldr	r3, [sp, #12]
    3426:	2402      	movs	r4, #2
    3428:	2b00      	cmp	r3, #0
    342a:	d016      	beq.n	345a <_dtoa_r+0x3c2>
    342c:	9814      	ldr	r0, [sp, #80]	; 0x50
    342e:	9915      	ldr	r1, [sp, #84]	; 0x54
    3430:	425d      	negs	r5, r3
    3432:	230f      	movs	r3, #15
    3434:	4aca      	ldr	r2, [pc, #808]	; (3760 <_dtoa_r+0x6c8>)
    3436:	402b      	ands	r3, r5
    3438:	00db      	lsls	r3, r3, #3
    343a:	18d3      	adds	r3, r2, r3
    343c:	681a      	ldr	r2, [r3, #0]
    343e:	685b      	ldr	r3, [r3, #4]
    3440:	f7fe fc64 	bl	1d0c <__aeabi_dmul>
    3444:	2300      	movs	r3, #0
    3446:	9006      	str	r0, [sp, #24]
    3448:	9107      	str	r1, [sp, #28]
    344a:	4ec6      	ldr	r6, [pc, #792]	; (3764 <_dtoa_r+0x6cc>)
    344c:	112d      	asrs	r5, r5, #4
    344e:	2d00      	cmp	r5, #0
    3450:	d000      	beq.n	3454 <_dtoa_r+0x3bc>
    3452:	e08c      	b.n	356e <_dtoa_r+0x4d6>
    3454:	2b00      	cmp	r3, #0
    3456:	d000      	beq.n	345a <_dtoa_r+0x3c2>
    3458:	e781      	b.n	335e <_dtoa_r+0x2c6>
    345a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    345c:	2b00      	cmp	r3, #0
    345e:	d100      	bne.n	3462 <_dtoa_r+0x3ca>
    3460:	e091      	b.n	3586 <_dtoa_r+0x4ee>
    3462:	9a06      	ldr	r2, [sp, #24]
    3464:	9b07      	ldr	r3, [sp, #28]
    3466:	9210      	str	r2, [sp, #64]	; 0x40
    3468:	9311      	str	r3, [sp, #68]	; 0x44
    346a:	9810      	ldr	r0, [sp, #64]	; 0x40
    346c:	9911      	ldr	r1, [sp, #68]	; 0x44
    346e:	2200      	movs	r2, #0
    3470:	4bbd      	ldr	r3, [pc, #756]	; (3768 <_dtoa_r+0x6d0>)
    3472:	f000 fd0f 	bl	3e94 <__aeabi_dcmplt>
    3476:	2800      	cmp	r0, #0
    3478:	d100      	bne.n	347c <_dtoa_r+0x3e4>
    347a:	e084      	b.n	3586 <_dtoa_r+0x4ee>
    347c:	2f00      	cmp	r7, #0
    347e:	d100      	bne.n	3482 <_dtoa_r+0x3ea>
    3480:	e081      	b.n	3586 <_dtoa_r+0x4ee>
    3482:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3484:	2b00      	cmp	r3, #0
    3486:	dd3e      	ble.n	3506 <_dtoa_r+0x46e>
    3488:	9810      	ldr	r0, [sp, #64]	; 0x40
    348a:	9911      	ldr	r1, [sp, #68]	; 0x44
    348c:	9b03      	ldr	r3, [sp, #12]
    348e:	2200      	movs	r2, #0
    3490:	1e5e      	subs	r6, r3, #1
    3492:	4bb6      	ldr	r3, [pc, #728]	; (376c <_dtoa_r+0x6d4>)
    3494:	f7fe fc3a 	bl	1d0c <__aeabi_dmul>
    3498:	9006      	str	r0, [sp, #24]
    349a:	9107      	str	r1, [sp, #28]
    349c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    349e:	3401      	adds	r4, #1
    34a0:	0020      	movs	r0, r4
    34a2:	f7fe feb3 	bl	220c <__aeabi_i2d>
    34a6:	9a06      	ldr	r2, [sp, #24]
    34a8:	9b07      	ldr	r3, [sp, #28]
    34aa:	f7fe fc2f 	bl	1d0c <__aeabi_dmul>
    34ae:	2200      	movs	r2, #0
    34b0:	4baf      	ldr	r3, [pc, #700]	; (3770 <_dtoa_r+0x6d8>)
    34b2:	f000 fd17 	bl	3ee4 <__aeabi_dadd>
    34b6:	9012      	str	r0, [sp, #72]	; 0x48
    34b8:	9113      	str	r1, [sp, #76]	; 0x4c
    34ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
    34bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    34be:	4aad      	ldr	r2, [pc, #692]	; (3774 <_dtoa_r+0x6dc>)
    34c0:	9310      	str	r3, [sp, #64]	; 0x40
    34c2:	9411      	str	r4, [sp, #68]	; 0x44
    34c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    34c6:	189c      	adds	r4, r3, r2
    34c8:	9411      	str	r4, [sp, #68]	; 0x44
    34ca:	2d00      	cmp	r5, #0
    34cc:	d15e      	bne.n	358c <_dtoa_r+0x4f4>
    34ce:	9806      	ldr	r0, [sp, #24]
    34d0:	9907      	ldr	r1, [sp, #28]
    34d2:	2200      	movs	r2, #0
    34d4:	4ba8      	ldr	r3, [pc, #672]	; (3778 <_dtoa_r+0x6e0>)
    34d6:	f001 f915 	bl	4704 <__aeabi_dsub>
    34da:	9a10      	ldr	r2, [sp, #64]	; 0x40
    34dc:	0023      	movs	r3, r4
    34de:	9006      	str	r0, [sp, #24]
    34e0:	9107      	str	r1, [sp, #28]
    34e2:	f000 fceb 	bl	3ebc <__aeabi_dcmpgt>
    34e6:	2800      	cmp	r0, #0
    34e8:	d000      	beq.n	34ec <_dtoa_r+0x454>
    34ea:	e301      	b.n	3af0 <_dtoa_r+0xa58>
    34ec:	48a3      	ldr	r0, [pc, #652]	; (377c <_dtoa_r+0x6e4>)
    34ee:	9913      	ldr	r1, [sp, #76]	; 0x4c
    34f0:	4684      	mov	ip, r0
    34f2:	4461      	add	r1, ip
    34f4:	000b      	movs	r3, r1
    34f6:	9806      	ldr	r0, [sp, #24]
    34f8:	9907      	ldr	r1, [sp, #28]
    34fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
    34fc:	f000 fcca 	bl	3e94 <__aeabi_dcmplt>
    3500:	2800      	cmp	r0, #0
    3502:	d000      	beq.n	3506 <_dtoa_r+0x46e>
    3504:	e2e8      	b.n	3ad8 <_dtoa_r+0xa40>
    3506:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3508:	9c15      	ldr	r4, [sp, #84]	; 0x54
    350a:	9306      	str	r3, [sp, #24]
    350c:	9407      	str	r4, [sp, #28]
    350e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    3510:	2b00      	cmp	r3, #0
    3512:	da00      	bge.n	3516 <_dtoa_r+0x47e>
    3514:	e157      	b.n	37c6 <_dtoa_r+0x72e>
    3516:	9a03      	ldr	r2, [sp, #12]
    3518:	2a0e      	cmp	r2, #14
    351a:	dd00      	ble.n	351e <_dtoa_r+0x486>
    351c:	e153      	b.n	37c6 <_dtoa_r+0x72e>
    351e:	4b90      	ldr	r3, [pc, #576]	; (3760 <_dtoa_r+0x6c8>)
    3520:	00d2      	lsls	r2, r2, #3
    3522:	189b      	adds	r3, r3, r2
    3524:	685c      	ldr	r4, [r3, #4]
    3526:	681b      	ldr	r3, [r3, #0]
    3528:	9308      	str	r3, [sp, #32]
    352a:	9409      	str	r4, [sp, #36]	; 0x24
    352c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    352e:	2b00      	cmp	r3, #0
    3530:	db00      	blt.n	3534 <_dtoa_r+0x49c>
    3532:	e0ce      	b.n	36d2 <_dtoa_r+0x63a>
    3534:	2f00      	cmp	r7, #0
    3536:	dd00      	ble.n	353a <_dtoa_r+0x4a2>
    3538:	e0cb      	b.n	36d2 <_dtoa_r+0x63a>
    353a:	d000      	beq.n	353e <_dtoa_r+0x4a6>
    353c:	e2cf      	b.n	3ade <_dtoa_r+0xa46>
    353e:	9808      	ldr	r0, [sp, #32]
    3540:	9909      	ldr	r1, [sp, #36]	; 0x24
    3542:	2200      	movs	r2, #0
    3544:	4b8c      	ldr	r3, [pc, #560]	; (3778 <_dtoa_r+0x6e0>)
    3546:	f7fe fbe1 	bl	1d0c <__aeabi_dmul>
    354a:	9a06      	ldr	r2, [sp, #24]
    354c:	9b07      	ldr	r3, [sp, #28]
    354e:	f000 fcbf 	bl	3ed0 <__aeabi_dcmpge>
    3552:	003e      	movs	r6, r7
    3554:	9708      	str	r7, [sp, #32]
    3556:	2800      	cmp	r0, #0
    3558:	d000      	beq.n	355c <_dtoa_r+0x4c4>
    355a:	e2a4      	b.n	3aa6 <_dtoa_r+0xa0e>
    355c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    355e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3560:	1c5d      	adds	r5, r3, #1
    3562:	2331      	movs	r3, #49	; 0x31
    3564:	7013      	strb	r3, [r2, #0]
    3566:	9b03      	ldr	r3, [sp, #12]
    3568:	3301      	adds	r3, #1
    356a:	9303      	str	r3, [sp, #12]
    356c:	e29f      	b.n	3aae <_dtoa_r+0xa16>
    356e:	2201      	movs	r2, #1
    3570:	4215      	tst	r5, r2
    3572:	d005      	beq.n	3580 <_dtoa_r+0x4e8>
    3574:	18a4      	adds	r4, r4, r2
    3576:	6832      	ldr	r2, [r6, #0]
    3578:	6873      	ldr	r3, [r6, #4]
    357a:	f7fe fbc7 	bl	1d0c <__aeabi_dmul>
    357e:	2301      	movs	r3, #1
    3580:	106d      	asrs	r5, r5, #1
    3582:	3608      	adds	r6, #8
    3584:	e763      	b.n	344e <_dtoa_r+0x3b6>
    3586:	9e03      	ldr	r6, [sp, #12]
    3588:	003d      	movs	r5, r7
    358a:	e789      	b.n	34a0 <_dtoa_r+0x408>
    358c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    358e:	1e69      	subs	r1, r5, #1
    3590:	1952      	adds	r2, r2, r5
    3592:	9217      	str	r2, [sp, #92]	; 0x5c
    3594:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3596:	4b72      	ldr	r3, [pc, #456]	; (3760 <_dtoa_r+0x6c8>)
    3598:	00c9      	lsls	r1, r1, #3
    359a:	2a00      	cmp	r2, #0
    359c:	d04a      	beq.n	3634 <_dtoa_r+0x59c>
    359e:	185b      	adds	r3, r3, r1
    35a0:	681a      	ldr	r2, [r3, #0]
    35a2:	685b      	ldr	r3, [r3, #4]
    35a4:	2000      	movs	r0, #0
    35a6:	4976      	ldr	r1, [pc, #472]	; (3780 <_dtoa_r+0x6e8>)
    35a8:	f7fe f87c 	bl	16a4 <__aeabi_ddiv>
    35ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
    35ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
    35b0:	f001 f8a8 	bl	4704 <__aeabi_dsub>
    35b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    35b6:	9010      	str	r0, [sp, #64]	; 0x40
    35b8:	9111      	str	r1, [sp, #68]	; 0x44
    35ba:	9312      	str	r3, [sp, #72]	; 0x48
    35bc:	9806      	ldr	r0, [sp, #24]
    35be:	9907      	ldr	r1, [sp, #28]
    35c0:	f001 fbb6 	bl	4d30 <__aeabi_d2iz>
    35c4:	0004      	movs	r4, r0
    35c6:	f7fe fe21 	bl	220c <__aeabi_i2d>
    35ca:	0002      	movs	r2, r0
    35cc:	000b      	movs	r3, r1
    35ce:	9806      	ldr	r0, [sp, #24]
    35d0:	9907      	ldr	r1, [sp, #28]
    35d2:	f001 f897 	bl	4704 <__aeabi_dsub>
    35d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    35d8:	3430      	adds	r4, #48	; 0x30
    35da:	1c5d      	adds	r5, r3, #1
    35dc:	701c      	strb	r4, [r3, #0]
    35de:	9a10      	ldr	r2, [sp, #64]	; 0x40
    35e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    35e2:	9006      	str	r0, [sp, #24]
    35e4:	9107      	str	r1, [sp, #28]
    35e6:	f000 fc55 	bl	3e94 <__aeabi_dcmplt>
    35ea:	2800      	cmp	r0, #0
    35ec:	d165      	bne.n	36ba <_dtoa_r+0x622>
    35ee:	9a06      	ldr	r2, [sp, #24]
    35f0:	9b07      	ldr	r3, [sp, #28]
    35f2:	2000      	movs	r0, #0
    35f4:	495c      	ldr	r1, [pc, #368]	; (3768 <_dtoa_r+0x6d0>)
    35f6:	f001 f885 	bl	4704 <__aeabi_dsub>
    35fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
    35fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    35fe:	f000 fc49 	bl	3e94 <__aeabi_dcmplt>
    3602:	2800      	cmp	r0, #0
    3604:	d000      	beq.n	3608 <_dtoa_r+0x570>
    3606:	e0be      	b.n	3786 <_dtoa_r+0x6ee>
    3608:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    360a:	429d      	cmp	r5, r3
    360c:	d100      	bne.n	3610 <_dtoa_r+0x578>
    360e:	e77a      	b.n	3506 <_dtoa_r+0x46e>
    3610:	9810      	ldr	r0, [sp, #64]	; 0x40
    3612:	9911      	ldr	r1, [sp, #68]	; 0x44
    3614:	2200      	movs	r2, #0
    3616:	4b55      	ldr	r3, [pc, #340]	; (376c <_dtoa_r+0x6d4>)
    3618:	f7fe fb78 	bl	1d0c <__aeabi_dmul>
    361c:	2200      	movs	r2, #0
    361e:	9010      	str	r0, [sp, #64]	; 0x40
    3620:	9111      	str	r1, [sp, #68]	; 0x44
    3622:	9806      	ldr	r0, [sp, #24]
    3624:	9907      	ldr	r1, [sp, #28]
    3626:	4b51      	ldr	r3, [pc, #324]	; (376c <_dtoa_r+0x6d4>)
    3628:	f7fe fb70 	bl	1d0c <__aeabi_dmul>
    362c:	9512      	str	r5, [sp, #72]	; 0x48
    362e:	9006      	str	r0, [sp, #24]
    3630:	9107      	str	r1, [sp, #28]
    3632:	e7c3      	b.n	35bc <_dtoa_r+0x524>
    3634:	1859      	adds	r1, r3, r1
    3636:	6808      	ldr	r0, [r1, #0]
    3638:	6849      	ldr	r1, [r1, #4]
    363a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    363c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    363e:	f7fe fb65 	bl	1d0c <__aeabi_dmul>
    3642:	9010      	str	r0, [sp, #64]	; 0x40
    3644:	9111      	str	r1, [sp, #68]	; 0x44
    3646:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    3648:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    364a:	9806      	ldr	r0, [sp, #24]
    364c:	9907      	ldr	r1, [sp, #28]
    364e:	f001 fb6f 	bl	4d30 <__aeabi_d2iz>
    3652:	9012      	str	r0, [sp, #72]	; 0x48
    3654:	f7fe fdda 	bl	220c <__aeabi_i2d>
    3658:	0002      	movs	r2, r0
    365a:	000b      	movs	r3, r1
    365c:	9806      	ldr	r0, [sp, #24]
    365e:	9907      	ldr	r1, [sp, #28]
    3660:	f001 f850 	bl	4704 <__aeabi_dsub>
    3664:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3666:	9006      	str	r0, [sp, #24]
    3668:	9107      	str	r1, [sp, #28]
    366a:	3330      	adds	r3, #48	; 0x30
    366c:	7023      	strb	r3, [r4, #0]
    366e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    3670:	3401      	adds	r4, #1
    3672:	2200      	movs	r2, #0
    3674:	42a3      	cmp	r3, r4
    3676:	d124      	bne.n	36c2 <_dtoa_r+0x62a>
    3678:	4b41      	ldr	r3, [pc, #260]	; (3780 <_dtoa_r+0x6e8>)
    367a:	9810      	ldr	r0, [sp, #64]	; 0x40
    367c:	9911      	ldr	r1, [sp, #68]	; 0x44
    367e:	f000 fc31 	bl	3ee4 <__aeabi_dadd>
    3682:	0002      	movs	r2, r0
    3684:	000b      	movs	r3, r1
    3686:	9806      	ldr	r0, [sp, #24]
    3688:	9907      	ldr	r1, [sp, #28]
    368a:	f000 fc17 	bl	3ebc <__aeabi_dcmpgt>
    368e:	2800      	cmp	r0, #0
    3690:	d000      	beq.n	3694 <_dtoa_r+0x5fc>
    3692:	e078      	b.n	3786 <_dtoa_r+0x6ee>
    3694:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3696:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3698:	2000      	movs	r0, #0
    369a:	4939      	ldr	r1, [pc, #228]	; (3780 <_dtoa_r+0x6e8>)
    369c:	f001 f832 	bl	4704 <__aeabi_dsub>
    36a0:	0002      	movs	r2, r0
    36a2:	000b      	movs	r3, r1
    36a4:	9806      	ldr	r0, [sp, #24]
    36a6:	9907      	ldr	r1, [sp, #28]
    36a8:	f000 fbf4 	bl	3e94 <__aeabi_dcmplt>
    36ac:	2800      	cmp	r0, #0
    36ae:	d100      	bne.n	36b2 <_dtoa_r+0x61a>
    36b0:	e729      	b.n	3506 <_dtoa_r+0x46e>
    36b2:	1e6b      	subs	r3, r5, #1
    36b4:	781a      	ldrb	r2, [r3, #0]
    36b6:	2a30      	cmp	r2, #48	; 0x30
    36b8:	d001      	beq.n	36be <_dtoa_r+0x626>
    36ba:	9603      	str	r6, [sp, #12]
    36bc:	e03f      	b.n	373e <_dtoa_r+0x6a6>
    36be:	001d      	movs	r5, r3
    36c0:	e7f7      	b.n	36b2 <_dtoa_r+0x61a>
    36c2:	9806      	ldr	r0, [sp, #24]
    36c4:	9907      	ldr	r1, [sp, #28]
    36c6:	4b29      	ldr	r3, [pc, #164]	; (376c <_dtoa_r+0x6d4>)
    36c8:	f7fe fb20 	bl	1d0c <__aeabi_dmul>
    36cc:	9006      	str	r0, [sp, #24]
    36ce:	9107      	str	r1, [sp, #28]
    36d0:	e7bb      	b.n	364a <_dtoa_r+0x5b2>
    36d2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    36d4:	9a08      	ldr	r2, [sp, #32]
    36d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    36d8:	9806      	ldr	r0, [sp, #24]
    36da:	9907      	ldr	r1, [sp, #28]
    36dc:	f7fd ffe2 	bl	16a4 <__aeabi_ddiv>
    36e0:	f001 fb26 	bl	4d30 <__aeabi_d2iz>
    36e4:	0004      	movs	r4, r0
    36e6:	f7fe fd91 	bl	220c <__aeabi_i2d>
    36ea:	9a08      	ldr	r2, [sp, #32]
    36ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    36ee:	f7fe fb0d 	bl	1d0c <__aeabi_dmul>
    36f2:	000b      	movs	r3, r1
    36f4:	0002      	movs	r2, r0
    36f6:	9806      	ldr	r0, [sp, #24]
    36f8:	9907      	ldr	r1, [sp, #28]
    36fa:	f001 f803 	bl	4704 <__aeabi_dsub>
    36fe:	0023      	movs	r3, r4
    3700:	3330      	adds	r3, #48	; 0x30
    3702:	7033      	strb	r3, [r6, #0]
    3704:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3706:	1c75      	adds	r5, r6, #1
    3708:	1aeb      	subs	r3, r5, r3
    370a:	429f      	cmp	r7, r3
    370c:	d14c      	bne.n	37a8 <_dtoa_r+0x710>
    370e:	0002      	movs	r2, r0
    3710:	000b      	movs	r3, r1
    3712:	f000 fbe7 	bl	3ee4 <__aeabi_dadd>
    3716:	0006      	movs	r6, r0
    3718:	000f      	movs	r7, r1
    371a:	0002      	movs	r2, r0
    371c:	000b      	movs	r3, r1
    371e:	9808      	ldr	r0, [sp, #32]
    3720:	9909      	ldr	r1, [sp, #36]	; 0x24
    3722:	f000 fbb7 	bl	3e94 <__aeabi_dcmplt>
    3726:	2800      	cmp	r0, #0
    3728:	d12c      	bne.n	3784 <_dtoa_r+0x6ec>
    372a:	9808      	ldr	r0, [sp, #32]
    372c:	9909      	ldr	r1, [sp, #36]	; 0x24
    372e:	0032      	movs	r2, r6
    3730:	003b      	movs	r3, r7
    3732:	f000 fba9 	bl	3e88 <__aeabi_dcmpeq>
    3736:	2800      	cmp	r0, #0
    3738:	d001      	beq.n	373e <_dtoa_r+0x6a6>
    373a:	07e3      	lsls	r3, r4, #31
    373c:	d422      	bmi.n	3784 <_dtoa_r+0x6ec>
    373e:	9905      	ldr	r1, [sp, #20]
    3740:	9804      	ldr	r0, [sp, #16]
    3742:	f7ff f8da 	bl	28fa <_Bfree>
    3746:	2300      	movs	r3, #0
    3748:	702b      	strb	r3, [r5, #0]
    374a:	9b03      	ldr	r3, [sp, #12]
    374c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    374e:	3301      	adds	r3, #1
    3750:	6013      	str	r3, [r2, #0]
    3752:	9b26      	ldr	r3, [sp, #152]	; 0x98
    3754:	2b00      	cmp	r3, #0
    3756:	d100      	bne.n	375a <_dtoa_r+0x6c2>
    3758:	e275      	b.n	3c46 <_dtoa_r+0xbae>
    375a:	601d      	str	r5, [r3, #0]
    375c:	e273      	b.n	3c46 <_dtoa_r+0xbae>
    375e:	46c0      	nop			; (mov r8, r8)
    3760:	00004f50 	.word	0x00004f50
    3764:	00004f28 	.word	0x00004f28
    3768:	3ff00000 	.word	0x3ff00000
    376c:	40240000 	.word	0x40240000
    3770:	401c0000 	.word	0x401c0000
    3774:	fcc00000 	.word	0xfcc00000
    3778:	40140000 	.word	0x40140000
    377c:	7cc00000 	.word	0x7cc00000
    3780:	3fe00000 	.word	0x3fe00000
    3784:	9e03      	ldr	r6, [sp, #12]
    3786:	1e6b      	subs	r3, r5, #1
    3788:	781a      	ldrb	r2, [r3, #0]
    378a:	2a39      	cmp	r2, #57	; 0x39
    378c:	d106      	bne.n	379c <_dtoa_r+0x704>
    378e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3790:	429a      	cmp	r2, r3
    3792:	d107      	bne.n	37a4 <_dtoa_r+0x70c>
    3794:	2330      	movs	r3, #48	; 0x30
    3796:	7013      	strb	r3, [r2, #0]
    3798:	0013      	movs	r3, r2
    379a:	3601      	adds	r6, #1
    379c:	781a      	ldrb	r2, [r3, #0]
    379e:	3201      	adds	r2, #1
    37a0:	701a      	strb	r2, [r3, #0]
    37a2:	e78a      	b.n	36ba <_dtoa_r+0x622>
    37a4:	001d      	movs	r5, r3
    37a6:	e7ee      	b.n	3786 <_dtoa_r+0x6ee>
    37a8:	2200      	movs	r2, #0
    37aa:	4bcf      	ldr	r3, [pc, #828]	; (3ae8 <_dtoa_r+0xa50>)
    37ac:	f7fe faae 	bl	1d0c <__aeabi_dmul>
    37b0:	2200      	movs	r2, #0
    37b2:	2300      	movs	r3, #0
    37b4:	9006      	str	r0, [sp, #24]
    37b6:	9107      	str	r1, [sp, #28]
    37b8:	002e      	movs	r6, r5
    37ba:	f000 fb65 	bl	3e88 <__aeabi_dcmpeq>
    37be:	2800      	cmp	r0, #0
    37c0:	d100      	bne.n	37c4 <_dtoa_r+0x72c>
    37c2:	e787      	b.n	36d4 <_dtoa_r+0x63c>
    37c4:	e7bb      	b.n	373e <_dtoa_r+0x6a6>
    37c6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    37c8:	2a00      	cmp	r2, #0
    37ca:	d100      	bne.n	37ce <_dtoa_r+0x736>
    37cc:	e087      	b.n	38de <_dtoa_r+0x846>
    37ce:	9a22      	ldr	r2, [sp, #136]	; 0x88
    37d0:	2a01      	cmp	r2, #1
    37d2:	dc6e      	bgt.n	38b2 <_dtoa_r+0x81a>
    37d4:	9a18      	ldr	r2, [sp, #96]	; 0x60
    37d6:	2a00      	cmp	r2, #0
    37d8:	d067      	beq.n	38aa <_dtoa_r+0x812>
    37da:	4ac4      	ldr	r2, [pc, #784]	; (3aec <_dtoa_r+0xa54>)
    37dc:	189b      	adds	r3, r3, r2
    37de:	9d08      	ldr	r5, [sp, #32]
    37e0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    37e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    37e4:	2101      	movs	r1, #1
    37e6:	18d2      	adds	r2, r2, r3
    37e8:	920b      	str	r2, [sp, #44]	; 0x2c
    37ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    37ec:	9804      	ldr	r0, [sp, #16]
    37ee:	18d3      	adds	r3, r2, r3
    37f0:	930c      	str	r3, [sp, #48]	; 0x30
    37f2:	f7ff f920 	bl	2a36 <__i2b>
    37f6:	0006      	movs	r6, r0
    37f8:	2c00      	cmp	r4, #0
    37fa:	dd0e      	ble.n	381a <_dtoa_r+0x782>
    37fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    37fe:	2b00      	cmp	r3, #0
    3800:	dd0b      	ble.n	381a <_dtoa_r+0x782>
    3802:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3804:	0023      	movs	r3, r4
    3806:	4294      	cmp	r4, r2
    3808:	dd00      	ble.n	380c <_dtoa_r+0x774>
    380a:	0013      	movs	r3, r2
    380c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    380e:	1ae4      	subs	r4, r4, r3
    3810:	1ad2      	subs	r2, r2, r3
    3812:	920b      	str	r2, [sp, #44]	; 0x2c
    3814:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3816:	1ad3      	subs	r3, r2, r3
    3818:	930c      	str	r3, [sp, #48]	; 0x30
    381a:	9b08      	ldr	r3, [sp, #32]
    381c:	2b00      	cmp	r3, #0
    381e:	d01e      	beq.n	385e <_dtoa_r+0x7c6>
    3820:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3822:	2b00      	cmp	r3, #0
    3824:	d05f      	beq.n	38e6 <_dtoa_r+0x84e>
    3826:	2d00      	cmp	r5, #0
    3828:	dd11      	ble.n	384e <_dtoa_r+0x7b6>
    382a:	0031      	movs	r1, r6
    382c:	002a      	movs	r2, r5
    382e:	9804      	ldr	r0, [sp, #16]
    3830:	f7ff f99a 	bl	2b68 <__pow5mult>
    3834:	9a05      	ldr	r2, [sp, #20]
    3836:	0001      	movs	r1, r0
    3838:	0006      	movs	r6, r0
    383a:	9804      	ldr	r0, [sp, #16]
    383c:	f7ff f904 	bl	2a48 <__multiply>
    3840:	9905      	ldr	r1, [sp, #20]
    3842:	9010      	str	r0, [sp, #64]	; 0x40
    3844:	9804      	ldr	r0, [sp, #16]
    3846:	f7ff f858 	bl	28fa <_Bfree>
    384a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    384c:	9305      	str	r3, [sp, #20]
    384e:	9b08      	ldr	r3, [sp, #32]
    3850:	1b5a      	subs	r2, r3, r5
    3852:	d004      	beq.n	385e <_dtoa_r+0x7c6>
    3854:	9905      	ldr	r1, [sp, #20]
    3856:	9804      	ldr	r0, [sp, #16]
    3858:	f7ff f986 	bl	2b68 <__pow5mult>
    385c:	9005      	str	r0, [sp, #20]
    385e:	2101      	movs	r1, #1
    3860:	9804      	ldr	r0, [sp, #16]
    3862:	f7ff f8e8 	bl	2a36 <__i2b>
    3866:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3868:	9008      	str	r0, [sp, #32]
    386a:	2b00      	cmp	r3, #0
    386c:	dd3d      	ble.n	38ea <_dtoa_r+0x852>
    386e:	001a      	movs	r2, r3
    3870:	0001      	movs	r1, r0
    3872:	9804      	ldr	r0, [sp, #16]
    3874:	f7ff f978 	bl	2b68 <__pow5mult>
    3878:	9b22      	ldr	r3, [sp, #136]	; 0x88
    387a:	9008      	str	r0, [sp, #32]
    387c:	2500      	movs	r5, #0
    387e:	2b01      	cmp	r3, #1
    3880:	dc3b      	bgt.n	38fa <_dtoa_r+0x862>
    3882:	2500      	movs	r5, #0
    3884:	9b06      	ldr	r3, [sp, #24]
    3886:	42ab      	cmp	r3, r5
    3888:	d133      	bne.n	38f2 <_dtoa_r+0x85a>
    388a:	9b07      	ldr	r3, [sp, #28]
    388c:	031b      	lsls	r3, r3, #12
    388e:	42ab      	cmp	r3, r5
    3890:	d12f      	bne.n	38f2 <_dtoa_r+0x85a>
    3892:	9b19      	ldr	r3, [sp, #100]	; 0x64
    3894:	9a07      	ldr	r2, [sp, #28]
    3896:	4213      	tst	r3, r2
    3898:	d02b      	beq.n	38f2 <_dtoa_r+0x85a>
    389a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    389c:	3501      	adds	r5, #1
    389e:	3301      	adds	r3, #1
    38a0:	930b      	str	r3, [sp, #44]	; 0x2c
    38a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    38a4:	3301      	adds	r3, #1
    38a6:	930c      	str	r3, [sp, #48]	; 0x30
    38a8:	e023      	b.n	38f2 <_dtoa_r+0x85a>
    38aa:	2336      	movs	r3, #54	; 0x36
    38ac:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    38ae:	1a9b      	subs	r3, r3, r2
    38b0:	e795      	b.n	37de <_dtoa_r+0x746>
    38b2:	9b08      	ldr	r3, [sp, #32]
    38b4:	1e7d      	subs	r5, r7, #1
    38b6:	42ab      	cmp	r3, r5
    38b8:	db06      	blt.n	38c8 <_dtoa_r+0x830>
    38ba:	1b5d      	subs	r5, r3, r5
    38bc:	2f00      	cmp	r7, #0
    38be:	da0b      	bge.n	38d8 <_dtoa_r+0x840>
    38c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    38c2:	1bdc      	subs	r4, r3, r7
    38c4:	2300      	movs	r3, #0
    38c6:	e78c      	b.n	37e2 <_dtoa_r+0x74a>
    38c8:	9b08      	ldr	r3, [sp, #32]
    38ca:	9508      	str	r5, [sp, #32]
    38cc:	1aea      	subs	r2, r5, r3
    38ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    38d0:	2500      	movs	r5, #0
    38d2:	189b      	adds	r3, r3, r2
    38d4:	930f      	str	r3, [sp, #60]	; 0x3c
    38d6:	e7f1      	b.n	38bc <_dtoa_r+0x824>
    38d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    38da:	003b      	movs	r3, r7
    38dc:	e781      	b.n	37e2 <_dtoa_r+0x74a>
    38de:	9d08      	ldr	r5, [sp, #32]
    38e0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    38e2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    38e4:	e788      	b.n	37f8 <_dtoa_r+0x760>
    38e6:	9a08      	ldr	r2, [sp, #32]
    38e8:	e7b4      	b.n	3854 <_dtoa_r+0x7bc>
    38ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
    38ec:	2500      	movs	r5, #0
    38ee:	2b01      	cmp	r3, #1
    38f0:	ddc7      	ble.n	3882 <_dtoa_r+0x7ea>
    38f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    38f4:	2001      	movs	r0, #1
    38f6:	2b00      	cmp	r3, #0
    38f8:	d00b      	beq.n	3912 <_dtoa_r+0x87a>
    38fa:	9b08      	ldr	r3, [sp, #32]
    38fc:	9a08      	ldr	r2, [sp, #32]
    38fe:	691b      	ldr	r3, [r3, #16]
    3900:	930f      	str	r3, [sp, #60]	; 0x3c
    3902:	3303      	adds	r3, #3
    3904:	009b      	lsls	r3, r3, #2
    3906:	18d3      	adds	r3, r2, r3
    3908:	6858      	ldr	r0, [r3, #4]
    390a:	f7ff f84b 	bl	29a4 <__hi0bits>
    390e:	2320      	movs	r3, #32
    3910:	1a18      	subs	r0, r3, r0
    3912:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3914:	18c0      	adds	r0, r0, r3
    3916:	231f      	movs	r3, #31
    3918:	4018      	ands	r0, r3
    391a:	d100      	bne.n	391e <_dtoa_r+0x886>
    391c:	e0ab      	b.n	3a76 <_dtoa_r+0x9de>
    391e:	3301      	adds	r3, #1
    3920:	1a1b      	subs	r3, r3, r0
    3922:	2b04      	cmp	r3, #4
    3924:	dc00      	bgt.n	3928 <_dtoa_r+0x890>
    3926:	e09b      	b.n	3a60 <_dtoa_r+0x9c8>
    3928:	231c      	movs	r3, #28
    392a:	1a18      	subs	r0, r3, r0
    392c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    392e:	1824      	adds	r4, r4, r0
    3930:	181b      	adds	r3, r3, r0
    3932:	930b      	str	r3, [sp, #44]	; 0x2c
    3934:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3936:	181b      	adds	r3, r3, r0
    3938:	930c      	str	r3, [sp, #48]	; 0x30
    393a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    393c:	2b00      	cmp	r3, #0
    393e:	dd05      	ble.n	394c <_dtoa_r+0x8b4>
    3940:	001a      	movs	r2, r3
    3942:	9905      	ldr	r1, [sp, #20]
    3944:	9804      	ldr	r0, [sp, #16]
    3946:	f7ff f961 	bl	2c0c <__lshift>
    394a:	9005      	str	r0, [sp, #20]
    394c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    394e:	2b00      	cmp	r3, #0
    3950:	dd05      	ble.n	395e <_dtoa_r+0x8c6>
    3952:	001a      	movs	r2, r3
    3954:	9908      	ldr	r1, [sp, #32]
    3956:	9804      	ldr	r0, [sp, #16]
    3958:	f7ff f958 	bl	2c0c <__lshift>
    395c:	9008      	str	r0, [sp, #32]
    395e:	9b16      	ldr	r3, [sp, #88]	; 0x58
    3960:	2b00      	cmp	r3, #0
    3962:	d100      	bne.n	3966 <_dtoa_r+0x8ce>
    3964:	e089      	b.n	3a7a <_dtoa_r+0x9e2>
    3966:	9908      	ldr	r1, [sp, #32]
    3968:	9805      	ldr	r0, [sp, #20]
    396a:	f7ff f9a0 	bl	2cae <__mcmp>
    396e:	2800      	cmp	r0, #0
    3970:	db00      	blt.n	3974 <_dtoa_r+0x8dc>
    3972:	e082      	b.n	3a7a <_dtoa_r+0x9e2>
    3974:	9b03      	ldr	r3, [sp, #12]
    3976:	220a      	movs	r2, #10
    3978:	3b01      	subs	r3, #1
    397a:	9303      	str	r3, [sp, #12]
    397c:	9905      	ldr	r1, [sp, #20]
    397e:	2300      	movs	r3, #0
    3980:	9804      	ldr	r0, [sp, #16]
    3982:	f7fe ffd3 	bl	292c <__multadd>
    3986:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3988:	9005      	str	r0, [sp, #20]
    398a:	2b00      	cmp	r3, #0
    398c:	d100      	bne.n	3990 <_dtoa_r+0x8f8>
    398e:	e15d      	b.n	3c4c <_dtoa_r+0xbb4>
    3990:	2300      	movs	r3, #0
    3992:	0031      	movs	r1, r6
    3994:	220a      	movs	r2, #10
    3996:	9804      	ldr	r0, [sp, #16]
    3998:	f7fe ffc8 	bl	292c <__multadd>
    399c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    399e:	0006      	movs	r6, r0
    39a0:	2b00      	cmp	r3, #0
    39a2:	dc02      	bgt.n	39aa <_dtoa_r+0x912>
    39a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    39a6:	2b02      	cmp	r3, #2
    39a8:	dc6d      	bgt.n	3a86 <_dtoa_r+0x9ee>
    39aa:	2c00      	cmp	r4, #0
    39ac:	dd05      	ble.n	39ba <_dtoa_r+0x922>
    39ae:	0031      	movs	r1, r6
    39b0:	0022      	movs	r2, r4
    39b2:	9804      	ldr	r0, [sp, #16]
    39b4:	f7ff f92a 	bl	2c0c <__lshift>
    39b8:	0006      	movs	r6, r0
    39ba:	0030      	movs	r0, r6
    39bc:	2d00      	cmp	r5, #0
    39be:	d011      	beq.n	39e4 <_dtoa_r+0x94c>
    39c0:	6871      	ldr	r1, [r6, #4]
    39c2:	9804      	ldr	r0, [sp, #16]
    39c4:	f7fe ff61 	bl	288a <_Balloc>
    39c8:	0031      	movs	r1, r6
    39ca:	0004      	movs	r4, r0
    39cc:	6933      	ldr	r3, [r6, #16]
    39ce:	310c      	adds	r1, #12
    39d0:	1c9a      	adds	r2, r3, #2
    39d2:	0092      	lsls	r2, r2, #2
    39d4:	300c      	adds	r0, #12
    39d6:	f7fe ff4f 	bl	2878 <memcpy>
    39da:	2201      	movs	r2, #1
    39dc:	0021      	movs	r1, r4
    39de:	9804      	ldr	r0, [sp, #16]
    39e0:	f7ff f914 	bl	2c0c <__lshift>
    39e4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    39e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    39e8:	3f01      	subs	r7, #1
    39ea:	930b      	str	r3, [sp, #44]	; 0x2c
    39ec:	19db      	adds	r3, r3, r7
    39ee:	0037      	movs	r7, r6
    39f0:	0006      	movs	r6, r0
    39f2:	930f      	str	r3, [sp, #60]	; 0x3c
    39f4:	9908      	ldr	r1, [sp, #32]
    39f6:	9805      	ldr	r0, [sp, #20]
    39f8:	f7ff faca 	bl	2f90 <quorem>
    39fc:	0039      	movs	r1, r7
    39fe:	900d      	str	r0, [sp, #52]	; 0x34
    3a00:	0004      	movs	r4, r0
    3a02:	9805      	ldr	r0, [sp, #20]
    3a04:	f7ff f953 	bl	2cae <__mcmp>
    3a08:	0032      	movs	r2, r6
    3a0a:	900e      	str	r0, [sp, #56]	; 0x38
    3a0c:	9908      	ldr	r1, [sp, #32]
    3a0e:	9804      	ldr	r0, [sp, #16]
    3a10:	f7ff f966 	bl	2ce0 <__mdiff>
    3a14:	2301      	movs	r3, #1
    3a16:	930c      	str	r3, [sp, #48]	; 0x30
    3a18:	68c3      	ldr	r3, [r0, #12]
    3a1a:	3430      	adds	r4, #48	; 0x30
    3a1c:	0005      	movs	r5, r0
    3a1e:	2b00      	cmp	r3, #0
    3a20:	d104      	bne.n	3a2c <_dtoa_r+0x994>
    3a22:	0001      	movs	r1, r0
    3a24:	9805      	ldr	r0, [sp, #20]
    3a26:	f7ff f942 	bl	2cae <__mcmp>
    3a2a:	900c      	str	r0, [sp, #48]	; 0x30
    3a2c:	0029      	movs	r1, r5
    3a2e:	9804      	ldr	r0, [sp, #16]
    3a30:	f7fe ff63 	bl	28fa <_Bfree>
    3a34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3a36:	9a22      	ldr	r2, [sp, #136]	; 0x88
    3a38:	4313      	orrs	r3, r2
    3a3a:	d000      	beq.n	3a3e <_dtoa_r+0x9a6>
    3a3c:	e089      	b.n	3b52 <_dtoa_r+0xaba>
    3a3e:	9a06      	ldr	r2, [sp, #24]
    3a40:	3301      	adds	r3, #1
    3a42:	4213      	tst	r3, r2
    3a44:	d000      	beq.n	3a48 <_dtoa_r+0x9b0>
    3a46:	e084      	b.n	3b52 <_dtoa_r+0xaba>
    3a48:	2c39      	cmp	r4, #57	; 0x39
    3a4a:	d100      	bne.n	3a4e <_dtoa_r+0x9b6>
    3a4c:	e0a3      	b.n	3b96 <_dtoa_r+0xafe>
    3a4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3a50:	2b00      	cmp	r3, #0
    3a52:	dd01      	ble.n	3a58 <_dtoa_r+0x9c0>
    3a54:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    3a56:	3431      	adds	r4, #49	; 0x31
    3a58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3a5a:	1c5d      	adds	r5, r3, #1
    3a5c:	701c      	strb	r4, [r3, #0]
    3a5e:	e027      	b.n	3ab0 <_dtoa_r+0xa18>
    3a60:	2b04      	cmp	r3, #4
    3a62:	d100      	bne.n	3a66 <_dtoa_r+0x9ce>
    3a64:	e769      	b.n	393a <_dtoa_r+0x8a2>
    3a66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3a68:	331c      	adds	r3, #28
    3a6a:	18d2      	adds	r2, r2, r3
    3a6c:	920b      	str	r2, [sp, #44]	; 0x2c
    3a6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3a70:	18e4      	adds	r4, r4, r3
    3a72:	18d3      	adds	r3, r2, r3
    3a74:	e760      	b.n	3938 <_dtoa_r+0x8a0>
    3a76:	0003      	movs	r3, r0
    3a78:	e7f5      	b.n	3a66 <_dtoa_r+0x9ce>
    3a7a:	2f00      	cmp	r7, #0
    3a7c:	dc3c      	bgt.n	3af8 <_dtoa_r+0xa60>
    3a7e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3a80:	2b02      	cmp	r3, #2
    3a82:	dd39      	ble.n	3af8 <_dtoa_r+0xa60>
    3a84:	970d      	str	r7, [sp, #52]	; 0x34
    3a86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3a88:	2b00      	cmp	r3, #0
    3a8a:	d10c      	bne.n	3aa6 <_dtoa_r+0xa0e>
    3a8c:	9908      	ldr	r1, [sp, #32]
    3a8e:	2205      	movs	r2, #5
    3a90:	9804      	ldr	r0, [sp, #16]
    3a92:	f7fe ff4b 	bl	292c <__multadd>
    3a96:	9008      	str	r0, [sp, #32]
    3a98:	0001      	movs	r1, r0
    3a9a:	9805      	ldr	r0, [sp, #20]
    3a9c:	f7ff f907 	bl	2cae <__mcmp>
    3aa0:	2800      	cmp	r0, #0
    3aa2:	dd00      	ble.n	3aa6 <_dtoa_r+0xa0e>
    3aa4:	e55a      	b.n	355c <_dtoa_r+0x4c4>
    3aa6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3aa8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    3aaa:	43db      	mvns	r3, r3
    3aac:	9303      	str	r3, [sp, #12]
    3aae:	2700      	movs	r7, #0
    3ab0:	9908      	ldr	r1, [sp, #32]
    3ab2:	9804      	ldr	r0, [sp, #16]
    3ab4:	f7fe ff21 	bl	28fa <_Bfree>
    3ab8:	2e00      	cmp	r6, #0
    3aba:	d100      	bne.n	3abe <_dtoa_r+0xa26>
    3abc:	e63f      	b.n	373e <_dtoa_r+0x6a6>
    3abe:	2f00      	cmp	r7, #0
    3ac0:	d005      	beq.n	3ace <_dtoa_r+0xa36>
    3ac2:	42b7      	cmp	r7, r6
    3ac4:	d003      	beq.n	3ace <_dtoa_r+0xa36>
    3ac6:	0039      	movs	r1, r7
    3ac8:	9804      	ldr	r0, [sp, #16]
    3aca:	f7fe ff16 	bl	28fa <_Bfree>
    3ace:	0031      	movs	r1, r6
    3ad0:	9804      	ldr	r0, [sp, #16]
    3ad2:	f7fe ff12 	bl	28fa <_Bfree>
    3ad6:	e632      	b.n	373e <_dtoa_r+0x6a6>
    3ad8:	9508      	str	r5, [sp, #32]
    3ada:	002e      	movs	r6, r5
    3adc:	e7e3      	b.n	3aa6 <_dtoa_r+0xa0e>
    3ade:	2300      	movs	r3, #0
    3ae0:	9308      	str	r3, [sp, #32]
    3ae2:	001e      	movs	r6, r3
    3ae4:	e7df      	b.n	3aa6 <_dtoa_r+0xa0e>
    3ae6:	46c0      	nop			; (mov r8, r8)
    3ae8:	40240000 	.word	0x40240000
    3aec:	00000433 	.word	0x00000433
    3af0:	9603      	str	r6, [sp, #12]
    3af2:	9508      	str	r5, [sp, #32]
    3af4:	002e      	movs	r6, r5
    3af6:	e531      	b.n	355c <_dtoa_r+0x4c4>
    3af8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3afa:	970d      	str	r7, [sp, #52]	; 0x34
    3afc:	2b00      	cmp	r3, #0
    3afe:	d000      	beq.n	3b02 <_dtoa_r+0xa6a>
    3b00:	e753      	b.n	39aa <_dtoa_r+0x912>
    3b02:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    3b04:	9908      	ldr	r1, [sp, #32]
    3b06:	9805      	ldr	r0, [sp, #20]
    3b08:	f7ff fa42 	bl	2f90 <quorem>
    3b0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3b0e:	3030      	adds	r0, #48	; 0x30
    3b10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    3b12:	7028      	strb	r0, [r5, #0]
    3b14:	3501      	adds	r5, #1
    3b16:	0004      	movs	r4, r0
    3b18:	1aeb      	subs	r3, r5, r3
    3b1a:	429a      	cmp	r2, r3
    3b1c:	dc78      	bgt.n	3c10 <_dtoa_r+0xb78>
    3b1e:	1e15      	subs	r5, r2, #0
    3b20:	dc00      	bgt.n	3b24 <_dtoa_r+0xa8c>
    3b22:	2501      	movs	r5, #1
    3b24:	2700      	movs	r7, #0
    3b26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3b28:	195d      	adds	r5, r3, r5
    3b2a:	9905      	ldr	r1, [sp, #20]
    3b2c:	2201      	movs	r2, #1
    3b2e:	9804      	ldr	r0, [sp, #16]
    3b30:	f7ff f86c 	bl	2c0c <__lshift>
    3b34:	9908      	ldr	r1, [sp, #32]
    3b36:	9005      	str	r0, [sp, #20]
    3b38:	f7ff f8b9 	bl	2cae <__mcmp>
    3b3c:	2800      	cmp	r0, #0
    3b3e:	dc2f      	bgt.n	3ba0 <_dtoa_r+0xb08>
    3b40:	d101      	bne.n	3b46 <_dtoa_r+0xaae>
    3b42:	07e3      	lsls	r3, r4, #31
    3b44:	d42c      	bmi.n	3ba0 <_dtoa_r+0xb08>
    3b46:	1e6b      	subs	r3, r5, #1
    3b48:	781a      	ldrb	r2, [r3, #0]
    3b4a:	2a30      	cmp	r2, #48	; 0x30
    3b4c:	d1b0      	bne.n	3ab0 <_dtoa_r+0xa18>
    3b4e:	001d      	movs	r5, r3
    3b50:	e7f9      	b.n	3b46 <_dtoa_r+0xaae>
    3b52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3b54:	2b00      	cmp	r3, #0
    3b56:	db07      	blt.n	3b68 <_dtoa_r+0xad0>
    3b58:	001d      	movs	r5, r3
    3b5a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3b5c:	431d      	orrs	r5, r3
    3b5e:	d126      	bne.n	3bae <_dtoa_r+0xb16>
    3b60:	2301      	movs	r3, #1
    3b62:	9a06      	ldr	r2, [sp, #24]
    3b64:	4213      	tst	r3, r2
    3b66:	d122      	bne.n	3bae <_dtoa_r+0xb16>
    3b68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3b6a:	2b00      	cmp	r3, #0
    3b6c:	dc00      	bgt.n	3b70 <_dtoa_r+0xad8>
    3b6e:	e773      	b.n	3a58 <_dtoa_r+0x9c0>
    3b70:	9905      	ldr	r1, [sp, #20]
    3b72:	2201      	movs	r2, #1
    3b74:	9804      	ldr	r0, [sp, #16]
    3b76:	f7ff f849 	bl	2c0c <__lshift>
    3b7a:	9908      	ldr	r1, [sp, #32]
    3b7c:	9005      	str	r0, [sp, #20]
    3b7e:	f7ff f896 	bl	2cae <__mcmp>
    3b82:	2800      	cmp	r0, #0
    3b84:	dc04      	bgt.n	3b90 <_dtoa_r+0xaf8>
    3b86:	d000      	beq.n	3b8a <_dtoa_r+0xaf2>
    3b88:	e766      	b.n	3a58 <_dtoa_r+0x9c0>
    3b8a:	07e3      	lsls	r3, r4, #31
    3b8c:	d400      	bmi.n	3b90 <_dtoa_r+0xaf8>
    3b8e:	e763      	b.n	3a58 <_dtoa_r+0x9c0>
    3b90:	2c39      	cmp	r4, #57	; 0x39
    3b92:	d000      	beq.n	3b96 <_dtoa_r+0xafe>
    3b94:	e75e      	b.n	3a54 <_dtoa_r+0x9bc>
    3b96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3b98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3b9a:	1c5d      	adds	r5, r3, #1
    3b9c:	2339      	movs	r3, #57	; 0x39
    3b9e:	7013      	strb	r3, [r2, #0]
    3ba0:	1e6b      	subs	r3, r5, #1
    3ba2:	781a      	ldrb	r2, [r3, #0]
    3ba4:	2a39      	cmp	r2, #57	; 0x39
    3ba6:	d03b      	beq.n	3c20 <_dtoa_r+0xb88>
    3ba8:	3201      	adds	r2, #1
    3baa:	701a      	strb	r2, [r3, #0]
    3bac:	e780      	b.n	3ab0 <_dtoa_r+0xa18>
    3bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3bb0:	3301      	adds	r3, #1
    3bb2:	930d      	str	r3, [sp, #52]	; 0x34
    3bb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3bb6:	2b00      	cmp	r3, #0
    3bb8:	dd05      	ble.n	3bc6 <_dtoa_r+0xb2e>
    3bba:	2c39      	cmp	r4, #57	; 0x39
    3bbc:	d0eb      	beq.n	3b96 <_dtoa_r+0xafe>
    3bbe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    3bc0:	3401      	adds	r4, #1
    3bc2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3bc4:	e74a      	b.n	3a5c <_dtoa_r+0x9c4>
    3bc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3bc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    3bca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    3bcc:	701c      	strb	r4, [r3, #0]
    3bce:	4293      	cmp	r3, r2
    3bd0:	d0ab      	beq.n	3b2a <_dtoa_r+0xa92>
    3bd2:	2300      	movs	r3, #0
    3bd4:	220a      	movs	r2, #10
    3bd6:	9905      	ldr	r1, [sp, #20]
    3bd8:	9804      	ldr	r0, [sp, #16]
    3bda:	f7fe fea7 	bl	292c <__multadd>
    3bde:	2300      	movs	r3, #0
    3be0:	9005      	str	r0, [sp, #20]
    3be2:	220a      	movs	r2, #10
    3be4:	0039      	movs	r1, r7
    3be6:	9804      	ldr	r0, [sp, #16]
    3be8:	42b7      	cmp	r7, r6
    3bea:	d106      	bne.n	3bfa <_dtoa_r+0xb62>
    3bec:	f7fe fe9e 	bl	292c <__multadd>
    3bf0:	0007      	movs	r7, r0
    3bf2:	0006      	movs	r6, r0
    3bf4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3bf6:	930b      	str	r3, [sp, #44]	; 0x2c
    3bf8:	e6fc      	b.n	39f4 <_dtoa_r+0x95c>
    3bfa:	f7fe fe97 	bl	292c <__multadd>
    3bfe:	0031      	movs	r1, r6
    3c00:	0007      	movs	r7, r0
    3c02:	2300      	movs	r3, #0
    3c04:	220a      	movs	r2, #10
    3c06:	9804      	ldr	r0, [sp, #16]
    3c08:	f7fe fe90 	bl	292c <__multadd>
    3c0c:	0006      	movs	r6, r0
    3c0e:	e7f1      	b.n	3bf4 <_dtoa_r+0xb5c>
    3c10:	2300      	movs	r3, #0
    3c12:	220a      	movs	r2, #10
    3c14:	9905      	ldr	r1, [sp, #20]
    3c16:	9804      	ldr	r0, [sp, #16]
    3c18:	f7fe fe88 	bl	292c <__multadd>
    3c1c:	9005      	str	r0, [sp, #20]
    3c1e:	e771      	b.n	3b04 <_dtoa_r+0xa6c>
    3c20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3c22:	429a      	cmp	r2, r3
    3c24:	d105      	bne.n	3c32 <_dtoa_r+0xb9a>
    3c26:	9b03      	ldr	r3, [sp, #12]
    3c28:	3301      	adds	r3, #1
    3c2a:	9303      	str	r3, [sp, #12]
    3c2c:	2331      	movs	r3, #49	; 0x31
    3c2e:	7013      	strb	r3, [r2, #0]
    3c30:	e73e      	b.n	3ab0 <_dtoa_r+0xa18>
    3c32:	001d      	movs	r5, r3
    3c34:	e7b4      	b.n	3ba0 <_dtoa_r+0xb08>
    3c36:	4b0a      	ldr	r3, [pc, #40]	; (3c60 <_dtoa_r+0xbc8>)
    3c38:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3c3a:	930a      	str	r3, [sp, #40]	; 0x28
    3c3c:	4b09      	ldr	r3, [pc, #36]	; (3c64 <_dtoa_r+0xbcc>)
    3c3e:	2a00      	cmp	r2, #0
    3c40:	d001      	beq.n	3c46 <_dtoa_r+0xbae>
    3c42:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3c44:	6013      	str	r3, [r2, #0]
    3c46:	980a      	ldr	r0, [sp, #40]	; 0x28
    3c48:	b01d      	add	sp, #116	; 0x74
    3c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3c4e:	2b00      	cmp	r3, #0
    3c50:	dd00      	ble.n	3c54 <_dtoa_r+0xbbc>
    3c52:	e756      	b.n	3b02 <_dtoa_r+0xa6a>
    3c54:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3c56:	2b02      	cmp	r3, #2
    3c58:	dc00      	bgt.n	3c5c <_dtoa_r+0xbc4>
    3c5a:	e752      	b.n	3b02 <_dtoa_r+0xa6a>
    3c5c:	e713      	b.n	3a86 <_dtoa_r+0x9ee>
    3c5e:	46c0      	nop			; (mov r8, r8)
    3c60:	00005024 	.word	0x00005024
    3c64:	0000502c 	.word	0x0000502c

00003c68 <malloc>:
    3c68:	b510      	push	{r4, lr}
    3c6a:	4b03      	ldr	r3, [pc, #12]	; (3c78 <malloc+0x10>)
    3c6c:	0001      	movs	r1, r0
    3c6e:	6818      	ldr	r0, [r3, #0]
    3c70:	f7ff f916 	bl	2ea0 <_malloc_r>
    3c74:	bd10      	pop	{r4, pc}
    3c76:	46c0      	nop			; (mov r8, r8)
    3c78:	20000008 	.word	0x20000008

00003c7c <__malloc_lock>:
    3c7c:	4770      	bx	lr

00003c7e <__malloc_unlock>:
    3c7e:	4770      	bx	lr

00003c80 <__gnu_thumb1_case_uqi>:
    3c80:	b402      	push	{r1}
    3c82:	4671      	mov	r1, lr
    3c84:	0849      	lsrs	r1, r1, #1
    3c86:	0049      	lsls	r1, r1, #1
    3c88:	5c09      	ldrb	r1, [r1, r0]
    3c8a:	0049      	lsls	r1, r1, #1
    3c8c:	448e      	add	lr, r1
    3c8e:	bc02      	pop	{r1}
    3c90:	4770      	bx	lr
    3c92:	46c0      	nop			; (mov r8, r8)

00003c94 <__divsi3>:
    3c94:	4603      	mov	r3, r0
    3c96:	430b      	orrs	r3, r1
    3c98:	d47f      	bmi.n	3d9a <__divsi3+0x106>
    3c9a:	2200      	movs	r2, #0
    3c9c:	0843      	lsrs	r3, r0, #1
    3c9e:	428b      	cmp	r3, r1
    3ca0:	d374      	bcc.n	3d8c <__divsi3+0xf8>
    3ca2:	0903      	lsrs	r3, r0, #4
    3ca4:	428b      	cmp	r3, r1
    3ca6:	d35f      	bcc.n	3d68 <__divsi3+0xd4>
    3ca8:	0a03      	lsrs	r3, r0, #8
    3caa:	428b      	cmp	r3, r1
    3cac:	d344      	bcc.n	3d38 <__divsi3+0xa4>
    3cae:	0b03      	lsrs	r3, r0, #12
    3cb0:	428b      	cmp	r3, r1
    3cb2:	d328      	bcc.n	3d06 <__divsi3+0x72>
    3cb4:	0c03      	lsrs	r3, r0, #16
    3cb6:	428b      	cmp	r3, r1
    3cb8:	d30d      	bcc.n	3cd6 <__divsi3+0x42>
    3cba:	22ff      	movs	r2, #255	; 0xff
    3cbc:	0209      	lsls	r1, r1, #8
    3cbe:	ba12      	rev	r2, r2
    3cc0:	0c03      	lsrs	r3, r0, #16
    3cc2:	428b      	cmp	r3, r1
    3cc4:	d302      	bcc.n	3ccc <__divsi3+0x38>
    3cc6:	1212      	asrs	r2, r2, #8
    3cc8:	0209      	lsls	r1, r1, #8
    3cca:	d065      	beq.n	3d98 <__divsi3+0x104>
    3ccc:	0b03      	lsrs	r3, r0, #12
    3cce:	428b      	cmp	r3, r1
    3cd0:	d319      	bcc.n	3d06 <__divsi3+0x72>
    3cd2:	e000      	b.n	3cd6 <__divsi3+0x42>
    3cd4:	0a09      	lsrs	r1, r1, #8
    3cd6:	0bc3      	lsrs	r3, r0, #15
    3cd8:	428b      	cmp	r3, r1
    3cda:	d301      	bcc.n	3ce0 <__divsi3+0x4c>
    3cdc:	03cb      	lsls	r3, r1, #15
    3cde:	1ac0      	subs	r0, r0, r3
    3ce0:	4152      	adcs	r2, r2
    3ce2:	0b83      	lsrs	r3, r0, #14
    3ce4:	428b      	cmp	r3, r1
    3ce6:	d301      	bcc.n	3cec <__divsi3+0x58>
    3ce8:	038b      	lsls	r3, r1, #14
    3cea:	1ac0      	subs	r0, r0, r3
    3cec:	4152      	adcs	r2, r2
    3cee:	0b43      	lsrs	r3, r0, #13
    3cf0:	428b      	cmp	r3, r1
    3cf2:	d301      	bcc.n	3cf8 <__divsi3+0x64>
    3cf4:	034b      	lsls	r3, r1, #13
    3cf6:	1ac0      	subs	r0, r0, r3
    3cf8:	4152      	adcs	r2, r2
    3cfa:	0b03      	lsrs	r3, r0, #12
    3cfc:	428b      	cmp	r3, r1
    3cfe:	d301      	bcc.n	3d04 <__divsi3+0x70>
    3d00:	030b      	lsls	r3, r1, #12
    3d02:	1ac0      	subs	r0, r0, r3
    3d04:	4152      	adcs	r2, r2
    3d06:	0ac3      	lsrs	r3, r0, #11
    3d08:	428b      	cmp	r3, r1
    3d0a:	d301      	bcc.n	3d10 <__divsi3+0x7c>
    3d0c:	02cb      	lsls	r3, r1, #11
    3d0e:	1ac0      	subs	r0, r0, r3
    3d10:	4152      	adcs	r2, r2
    3d12:	0a83      	lsrs	r3, r0, #10
    3d14:	428b      	cmp	r3, r1
    3d16:	d301      	bcc.n	3d1c <__divsi3+0x88>
    3d18:	028b      	lsls	r3, r1, #10
    3d1a:	1ac0      	subs	r0, r0, r3
    3d1c:	4152      	adcs	r2, r2
    3d1e:	0a43      	lsrs	r3, r0, #9
    3d20:	428b      	cmp	r3, r1
    3d22:	d301      	bcc.n	3d28 <__divsi3+0x94>
    3d24:	024b      	lsls	r3, r1, #9
    3d26:	1ac0      	subs	r0, r0, r3
    3d28:	4152      	adcs	r2, r2
    3d2a:	0a03      	lsrs	r3, r0, #8
    3d2c:	428b      	cmp	r3, r1
    3d2e:	d301      	bcc.n	3d34 <__divsi3+0xa0>
    3d30:	020b      	lsls	r3, r1, #8
    3d32:	1ac0      	subs	r0, r0, r3
    3d34:	4152      	adcs	r2, r2
    3d36:	d2cd      	bcs.n	3cd4 <__divsi3+0x40>
    3d38:	09c3      	lsrs	r3, r0, #7
    3d3a:	428b      	cmp	r3, r1
    3d3c:	d301      	bcc.n	3d42 <__divsi3+0xae>
    3d3e:	01cb      	lsls	r3, r1, #7
    3d40:	1ac0      	subs	r0, r0, r3
    3d42:	4152      	adcs	r2, r2
    3d44:	0983      	lsrs	r3, r0, #6
    3d46:	428b      	cmp	r3, r1
    3d48:	d301      	bcc.n	3d4e <__divsi3+0xba>
    3d4a:	018b      	lsls	r3, r1, #6
    3d4c:	1ac0      	subs	r0, r0, r3
    3d4e:	4152      	adcs	r2, r2
    3d50:	0943      	lsrs	r3, r0, #5
    3d52:	428b      	cmp	r3, r1
    3d54:	d301      	bcc.n	3d5a <__divsi3+0xc6>
    3d56:	014b      	lsls	r3, r1, #5
    3d58:	1ac0      	subs	r0, r0, r3
    3d5a:	4152      	adcs	r2, r2
    3d5c:	0903      	lsrs	r3, r0, #4
    3d5e:	428b      	cmp	r3, r1
    3d60:	d301      	bcc.n	3d66 <__divsi3+0xd2>
    3d62:	010b      	lsls	r3, r1, #4
    3d64:	1ac0      	subs	r0, r0, r3
    3d66:	4152      	adcs	r2, r2
    3d68:	08c3      	lsrs	r3, r0, #3
    3d6a:	428b      	cmp	r3, r1
    3d6c:	d301      	bcc.n	3d72 <__divsi3+0xde>
    3d6e:	00cb      	lsls	r3, r1, #3
    3d70:	1ac0      	subs	r0, r0, r3
    3d72:	4152      	adcs	r2, r2
    3d74:	0883      	lsrs	r3, r0, #2
    3d76:	428b      	cmp	r3, r1
    3d78:	d301      	bcc.n	3d7e <__divsi3+0xea>
    3d7a:	008b      	lsls	r3, r1, #2
    3d7c:	1ac0      	subs	r0, r0, r3
    3d7e:	4152      	adcs	r2, r2
    3d80:	0843      	lsrs	r3, r0, #1
    3d82:	428b      	cmp	r3, r1
    3d84:	d301      	bcc.n	3d8a <__divsi3+0xf6>
    3d86:	004b      	lsls	r3, r1, #1
    3d88:	1ac0      	subs	r0, r0, r3
    3d8a:	4152      	adcs	r2, r2
    3d8c:	1a41      	subs	r1, r0, r1
    3d8e:	d200      	bcs.n	3d92 <__divsi3+0xfe>
    3d90:	4601      	mov	r1, r0
    3d92:	4152      	adcs	r2, r2
    3d94:	4610      	mov	r0, r2
    3d96:	4770      	bx	lr
    3d98:	e05d      	b.n	3e56 <__divsi3+0x1c2>
    3d9a:	0fca      	lsrs	r2, r1, #31
    3d9c:	d000      	beq.n	3da0 <__divsi3+0x10c>
    3d9e:	4249      	negs	r1, r1
    3da0:	1003      	asrs	r3, r0, #32
    3da2:	d300      	bcc.n	3da6 <__divsi3+0x112>
    3da4:	4240      	negs	r0, r0
    3da6:	4053      	eors	r3, r2
    3da8:	2200      	movs	r2, #0
    3daa:	469c      	mov	ip, r3
    3dac:	0903      	lsrs	r3, r0, #4
    3dae:	428b      	cmp	r3, r1
    3db0:	d32d      	bcc.n	3e0e <__divsi3+0x17a>
    3db2:	0a03      	lsrs	r3, r0, #8
    3db4:	428b      	cmp	r3, r1
    3db6:	d312      	bcc.n	3dde <__divsi3+0x14a>
    3db8:	22fc      	movs	r2, #252	; 0xfc
    3dba:	0189      	lsls	r1, r1, #6
    3dbc:	ba12      	rev	r2, r2
    3dbe:	0a03      	lsrs	r3, r0, #8
    3dc0:	428b      	cmp	r3, r1
    3dc2:	d30c      	bcc.n	3dde <__divsi3+0x14a>
    3dc4:	0189      	lsls	r1, r1, #6
    3dc6:	1192      	asrs	r2, r2, #6
    3dc8:	428b      	cmp	r3, r1
    3dca:	d308      	bcc.n	3dde <__divsi3+0x14a>
    3dcc:	0189      	lsls	r1, r1, #6
    3dce:	1192      	asrs	r2, r2, #6
    3dd0:	428b      	cmp	r3, r1
    3dd2:	d304      	bcc.n	3dde <__divsi3+0x14a>
    3dd4:	0189      	lsls	r1, r1, #6
    3dd6:	d03a      	beq.n	3e4e <__divsi3+0x1ba>
    3dd8:	1192      	asrs	r2, r2, #6
    3dda:	e000      	b.n	3dde <__divsi3+0x14a>
    3ddc:	0989      	lsrs	r1, r1, #6
    3dde:	09c3      	lsrs	r3, r0, #7
    3de0:	428b      	cmp	r3, r1
    3de2:	d301      	bcc.n	3de8 <__divsi3+0x154>
    3de4:	01cb      	lsls	r3, r1, #7
    3de6:	1ac0      	subs	r0, r0, r3
    3de8:	4152      	adcs	r2, r2
    3dea:	0983      	lsrs	r3, r0, #6
    3dec:	428b      	cmp	r3, r1
    3dee:	d301      	bcc.n	3df4 <__divsi3+0x160>
    3df0:	018b      	lsls	r3, r1, #6
    3df2:	1ac0      	subs	r0, r0, r3
    3df4:	4152      	adcs	r2, r2
    3df6:	0943      	lsrs	r3, r0, #5
    3df8:	428b      	cmp	r3, r1
    3dfa:	d301      	bcc.n	3e00 <__divsi3+0x16c>
    3dfc:	014b      	lsls	r3, r1, #5
    3dfe:	1ac0      	subs	r0, r0, r3
    3e00:	4152      	adcs	r2, r2
    3e02:	0903      	lsrs	r3, r0, #4
    3e04:	428b      	cmp	r3, r1
    3e06:	d301      	bcc.n	3e0c <__divsi3+0x178>
    3e08:	010b      	lsls	r3, r1, #4
    3e0a:	1ac0      	subs	r0, r0, r3
    3e0c:	4152      	adcs	r2, r2
    3e0e:	08c3      	lsrs	r3, r0, #3
    3e10:	428b      	cmp	r3, r1
    3e12:	d301      	bcc.n	3e18 <__divsi3+0x184>
    3e14:	00cb      	lsls	r3, r1, #3
    3e16:	1ac0      	subs	r0, r0, r3
    3e18:	4152      	adcs	r2, r2
    3e1a:	0883      	lsrs	r3, r0, #2
    3e1c:	428b      	cmp	r3, r1
    3e1e:	d301      	bcc.n	3e24 <__divsi3+0x190>
    3e20:	008b      	lsls	r3, r1, #2
    3e22:	1ac0      	subs	r0, r0, r3
    3e24:	4152      	adcs	r2, r2
    3e26:	d2d9      	bcs.n	3ddc <__divsi3+0x148>
    3e28:	0843      	lsrs	r3, r0, #1
    3e2a:	428b      	cmp	r3, r1
    3e2c:	d301      	bcc.n	3e32 <__divsi3+0x19e>
    3e2e:	004b      	lsls	r3, r1, #1
    3e30:	1ac0      	subs	r0, r0, r3
    3e32:	4152      	adcs	r2, r2
    3e34:	1a41      	subs	r1, r0, r1
    3e36:	d200      	bcs.n	3e3a <__divsi3+0x1a6>
    3e38:	4601      	mov	r1, r0
    3e3a:	4663      	mov	r3, ip
    3e3c:	4152      	adcs	r2, r2
    3e3e:	105b      	asrs	r3, r3, #1
    3e40:	4610      	mov	r0, r2
    3e42:	d301      	bcc.n	3e48 <__divsi3+0x1b4>
    3e44:	4240      	negs	r0, r0
    3e46:	2b00      	cmp	r3, #0
    3e48:	d500      	bpl.n	3e4c <__divsi3+0x1b8>
    3e4a:	4249      	negs	r1, r1
    3e4c:	4770      	bx	lr
    3e4e:	4663      	mov	r3, ip
    3e50:	105b      	asrs	r3, r3, #1
    3e52:	d300      	bcc.n	3e56 <__divsi3+0x1c2>
    3e54:	4240      	negs	r0, r0
    3e56:	b501      	push	{r0, lr}
    3e58:	2000      	movs	r0, #0
    3e5a:	f7fd fbf7 	bl	164c <__aeabi_idiv0>
    3e5e:	bd02      	pop	{r1, pc}

00003e60 <__aeabi_idivmod>:
    3e60:	2900      	cmp	r1, #0
    3e62:	d0f8      	beq.n	3e56 <__divsi3+0x1c2>
    3e64:	e716      	b.n	3c94 <__divsi3>
    3e66:	4770      	bx	lr

00003e68 <__aeabi_cdrcmple>:
    3e68:	4684      	mov	ip, r0
    3e6a:	1c10      	adds	r0, r2, #0
    3e6c:	4662      	mov	r2, ip
    3e6e:	468c      	mov	ip, r1
    3e70:	1c19      	adds	r1, r3, #0
    3e72:	4663      	mov	r3, ip
    3e74:	e000      	b.n	3e78 <__aeabi_cdcmpeq>
    3e76:	46c0      	nop			; (mov r8, r8)

00003e78 <__aeabi_cdcmpeq>:
    3e78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3e7a:	f000 fbe1 	bl	4640 <__ledf2>
    3e7e:	2800      	cmp	r0, #0
    3e80:	d401      	bmi.n	3e86 <__aeabi_cdcmpeq+0xe>
    3e82:	2100      	movs	r1, #0
    3e84:	42c8      	cmn	r0, r1
    3e86:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00003e88 <__aeabi_dcmpeq>:
    3e88:	b510      	push	{r4, lr}
    3e8a:	f000 fb3b 	bl	4504 <__eqdf2>
    3e8e:	4240      	negs	r0, r0
    3e90:	3001      	adds	r0, #1
    3e92:	bd10      	pop	{r4, pc}

00003e94 <__aeabi_dcmplt>:
    3e94:	b510      	push	{r4, lr}
    3e96:	f000 fbd3 	bl	4640 <__ledf2>
    3e9a:	2800      	cmp	r0, #0
    3e9c:	db01      	blt.n	3ea2 <__aeabi_dcmplt+0xe>
    3e9e:	2000      	movs	r0, #0
    3ea0:	bd10      	pop	{r4, pc}
    3ea2:	2001      	movs	r0, #1
    3ea4:	bd10      	pop	{r4, pc}
    3ea6:	46c0      	nop			; (mov r8, r8)

00003ea8 <__aeabi_dcmple>:
    3ea8:	b510      	push	{r4, lr}
    3eaa:	f000 fbc9 	bl	4640 <__ledf2>
    3eae:	2800      	cmp	r0, #0
    3eb0:	dd01      	ble.n	3eb6 <__aeabi_dcmple+0xe>
    3eb2:	2000      	movs	r0, #0
    3eb4:	bd10      	pop	{r4, pc}
    3eb6:	2001      	movs	r0, #1
    3eb8:	bd10      	pop	{r4, pc}
    3eba:	46c0      	nop			; (mov r8, r8)

00003ebc <__aeabi_dcmpgt>:
    3ebc:	b510      	push	{r4, lr}
    3ebe:	f000 fb5b 	bl	4578 <__gedf2>
    3ec2:	2800      	cmp	r0, #0
    3ec4:	dc01      	bgt.n	3eca <__aeabi_dcmpgt+0xe>
    3ec6:	2000      	movs	r0, #0
    3ec8:	bd10      	pop	{r4, pc}
    3eca:	2001      	movs	r0, #1
    3ecc:	bd10      	pop	{r4, pc}
    3ece:	46c0      	nop			; (mov r8, r8)

00003ed0 <__aeabi_dcmpge>:
    3ed0:	b510      	push	{r4, lr}
    3ed2:	f000 fb51 	bl	4578 <__gedf2>
    3ed6:	2800      	cmp	r0, #0
    3ed8:	da01      	bge.n	3ede <__aeabi_dcmpge+0xe>
    3eda:	2000      	movs	r0, #0
    3edc:	bd10      	pop	{r4, pc}
    3ede:	2001      	movs	r0, #1
    3ee0:	bd10      	pop	{r4, pc}
    3ee2:	46c0      	nop			; (mov r8, r8)

00003ee4 <__aeabi_dadd>:
    3ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3ee6:	4645      	mov	r5, r8
    3ee8:	46de      	mov	lr, fp
    3eea:	4657      	mov	r7, sl
    3eec:	464e      	mov	r6, r9
    3eee:	030c      	lsls	r4, r1, #12
    3ef0:	b5e0      	push	{r5, r6, r7, lr}
    3ef2:	004e      	lsls	r6, r1, #1
    3ef4:	0fc9      	lsrs	r1, r1, #31
    3ef6:	4688      	mov	r8, r1
    3ef8:	000d      	movs	r5, r1
    3efa:	0a61      	lsrs	r1, r4, #9
    3efc:	0f44      	lsrs	r4, r0, #29
    3efe:	430c      	orrs	r4, r1
    3f00:	00c7      	lsls	r7, r0, #3
    3f02:	0319      	lsls	r1, r3, #12
    3f04:	0058      	lsls	r0, r3, #1
    3f06:	0fdb      	lsrs	r3, r3, #31
    3f08:	469b      	mov	fp, r3
    3f0a:	0a4b      	lsrs	r3, r1, #9
    3f0c:	0f51      	lsrs	r1, r2, #29
    3f0e:	430b      	orrs	r3, r1
    3f10:	0d76      	lsrs	r6, r6, #21
    3f12:	0d40      	lsrs	r0, r0, #21
    3f14:	0019      	movs	r1, r3
    3f16:	00d2      	lsls	r2, r2, #3
    3f18:	45d8      	cmp	r8, fp
    3f1a:	d100      	bne.n	3f1e <__aeabi_dadd+0x3a>
    3f1c:	e0ae      	b.n	407c <__aeabi_dadd+0x198>
    3f1e:	1a35      	subs	r5, r6, r0
    3f20:	2d00      	cmp	r5, #0
    3f22:	dc00      	bgt.n	3f26 <__aeabi_dadd+0x42>
    3f24:	e0f6      	b.n	4114 <__aeabi_dadd+0x230>
    3f26:	2800      	cmp	r0, #0
    3f28:	d10f      	bne.n	3f4a <__aeabi_dadd+0x66>
    3f2a:	4313      	orrs	r3, r2
    3f2c:	d100      	bne.n	3f30 <__aeabi_dadd+0x4c>
    3f2e:	e0db      	b.n	40e8 <__aeabi_dadd+0x204>
    3f30:	1e6b      	subs	r3, r5, #1
    3f32:	2b00      	cmp	r3, #0
    3f34:	d000      	beq.n	3f38 <__aeabi_dadd+0x54>
    3f36:	e137      	b.n	41a8 <__aeabi_dadd+0x2c4>
    3f38:	1aba      	subs	r2, r7, r2
    3f3a:	4297      	cmp	r7, r2
    3f3c:	41bf      	sbcs	r7, r7
    3f3e:	1a64      	subs	r4, r4, r1
    3f40:	427f      	negs	r7, r7
    3f42:	1be4      	subs	r4, r4, r7
    3f44:	2601      	movs	r6, #1
    3f46:	0017      	movs	r7, r2
    3f48:	e024      	b.n	3f94 <__aeabi_dadd+0xb0>
    3f4a:	4bc6      	ldr	r3, [pc, #792]	; (4264 <__aeabi_dadd+0x380>)
    3f4c:	429e      	cmp	r6, r3
    3f4e:	d04d      	beq.n	3fec <__aeabi_dadd+0x108>
    3f50:	2380      	movs	r3, #128	; 0x80
    3f52:	041b      	lsls	r3, r3, #16
    3f54:	4319      	orrs	r1, r3
    3f56:	2d38      	cmp	r5, #56	; 0x38
    3f58:	dd00      	ble.n	3f5c <__aeabi_dadd+0x78>
    3f5a:	e107      	b.n	416c <__aeabi_dadd+0x288>
    3f5c:	2d1f      	cmp	r5, #31
    3f5e:	dd00      	ble.n	3f62 <__aeabi_dadd+0x7e>
    3f60:	e138      	b.n	41d4 <__aeabi_dadd+0x2f0>
    3f62:	2020      	movs	r0, #32
    3f64:	1b43      	subs	r3, r0, r5
    3f66:	469a      	mov	sl, r3
    3f68:	000b      	movs	r3, r1
    3f6a:	4650      	mov	r0, sl
    3f6c:	4083      	lsls	r3, r0
    3f6e:	4699      	mov	r9, r3
    3f70:	0013      	movs	r3, r2
    3f72:	4648      	mov	r0, r9
    3f74:	40eb      	lsrs	r3, r5
    3f76:	4318      	orrs	r0, r3
    3f78:	0003      	movs	r3, r0
    3f7a:	4650      	mov	r0, sl
    3f7c:	4082      	lsls	r2, r0
    3f7e:	1e50      	subs	r0, r2, #1
    3f80:	4182      	sbcs	r2, r0
    3f82:	40e9      	lsrs	r1, r5
    3f84:	431a      	orrs	r2, r3
    3f86:	1aba      	subs	r2, r7, r2
    3f88:	1a61      	subs	r1, r4, r1
    3f8a:	4297      	cmp	r7, r2
    3f8c:	41a4      	sbcs	r4, r4
    3f8e:	0017      	movs	r7, r2
    3f90:	4264      	negs	r4, r4
    3f92:	1b0c      	subs	r4, r1, r4
    3f94:	0223      	lsls	r3, r4, #8
    3f96:	d562      	bpl.n	405e <__aeabi_dadd+0x17a>
    3f98:	0264      	lsls	r4, r4, #9
    3f9a:	0a65      	lsrs	r5, r4, #9
    3f9c:	2d00      	cmp	r5, #0
    3f9e:	d100      	bne.n	3fa2 <__aeabi_dadd+0xbe>
    3fa0:	e0df      	b.n	4162 <__aeabi_dadd+0x27e>
    3fa2:	0028      	movs	r0, r5
    3fa4:	f7fe fa50 	bl	2448 <__clzsi2>
    3fa8:	0003      	movs	r3, r0
    3faa:	3b08      	subs	r3, #8
    3fac:	2b1f      	cmp	r3, #31
    3fae:	dd00      	ble.n	3fb2 <__aeabi_dadd+0xce>
    3fb0:	e0d2      	b.n	4158 <__aeabi_dadd+0x274>
    3fb2:	2220      	movs	r2, #32
    3fb4:	003c      	movs	r4, r7
    3fb6:	1ad2      	subs	r2, r2, r3
    3fb8:	409d      	lsls	r5, r3
    3fba:	40d4      	lsrs	r4, r2
    3fbc:	409f      	lsls	r7, r3
    3fbe:	4325      	orrs	r5, r4
    3fc0:	429e      	cmp	r6, r3
    3fc2:	dd00      	ble.n	3fc6 <__aeabi_dadd+0xe2>
    3fc4:	e0c4      	b.n	4150 <__aeabi_dadd+0x26c>
    3fc6:	1b9e      	subs	r6, r3, r6
    3fc8:	1c73      	adds	r3, r6, #1
    3fca:	2b1f      	cmp	r3, #31
    3fcc:	dd00      	ble.n	3fd0 <__aeabi_dadd+0xec>
    3fce:	e0f1      	b.n	41b4 <__aeabi_dadd+0x2d0>
    3fd0:	2220      	movs	r2, #32
    3fd2:	0038      	movs	r0, r7
    3fd4:	0029      	movs	r1, r5
    3fd6:	1ad2      	subs	r2, r2, r3
    3fd8:	40d8      	lsrs	r0, r3
    3fda:	4091      	lsls	r1, r2
    3fdc:	4097      	lsls	r7, r2
    3fde:	002c      	movs	r4, r5
    3fe0:	4301      	orrs	r1, r0
    3fe2:	1e78      	subs	r0, r7, #1
    3fe4:	4187      	sbcs	r7, r0
    3fe6:	40dc      	lsrs	r4, r3
    3fe8:	2600      	movs	r6, #0
    3fea:	430f      	orrs	r7, r1
    3fec:	077b      	lsls	r3, r7, #29
    3fee:	d009      	beq.n	4004 <__aeabi_dadd+0x120>
    3ff0:	230f      	movs	r3, #15
    3ff2:	403b      	ands	r3, r7
    3ff4:	2b04      	cmp	r3, #4
    3ff6:	d005      	beq.n	4004 <__aeabi_dadd+0x120>
    3ff8:	1d3b      	adds	r3, r7, #4
    3ffa:	42bb      	cmp	r3, r7
    3ffc:	41bf      	sbcs	r7, r7
    3ffe:	427f      	negs	r7, r7
    4000:	19e4      	adds	r4, r4, r7
    4002:	001f      	movs	r7, r3
    4004:	0223      	lsls	r3, r4, #8
    4006:	d52c      	bpl.n	4062 <__aeabi_dadd+0x17e>
    4008:	4b96      	ldr	r3, [pc, #600]	; (4264 <__aeabi_dadd+0x380>)
    400a:	3601      	adds	r6, #1
    400c:	429e      	cmp	r6, r3
    400e:	d100      	bne.n	4012 <__aeabi_dadd+0x12e>
    4010:	e09a      	b.n	4148 <__aeabi_dadd+0x264>
    4012:	4645      	mov	r5, r8
    4014:	4b94      	ldr	r3, [pc, #592]	; (4268 <__aeabi_dadd+0x384>)
    4016:	08ff      	lsrs	r7, r7, #3
    4018:	401c      	ands	r4, r3
    401a:	0760      	lsls	r0, r4, #29
    401c:	0576      	lsls	r6, r6, #21
    401e:	0264      	lsls	r4, r4, #9
    4020:	4307      	orrs	r7, r0
    4022:	0b24      	lsrs	r4, r4, #12
    4024:	0d76      	lsrs	r6, r6, #21
    4026:	2100      	movs	r1, #0
    4028:	0324      	lsls	r4, r4, #12
    402a:	0b23      	lsrs	r3, r4, #12
    402c:	0d0c      	lsrs	r4, r1, #20
    402e:	4a8f      	ldr	r2, [pc, #572]	; (426c <__aeabi_dadd+0x388>)
    4030:	0524      	lsls	r4, r4, #20
    4032:	431c      	orrs	r4, r3
    4034:	4014      	ands	r4, r2
    4036:	0533      	lsls	r3, r6, #20
    4038:	4323      	orrs	r3, r4
    403a:	005b      	lsls	r3, r3, #1
    403c:	07ed      	lsls	r5, r5, #31
    403e:	085b      	lsrs	r3, r3, #1
    4040:	432b      	orrs	r3, r5
    4042:	0038      	movs	r0, r7
    4044:	0019      	movs	r1, r3
    4046:	bc3c      	pop	{r2, r3, r4, r5}
    4048:	4690      	mov	r8, r2
    404a:	4699      	mov	r9, r3
    404c:	46a2      	mov	sl, r4
    404e:	46ab      	mov	fp, r5
    4050:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4052:	4664      	mov	r4, ip
    4054:	4304      	orrs	r4, r0
    4056:	d100      	bne.n	405a <__aeabi_dadd+0x176>
    4058:	e211      	b.n	447e <__aeabi_dadd+0x59a>
    405a:	0004      	movs	r4, r0
    405c:	4667      	mov	r7, ip
    405e:	077b      	lsls	r3, r7, #29
    4060:	d1c6      	bne.n	3ff0 <__aeabi_dadd+0x10c>
    4062:	4645      	mov	r5, r8
    4064:	0760      	lsls	r0, r4, #29
    4066:	08ff      	lsrs	r7, r7, #3
    4068:	4307      	orrs	r7, r0
    406a:	08e4      	lsrs	r4, r4, #3
    406c:	4b7d      	ldr	r3, [pc, #500]	; (4264 <__aeabi_dadd+0x380>)
    406e:	429e      	cmp	r6, r3
    4070:	d030      	beq.n	40d4 <__aeabi_dadd+0x1f0>
    4072:	0324      	lsls	r4, r4, #12
    4074:	0576      	lsls	r6, r6, #21
    4076:	0b24      	lsrs	r4, r4, #12
    4078:	0d76      	lsrs	r6, r6, #21
    407a:	e7d4      	b.n	4026 <__aeabi_dadd+0x142>
    407c:	1a33      	subs	r3, r6, r0
    407e:	469a      	mov	sl, r3
    4080:	2b00      	cmp	r3, #0
    4082:	dd78      	ble.n	4176 <__aeabi_dadd+0x292>
    4084:	2800      	cmp	r0, #0
    4086:	d031      	beq.n	40ec <__aeabi_dadd+0x208>
    4088:	4876      	ldr	r0, [pc, #472]	; (4264 <__aeabi_dadd+0x380>)
    408a:	4286      	cmp	r6, r0
    408c:	d0ae      	beq.n	3fec <__aeabi_dadd+0x108>
    408e:	2080      	movs	r0, #128	; 0x80
    4090:	0400      	lsls	r0, r0, #16
    4092:	4301      	orrs	r1, r0
    4094:	4653      	mov	r3, sl
    4096:	2b38      	cmp	r3, #56	; 0x38
    4098:	dc00      	bgt.n	409c <__aeabi_dadd+0x1b8>
    409a:	e0e9      	b.n	4270 <__aeabi_dadd+0x38c>
    409c:	430a      	orrs	r2, r1
    409e:	1e51      	subs	r1, r2, #1
    40a0:	418a      	sbcs	r2, r1
    40a2:	2100      	movs	r1, #0
    40a4:	19d2      	adds	r2, r2, r7
    40a6:	42ba      	cmp	r2, r7
    40a8:	41bf      	sbcs	r7, r7
    40aa:	1909      	adds	r1, r1, r4
    40ac:	427c      	negs	r4, r7
    40ae:	0017      	movs	r7, r2
    40b0:	190c      	adds	r4, r1, r4
    40b2:	0223      	lsls	r3, r4, #8
    40b4:	d5d3      	bpl.n	405e <__aeabi_dadd+0x17a>
    40b6:	4b6b      	ldr	r3, [pc, #428]	; (4264 <__aeabi_dadd+0x380>)
    40b8:	3601      	adds	r6, #1
    40ba:	429e      	cmp	r6, r3
    40bc:	d100      	bne.n	40c0 <__aeabi_dadd+0x1dc>
    40be:	e13a      	b.n	4336 <__aeabi_dadd+0x452>
    40c0:	2001      	movs	r0, #1
    40c2:	4b69      	ldr	r3, [pc, #420]	; (4268 <__aeabi_dadd+0x384>)
    40c4:	401c      	ands	r4, r3
    40c6:	087b      	lsrs	r3, r7, #1
    40c8:	4007      	ands	r7, r0
    40ca:	431f      	orrs	r7, r3
    40cc:	07e0      	lsls	r0, r4, #31
    40ce:	4307      	orrs	r7, r0
    40d0:	0864      	lsrs	r4, r4, #1
    40d2:	e78b      	b.n	3fec <__aeabi_dadd+0x108>
    40d4:	0023      	movs	r3, r4
    40d6:	433b      	orrs	r3, r7
    40d8:	d100      	bne.n	40dc <__aeabi_dadd+0x1f8>
    40da:	e1cb      	b.n	4474 <__aeabi_dadd+0x590>
    40dc:	2280      	movs	r2, #128	; 0x80
    40de:	0312      	lsls	r2, r2, #12
    40e0:	4314      	orrs	r4, r2
    40e2:	0324      	lsls	r4, r4, #12
    40e4:	0b24      	lsrs	r4, r4, #12
    40e6:	e79e      	b.n	4026 <__aeabi_dadd+0x142>
    40e8:	002e      	movs	r6, r5
    40ea:	e77f      	b.n	3fec <__aeabi_dadd+0x108>
    40ec:	0008      	movs	r0, r1
    40ee:	4310      	orrs	r0, r2
    40f0:	d100      	bne.n	40f4 <__aeabi_dadd+0x210>
    40f2:	e0b4      	b.n	425e <__aeabi_dadd+0x37a>
    40f4:	1e58      	subs	r0, r3, #1
    40f6:	2800      	cmp	r0, #0
    40f8:	d000      	beq.n	40fc <__aeabi_dadd+0x218>
    40fa:	e0de      	b.n	42ba <__aeabi_dadd+0x3d6>
    40fc:	18ba      	adds	r2, r7, r2
    40fe:	42ba      	cmp	r2, r7
    4100:	419b      	sbcs	r3, r3
    4102:	1864      	adds	r4, r4, r1
    4104:	425b      	negs	r3, r3
    4106:	18e4      	adds	r4, r4, r3
    4108:	0017      	movs	r7, r2
    410a:	2601      	movs	r6, #1
    410c:	0223      	lsls	r3, r4, #8
    410e:	d5a6      	bpl.n	405e <__aeabi_dadd+0x17a>
    4110:	2602      	movs	r6, #2
    4112:	e7d5      	b.n	40c0 <__aeabi_dadd+0x1dc>
    4114:	2d00      	cmp	r5, #0
    4116:	d16e      	bne.n	41f6 <__aeabi_dadd+0x312>
    4118:	1c70      	adds	r0, r6, #1
    411a:	0540      	lsls	r0, r0, #21
    411c:	0d40      	lsrs	r0, r0, #21
    411e:	2801      	cmp	r0, #1
    4120:	dc00      	bgt.n	4124 <__aeabi_dadd+0x240>
    4122:	e0f9      	b.n	4318 <__aeabi_dadd+0x434>
    4124:	1ab8      	subs	r0, r7, r2
    4126:	4684      	mov	ip, r0
    4128:	4287      	cmp	r7, r0
    412a:	4180      	sbcs	r0, r0
    412c:	1ae5      	subs	r5, r4, r3
    412e:	4240      	negs	r0, r0
    4130:	1a2d      	subs	r5, r5, r0
    4132:	0228      	lsls	r0, r5, #8
    4134:	d400      	bmi.n	4138 <__aeabi_dadd+0x254>
    4136:	e089      	b.n	424c <__aeabi_dadd+0x368>
    4138:	1bd7      	subs	r7, r2, r7
    413a:	42ba      	cmp	r2, r7
    413c:	4192      	sbcs	r2, r2
    413e:	1b1c      	subs	r4, r3, r4
    4140:	4252      	negs	r2, r2
    4142:	1aa5      	subs	r5, r4, r2
    4144:	46d8      	mov	r8, fp
    4146:	e729      	b.n	3f9c <__aeabi_dadd+0xb8>
    4148:	4645      	mov	r5, r8
    414a:	2400      	movs	r4, #0
    414c:	2700      	movs	r7, #0
    414e:	e76a      	b.n	4026 <__aeabi_dadd+0x142>
    4150:	4c45      	ldr	r4, [pc, #276]	; (4268 <__aeabi_dadd+0x384>)
    4152:	1af6      	subs	r6, r6, r3
    4154:	402c      	ands	r4, r5
    4156:	e749      	b.n	3fec <__aeabi_dadd+0x108>
    4158:	003d      	movs	r5, r7
    415a:	3828      	subs	r0, #40	; 0x28
    415c:	4085      	lsls	r5, r0
    415e:	2700      	movs	r7, #0
    4160:	e72e      	b.n	3fc0 <__aeabi_dadd+0xdc>
    4162:	0038      	movs	r0, r7
    4164:	f7fe f970 	bl	2448 <__clzsi2>
    4168:	3020      	adds	r0, #32
    416a:	e71d      	b.n	3fa8 <__aeabi_dadd+0xc4>
    416c:	430a      	orrs	r2, r1
    416e:	1e51      	subs	r1, r2, #1
    4170:	418a      	sbcs	r2, r1
    4172:	2100      	movs	r1, #0
    4174:	e707      	b.n	3f86 <__aeabi_dadd+0xa2>
    4176:	2b00      	cmp	r3, #0
    4178:	d000      	beq.n	417c <__aeabi_dadd+0x298>
    417a:	e0f3      	b.n	4364 <__aeabi_dadd+0x480>
    417c:	1c70      	adds	r0, r6, #1
    417e:	0543      	lsls	r3, r0, #21
    4180:	0d5b      	lsrs	r3, r3, #21
    4182:	2b01      	cmp	r3, #1
    4184:	dc00      	bgt.n	4188 <__aeabi_dadd+0x2a4>
    4186:	e0ad      	b.n	42e4 <__aeabi_dadd+0x400>
    4188:	4b36      	ldr	r3, [pc, #216]	; (4264 <__aeabi_dadd+0x380>)
    418a:	4298      	cmp	r0, r3
    418c:	d100      	bne.n	4190 <__aeabi_dadd+0x2ac>
    418e:	e0d1      	b.n	4334 <__aeabi_dadd+0x450>
    4190:	18ba      	adds	r2, r7, r2
    4192:	42ba      	cmp	r2, r7
    4194:	41bf      	sbcs	r7, r7
    4196:	1864      	adds	r4, r4, r1
    4198:	427f      	negs	r7, r7
    419a:	19e4      	adds	r4, r4, r7
    419c:	07e7      	lsls	r7, r4, #31
    419e:	0852      	lsrs	r2, r2, #1
    41a0:	4317      	orrs	r7, r2
    41a2:	0864      	lsrs	r4, r4, #1
    41a4:	0006      	movs	r6, r0
    41a6:	e721      	b.n	3fec <__aeabi_dadd+0x108>
    41a8:	482e      	ldr	r0, [pc, #184]	; (4264 <__aeabi_dadd+0x380>)
    41aa:	4285      	cmp	r5, r0
    41ac:	d100      	bne.n	41b0 <__aeabi_dadd+0x2cc>
    41ae:	e093      	b.n	42d8 <__aeabi_dadd+0x3f4>
    41b0:	001d      	movs	r5, r3
    41b2:	e6d0      	b.n	3f56 <__aeabi_dadd+0x72>
    41b4:	0029      	movs	r1, r5
    41b6:	3e1f      	subs	r6, #31
    41b8:	40f1      	lsrs	r1, r6
    41ba:	2b20      	cmp	r3, #32
    41bc:	d100      	bne.n	41c0 <__aeabi_dadd+0x2dc>
    41be:	e08d      	b.n	42dc <__aeabi_dadd+0x3f8>
    41c0:	2240      	movs	r2, #64	; 0x40
    41c2:	1ad3      	subs	r3, r2, r3
    41c4:	409d      	lsls	r5, r3
    41c6:	432f      	orrs	r7, r5
    41c8:	1e7d      	subs	r5, r7, #1
    41ca:	41af      	sbcs	r7, r5
    41cc:	2400      	movs	r4, #0
    41ce:	430f      	orrs	r7, r1
    41d0:	2600      	movs	r6, #0
    41d2:	e744      	b.n	405e <__aeabi_dadd+0x17a>
    41d4:	002b      	movs	r3, r5
    41d6:	0008      	movs	r0, r1
    41d8:	3b20      	subs	r3, #32
    41da:	40d8      	lsrs	r0, r3
    41dc:	0003      	movs	r3, r0
    41de:	2d20      	cmp	r5, #32
    41e0:	d100      	bne.n	41e4 <__aeabi_dadd+0x300>
    41e2:	e07d      	b.n	42e0 <__aeabi_dadd+0x3fc>
    41e4:	2040      	movs	r0, #64	; 0x40
    41e6:	1b45      	subs	r5, r0, r5
    41e8:	40a9      	lsls	r1, r5
    41ea:	430a      	orrs	r2, r1
    41ec:	1e51      	subs	r1, r2, #1
    41ee:	418a      	sbcs	r2, r1
    41f0:	2100      	movs	r1, #0
    41f2:	431a      	orrs	r2, r3
    41f4:	e6c7      	b.n	3f86 <__aeabi_dadd+0xa2>
    41f6:	2e00      	cmp	r6, #0
    41f8:	d050      	beq.n	429c <__aeabi_dadd+0x3b8>
    41fa:	4e1a      	ldr	r6, [pc, #104]	; (4264 <__aeabi_dadd+0x380>)
    41fc:	42b0      	cmp	r0, r6
    41fe:	d057      	beq.n	42b0 <__aeabi_dadd+0x3cc>
    4200:	2680      	movs	r6, #128	; 0x80
    4202:	426b      	negs	r3, r5
    4204:	4699      	mov	r9, r3
    4206:	0436      	lsls	r6, r6, #16
    4208:	4334      	orrs	r4, r6
    420a:	464b      	mov	r3, r9
    420c:	2b38      	cmp	r3, #56	; 0x38
    420e:	dd00      	ble.n	4212 <__aeabi_dadd+0x32e>
    4210:	e0d6      	b.n	43c0 <__aeabi_dadd+0x4dc>
    4212:	2b1f      	cmp	r3, #31
    4214:	dd00      	ble.n	4218 <__aeabi_dadd+0x334>
    4216:	e135      	b.n	4484 <__aeabi_dadd+0x5a0>
    4218:	2620      	movs	r6, #32
    421a:	1af5      	subs	r5, r6, r3
    421c:	0026      	movs	r6, r4
    421e:	40ae      	lsls	r6, r5
    4220:	46b2      	mov	sl, r6
    4222:	003e      	movs	r6, r7
    4224:	40de      	lsrs	r6, r3
    4226:	46ac      	mov	ip, r5
    4228:	0035      	movs	r5, r6
    422a:	4656      	mov	r6, sl
    422c:	432e      	orrs	r6, r5
    422e:	4665      	mov	r5, ip
    4230:	40af      	lsls	r7, r5
    4232:	1e7d      	subs	r5, r7, #1
    4234:	41af      	sbcs	r7, r5
    4236:	40dc      	lsrs	r4, r3
    4238:	4337      	orrs	r7, r6
    423a:	1bd7      	subs	r7, r2, r7
    423c:	42ba      	cmp	r2, r7
    423e:	4192      	sbcs	r2, r2
    4240:	1b0c      	subs	r4, r1, r4
    4242:	4252      	negs	r2, r2
    4244:	1aa4      	subs	r4, r4, r2
    4246:	0006      	movs	r6, r0
    4248:	46d8      	mov	r8, fp
    424a:	e6a3      	b.n	3f94 <__aeabi_dadd+0xb0>
    424c:	4664      	mov	r4, ip
    424e:	4667      	mov	r7, ip
    4250:	432c      	orrs	r4, r5
    4252:	d000      	beq.n	4256 <__aeabi_dadd+0x372>
    4254:	e6a2      	b.n	3f9c <__aeabi_dadd+0xb8>
    4256:	2500      	movs	r5, #0
    4258:	2600      	movs	r6, #0
    425a:	2700      	movs	r7, #0
    425c:	e706      	b.n	406c <__aeabi_dadd+0x188>
    425e:	001e      	movs	r6, r3
    4260:	e6c4      	b.n	3fec <__aeabi_dadd+0x108>
    4262:	46c0      	nop			; (mov r8, r8)
    4264:	000007ff 	.word	0x000007ff
    4268:	ff7fffff 	.word	0xff7fffff
    426c:	800fffff 	.word	0x800fffff
    4270:	2b1f      	cmp	r3, #31
    4272:	dc63      	bgt.n	433c <__aeabi_dadd+0x458>
    4274:	2020      	movs	r0, #32
    4276:	1ac3      	subs	r3, r0, r3
    4278:	0008      	movs	r0, r1
    427a:	4098      	lsls	r0, r3
    427c:	469c      	mov	ip, r3
    427e:	4683      	mov	fp, r0
    4280:	4653      	mov	r3, sl
    4282:	0010      	movs	r0, r2
    4284:	40d8      	lsrs	r0, r3
    4286:	0003      	movs	r3, r0
    4288:	4658      	mov	r0, fp
    428a:	4318      	orrs	r0, r3
    428c:	4663      	mov	r3, ip
    428e:	409a      	lsls	r2, r3
    4290:	1e53      	subs	r3, r2, #1
    4292:	419a      	sbcs	r2, r3
    4294:	4653      	mov	r3, sl
    4296:	4302      	orrs	r2, r0
    4298:	40d9      	lsrs	r1, r3
    429a:	e703      	b.n	40a4 <__aeabi_dadd+0x1c0>
    429c:	0026      	movs	r6, r4
    429e:	433e      	orrs	r6, r7
    42a0:	d006      	beq.n	42b0 <__aeabi_dadd+0x3cc>
    42a2:	43eb      	mvns	r3, r5
    42a4:	4699      	mov	r9, r3
    42a6:	2b00      	cmp	r3, #0
    42a8:	d0c7      	beq.n	423a <__aeabi_dadd+0x356>
    42aa:	4e94      	ldr	r6, [pc, #592]	; (44fc <__aeabi_dadd+0x618>)
    42ac:	42b0      	cmp	r0, r6
    42ae:	d1ac      	bne.n	420a <__aeabi_dadd+0x326>
    42b0:	000c      	movs	r4, r1
    42b2:	0017      	movs	r7, r2
    42b4:	0006      	movs	r6, r0
    42b6:	46d8      	mov	r8, fp
    42b8:	e698      	b.n	3fec <__aeabi_dadd+0x108>
    42ba:	4b90      	ldr	r3, [pc, #576]	; (44fc <__aeabi_dadd+0x618>)
    42bc:	459a      	cmp	sl, r3
    42be:	d00b      	beq.n	42d8 <__aeabi_dadd+0x3f4>
    42c0:	4682      	mov	sl, r0
    42c2:	e6e7      	b.n	4094 <__aeabi_dadd+0x1b0>
    42c4:	2800      	cmp	r0, #0
    42c6:	d000      	beq.n	42ca <__aeabi_dadd+0x3e6>
    42c8:	e09e      	b.n	4408 <__aeabi_dadd+0x524>
    42ca:	0018      	movs	r0, r3
    42cc:	4310      	orrs	r0, r2
    42ce:	d100      	bne.n	42d2 <__aeabi_dadd+0x3ee>
    42d0:	e0e9      	b.n	44a6 <__aeabi_dadd+0x5c2>
    42d2:	001c      	movs	r4, r3
    42d4:	0017      	movs	r7, r2
    42d6:	46d8      	mov	r8, fp
    42d8:	4e88      	ldr	r6, [pc, #544]	; (44fc <__aeabi_dadd+0x618>)
    42da:	e687      	b.n	3fec <__aeabi_dadd+0x108>
    42dc:	2500      	movs	r5, #0
    42de:	e772      	b.n	41c6 <__aeabi_dadd+0x2e2>
    42e0:	2100      	movs	r1, #0
    42e2:	e782      	b.n	41ea <__aeabi_dadd+0x306>
    42e4:	0023      	movs	r3, r4
    42e6:	433b      	orrs	r3, r7
    42e8:	2e00      	cmp	r6, #0
    42ea:	d000      	beq.n	42ee <__aeabi_dadd+0x40a>
    42ec:	e0ab      	b.n	4446 <__aeabi_dadd+0x562>
    42ee:	2b00      	cmp	r3, #0
    42f0:	d100      	bne.n	42f4 <__aeabi_dadd+0x410>
    42f2:	e0e7      	b.n	44c4 <__aeabi_dadd+0x5e0>
    42f4:	000b      	movs	r3, r1
    42f6:	4313      	orrs	r3, r2
    42f8:	d100      	bne.n	42fc <__aeabi_dadd+0x418>
    42fa:	e677      	b.n	3fec <__aeabi_dadd+0x108>
    42fc:	18ba      	adds	r2, r7, r2
    42fe:	42ba      	cmp	r2, r7
    4300:	41bf      	sbcs	r7, r7
    4302:	1864      	adds	r4, r4, r1
    4304:	427f      	negs	r7, r7
    4306:	19e4      	adds	r4, r4, r7
    4308:	0223      	lsls	r3, r4, #8
    430a:	d400      	bmi.n	430e <__aeabi_dadd+0x42a>
    430c:	e0f2      	b.n	44f4 <__aeabi_dadd+0x610>
    430e:	4b7c      	ldr	r3, [pc, #496]	; (4500 <__aeabi_dadd+0x61c>)
    4310:	0017      	movs	r7, r2
    4312:	401c      	ands	r4, r3
    4314:	0006      	movs	r6, r0
    4316:	e669      	b.n	3fec <__aeabi_dadd+0x108>
    4318:	0020      	movs	r0, r4
    431a:	4338      	orrs	r0, r7
    431c:	2e00      	cmp	r6, #0
    431e:	d1d1      	bne.n	42c4 <__aeabi_dadd+0x3e0>
    4320:	2800      	cmp	r0, #0
    4322:	d15b      	bne.n	43dc <__aeabi_dadd+0x4f8>
    4324:	001c      	movs	r4, r3
    4326:	4314      	orrs	r4, r2
    4328:	d100      	bne.n	432c <__aeabi_dadd+0x448>
    432a:	e0a8      	b.n	447e <__aeabi_dadd+0x59a>
    432c:	001c      	movs	r4, r3
    432e:	0017      	movs	r7, r2
    4330:	46d8      	mov	r8, fp
    4332:	e65b      	b.n	3fec <__aeabi_dadd+0x108>
    4334:	0006      	movs	r6, r0
    4336:	2400      	movs	r4, #0
    4338:	2700      	movs	r7, #0
    433a:	e697      	b.n	406c <__aeabi_dadd+0x188>
    433c:	4650      	mov	r0, sl
    433e:	000b      	movs	r3, r1
    4340:	3820      	subs	r0, #32
    4342:	40c3      	lsrs	r3, r0
    4344:	4699      	mov	r9, r3
    4346:	4653      	mov	r3, sl
    4348:	2b20      	cmp	r3, #32
    434a:	d100      	bne.n	434e <__aeabi_dadd+0x46a>
    434c:	e095      	b.n	447a <__aeabi_dadd+0x596>
    434e:	2340      	movs	r3, #64	; 0x40
    4350:	4650      	mov	r0, sl
    4352:	1a1b      	subs	r3, r3, r0
    4354:	4099      	lsls	r1, r3
    4356:	430a      	orrs	r2, r1
    4358:	1e51      	subs	r1, r2, #1
    435a:	418a      	sbcs	r2, r1
    435c:	464b      	mov	r3, r9
    435e:	2100      	movs	r1, #0
    4360:	431a      	orrs	r2, r3
    4362:	e69f      	b.n	40a4 <__aeabi_dadd+0x1c0>
    4364:	2e00      	cmp	r6, #0
    4366:	d130      	bne.n	43ca <__aeabi_dadd+0x4e6>
    4368:	0026      	movs	r6, r4
    436a:	433e      	orrs	r6, r7
    436c:	d067      	beq.n	443e <__aeabi_dadd+0x55a>
    436e:	43db      	mvns	r3, r3
    4370:	469a      	mov	sl, r3
    4372:	2b00      	cmp	r3, #0
    4374:	d01c      	beq.n	43b0 <__aeabi_dadd+0x4cc>
    4376:	4e61      	ldr	r6, [pc, #388]	; (44fc <__aeabi_dadd+0x618>)
    4378:	42b0      	cmp	r0, r6
    437a:	d060      	beq.n	443e <__aeabi_dadd+0x55a>
    437c:	4653      	mov	r3, sl
    437e:	2b38      	cmp	r3, #56	; 0x38
    4380:	dd00      	ble.n	4384 <__aeabi_dadd+0x4a0>
    4382:	e096      	b.n	44b2 <__aeabi_dadd+0x5ce>
    4384:	2b1f      	cmp	r3, #31
    4386:	dd00      	ble.n	438a <__aeabi_dadd+0x4a6>
    4388:	e09f      	b.n	44ca <__aeabi_dadd+0x5e6>
    438a:	2620      	movs	r6, #32
    438c:	1af3      	subs	r3, r6, r3
    438e:	0026      	movs	r6, r4
    4390:	409e      	lsls	r6, r3
    4392:	469c      	mov	ip, r3
    4394:	46b3      	mov	fp, r6
    4396:	4653      	mov	r3, sl
    4398:	003e      	movs	r6, r7
    439a:	40de      	lsrs	r6, r3
    439c:	0033      	movs	r3, r6
    439e:	465e      	mov	r6, fp
    43a0:	431e      	orrs	r6, r3
    43a2:	4663      	mov	r3, ip
    43a4:	409f      	lsls	r7, r3
    43a6:	1e7b      	subs	r3, r7, #1
    43a8:	419f      	sbcs	r7, r3
    43aa:	4653      	mov	r3, sl
    43ac:	40dc      	lsrs	r4, r3
    43ae:	4337      	orrs	r7, r6
    43b0:	18bf      	adds	r7, r7, r2
    43b2:	4297      	cmp	r7, r2
    43b4:	4192      	sbcs	r2, r2
    43b6:	1864      	adds	r4, r4, r1
    43b8:	4252      	negs	r2, r2
    43ba:	18a4      	adds	r4, r4, r2
    43bc:	0006      	movs	r6, r0
    43be:	e678      	b.n	40b2 <__aeabi_dadd+0x1ce>
    43c0:	4327      	orrs	r7, r4
    43c2:	1e7c      	subs	r4, r7, #1
    43c4:	41a7      	sbcs	r7, r4
    43c6:	2400      	movs	r4, #0
    43c8:	e737      	b.n	423a <__aeabi_dadd+0x356>
    43ca:	4e4c      	ldr	r6, [pc, #304]	; (44fc <__aeabi_dadd+0x618>)
    43cc:	42b0      	cmp	r0, r6
    43ce:	d036      	beq.n	443e <__aeabi_dadd+0x55a>
    43d0:	2680      	movs	r6, #128	; 0x80
    43d2:	425b      	negs	r3, r3
    43d4:	0436      	lsls	r6, r6, #16
    43d6:	469a      	mov	sl, r3
    43d8:	4334      	orrs	r4, r6
    43da:	e7cf      	b.n	437c <__aeabi_dadd+0x498>
    43dc:	0018      	movs	r0, r3
    43de:	4310      	orrs	r0, r2
    43e0:	d100      	bne.n	43e4 <__aeabi_dadd+0x500>
    43e2:	e603      	b.n	3fec <__aeabi_dadd+0x108>
    43e4:	1ab8      	subs	r0, r7, r2
    43e6:	4684      	mov	ip, r0
    43e8:	4567      	cmp	r7, ip
    43ea:	41ad      	sbcs	r5, r5
    43ec:	1ae0      	subs	r0, r4, r3
    43ee:	426d      	negs	r5, r5
    43f0:	1b40      	subs	r0, r0, r5
    43f2:	0205      	lsls	r5, r0, #8
    43f4:	d400      	bmi.n	43f8 <__aeabi_dadd+0x514>
    43f6:	e62c      	b.n	4052 <__aeabi_dadd+0x16e>
    43f8:	1bd7      	subs	r7, r2, r7
    43fa:	42ba      	cmp	r2, r7
    43fc:	4192      	sbcs	r2, r2
    43fe:	1b1c      	subs	r4, r3, r4
    4400:	4252      	negs	r2, r2
    4402:	1aa4      	subs	r4, r4, r2
    4404:	46d8      	mov	r8, fp
    4406:	e5f1      	b.n	3fec <__aeabi_dadd+0x108>
    4408:	0018      	movs	r0, r3
    440a:	4310      	orrs	r0, r2
    440c:	d100      	bne.n	4410 <__aeabi_dadd+0x52c>
    440e:	e763      	b.n	42d8 <__aeabi_dadd+0x3f4>
    4410:	08f8      	lsrs	r0, r7, #3
    4412:	0767      	lsls	r7, r4, #29
    4414:	4307      	orrs	r7, r0
    4416:	2080      	movs	r0, #128	; 0x80
    4418:	08e4      	lsrs	r4, r4, #3
    441a:	0300      	lsls	r0, r0, #12
    441c:	4204      	tst	r4, r0
    441e:	d008      	beq.n	4432 <__aeabi_dadd+0x54e>
    4420:	08dd      	lsrs	r5, r3, #3
    4422:	4205      	tst	r5, r0
    4424:	d105      	bne.n	4432 <__aeabi_dadd+0x54e>
    4426:	08d2      	lsrs	r2, r2, #3
    4428:	0759      	lsls	r1, r3, #29
    442a:	4311      	orrs	r1, r2
    442c:	000f      	movs	r7, r1
    442e:	002c      	movs	r4, r5
    4430:	46d8      	mov	r8, fp
    4432:	0f7b      	lsrs	r3, r7, #29
    4434:	00e4      	lsls	r4, r4, #3
    4436:	431c      	orrs	r4, r3
    4438:	00ff      	lsls	r7, r7, #3
    443a:	4e30      	ldr	r6, [pc, #192]	; (44fc <__aeabi_dadd+0x618>)
    443c:	e5d6      	b.n	3fec <__aeabi_dadd+0x108>
    443e:	000c      	movs	r4, r1
    4440:	0017      	movs	r7, r2
    4442:	0006      	movs	r6, r0
    4444:	e5d2      	b.n	3fec <__aeabi_dadd+0x108>
    4446:	2b00      	cmp	r3, #0
    4448:	d038      	beq.n	44bc <__aeabi_dadd+0x5d8>
    444a:	000b      	movs	r3, r1
    444c:	4313      	orrs	r3, r2
    444e:	d100      	bne.n	4452 <__aeabi_dadd+0x56e>
    4450:	e742      	b.n	42d8 <__aeabi_dadd+0x3f4>
    4452:	08f8      	lsrs	r0, r7, #3
    4454:	0767      	lsls	r7, r4, #29
    4456:	4307      	orrs	r7, r0
    4458:	2080      	movs	r0, #128	; 0x80
    445a:	08e4      	lsrs	r4, r4, #3
    445c:	0300      	lsls	r0, r0, #12
    445e:	4204      	tst	r4, r0
    4460:	d0e7      	beq.n	4432 <__aeabi_dadd+0x54e>
    4462:	08cb      	lsrs	r3, r1, #3
    4464:	4203      	tst	r3, r0
    4466:	d1e4      	bne.n	4432 <__aeabi_dadd+0x54e>
    4468:	08d2      	lsrs	r2, r2, #3
    446a:	0749      	lsls	r1, r1, #29
    446c:	4311      	orrs	r1, r2
    446e:	000f      	movs	r7, r1
    4470:	001c      	movs	r4, r3
    4472:	e7de      	b.n	4432 <__aeabi_dadd+0x54e>
    4474:	2700      	movs	r7, #0
    4476:	2400      	movs	r4, #0
    4478:	e5d5      	b.n	4026 <__aeabi_dadd+0x142>
    447a:	2100      	movs	r1, #0
    447c:	e76b      	b.n	4356 <__aeabi_dadd+0x472>
    447e:	2500      	movs	r5, #0
    4480:	2700      	movs	r7, #0
    4482:	e5f3      	b.n	406c <__aeabi_dadd+0x188>
    4484:	464e      	mov	r6, r9
    4486:	0025      	movs	r5, r4
    4488:	3e20      	subs	r6, #32
    448a:	40f5      	lsrs	r5, r6
    448c:	464b      	mov	r3, r9
    448e:	002e      	movs	r6, r5
    4490:	2b20      	cmp	r3, #32
    4492:	d02d      	beq.n	44f0 <__aeabi_dadd+0x60c>
    4494:	2540      	movs	r5, #64	; 0x40
    4496:	1aed      	subs	r5, r5, r3
    4498:	40ac      	lsls	r4, r5
    449a:	4327      	orrs	r7, r4
    449c:	1e7c      	subs	r4, r7, #1
    449e:	41a7      	sbcs	r7, r4
    44a0:	2400      	movs	r4, #0
    44a2:	4337      	orrs	r7, r6
    44a4:	e6c9      	b.n	423a <__aeabi_dadd+0x356>
    44a6:	2480      	movs	r4, #128	; 0x80
    44a8:	2500      	movs	r5, #0
    44aa:	0324      	lsls	r4, r4, #12
    44ac:	4e13      	ldr	r6, [pc, #76]	; (44fc <__aeabi_dadd+0x618>)
    44ae:	2700      	movs	r7, #0
    44b0:	e5dc      	b.n	406c <__aeabi_dadd+0x188>
    44b2:	4327      	orrs	r7, r4
    44b4:	1e7c      	subs	r4, r7, #1
    44b6:	41a7      	sbcs	r7, r4
    44b8:	2400      	movs	r4, #0
    44ba:	e779      	b.n	43b0 <__aeabi_dadd+0x4cc>
    44bc:	000c      	movs	r4, r1
    44be:	0017      	movs	r7, r2
    44c0:	4e0e      	ldr	r6, [pc, #56]	; (44fc <__aeabi_dadd+0x618>)
    44c2:	e593      	b.n	3fec <__aeabi_dadd+0x108>
    44c4:	000c      	movs	r4, r1
    44c6:	0017      	movs	r7, r2
    44c8:	e590      	b.n	3fec <__aeabi_dadd+0x108>
    44ca:	4656      	mov	r6, sl
    44cc:	0023      	movs	r3, r4
    44ce:	3e20      	subs	r6, #32
    44d0:	40f3      	lsrs	r3, r6
    44d2:	4699      	mov	r9, r3
    44d4:	4653      	mov	r3, sl
    44d6:	2b20      	cmp	r3, #32
    44d8:	d00e      	beq.n	44f8 <__aeabi_dadd+0x614>
    44da:	2340      	movs	r3, #64	; 0x40
    44dc:	4656      	mov	r6, sl
    44de:	1b9b      	subs	r3, r3, r6
    44e0:	409c      	lsls	r4, r3
    44e2:	4327      	orrs	r7, r4
    44e4:	1e7c      	subs	r4, r7, #1
    44e6:	41a7      	sbcs	r7, r4
    44e8:	464b      	mov	r3, r9
    44ea:	2400      	movs	r4, #0
    44ec:	431f      	orrs	r7, r3
    44ee:	e75f      	b.n	43b0 <__aeabi_dadd+0x4cc>
    44f0:	2400      	movs	r4, #0
    44f2:	e7d2      	b.n	449a <__aeabi_dadd+0x5b6>
    44f4:	0017      	movs	r7, r2
    44f6:	e5b2      	b.n	405e <__aeabi_dadd+0x17a>
    44f8:	2400      	movs	r4, #0
    44fa:	e7f2      	b.n	44e2 <__aeabi_dadd+0x5fe>
    44fc:	000007ff 	.word	0x000007ff
    4500:	ff7fffff 	.word	0xff7fffff

00004504 <__eqdf2>:
    4504:	b5f0      	push	{r4, r5, r6, r7, lr}
    4506:	464f      	mov	r7, r9
    4508:	4646      	mov	r6, r8
    450a:	46d6      	mov	lr, sl
    450c:	005c      	lsls	r4, r3, #1
    450e:	b5c0      	push	{r6, r7, lr}
    4510:	031f      	lsls	r7, r3, #12
    4512:	0fdb      	lsrs	r3, r3, #31
    4514:	469a      	mov	sl, r3
    4516:	4b17      	ldr	r3, [pc, #92]	; (4574 <__eqdf2+0x70>)
    4518:	030e      	lsls	r6, r1, #12
    451a:	004d      	lsls	r5, r1, #1
    451c:	4684      	mov	ip, r0
    451e:	4680      	mov	r8, r0
    4520:	0b36      	lsrs	r6, r6, #12
    4522:	0d6d      	lsrs	r5, r5, #21
    4524:	0fc9      	lsrs	r1, r1, #31
    4526:	4691      	mov	r9, r2
    4528:	0b3f      	lsrs	r7, r7, #12
    452a:	0d64      	lsrs	r4, r4, #21
    452c:	2001      	movs	r0, #1
    452e:	429d      	cmp	r5, r3
    4530:	d008      	beq.n	4544 <__eqdf2+0x40>
    4532:	429c      	cmp	r4, r3
    4534:	d001      	beq.n	453a <__eqdf2+0x36>
    4536:	42a5      	cmp	r5, r4
    4538:	d00b      	beq.n	4552 <__eqdf2+0x4e>
    453a:	bc1c      	pop	{r2, r3, r4}
    453c:	4690      	mov	r8, r2
    453e:	4699      	mov	r9, r3
    4540:	46a2      	mov	sl, r4
    4542:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4544:	4663      	mov	r3, ip
    4546:	4333      	orrs	r3, r6
    4548:	d1f7      	bne.n	453a <__eqdf2+0x36>
    454a:	42ac      	cmp	r4, r5
    454c:	d1f5      	bne.n	453a <__eqdf2+0x36>
    454e:	433a      	orrs	r2, r7
    4550:	d1f3      	bne.n	453a <__eqdf2+0x36>
    4552:	2001      	movs	r0, #1
    4554:	42be      	cmp	r6, r7
    4556:	d1f0      	bne.n	453a <__eqdf2+0x36>
    4558:	45c8      	cmp	r8, r9
    455a:	d1ee      	bne.n	453a <__eqdf2+0x36>
    455c:	4551      	cmp	r1, sl
    455e:	d007      	beq.n	4570 <__eqdf2+0x6c>
    4560:	2d00      	cmp	r5, #0
    4562:	d1ea      	bne.n	453a <__eqdf2+0x36>
    4564:	4663      	mov	r3, ip
    4566:	431e      	orrs	r6, r3
    4568:	0030      	movs	r0, r6
    456a:	1e46      	subs	r6, r0, #1
    456c:	41b0      	sbcs	r0, r6
    456e:	e7e4      	b.n	453a <__eqdf2+0x36>
    4570:	2000      	movs	r0, #0
    4572:	e7e2      	b.n	453a <__eqdf2+0x36>
    4574:	000007ff 	.word	0x000007ff

00004578 <__gedf2>:
    4578:	b5f0      	push	{r4, r5, r6, r7, lr}
    457a:	4645      	mov	r5, r8
    457c:	46de      	mov	lr, fp
    457e:	4657      	mov	r7, sl
    4580:	464e      	mov	r6, r9
    4582:	b5e0      	push	{r5, r6, r7, lr}
    4584:	031f      	lsls	r7, r3, #12
    4586:	0b3d      	lsrs	r5, r7, #12
    4588:	4f2c      	ldr	r7, [pc, #176]	; (463c <__gedf2+0xc4>)
    458a:	030e      	lsls	r6, r1, #12
    458c:	004c      	lsls	r4, r1, #1
    458e:	46ab      	mov	fp, r5
    4590:	005d      	lsls	r5, r3, #1
    4592:	4684      	mov	ip, r0
    4594:	0b36      	lsrs	r6, r6, #12
    4596:	0d64      	lsrs	r4, r4, #21
    4598:	0fc9      	lsrs	r1, r1, #31
    459a:	4690      	mov	r8, r2
    459c:	0d6d      	lsrs	r5, r5, #21
    459e:	0fdb      	lsrs	r3, r3, #31
    45a0:	42bc      	cmp	r4, r7
    45a2:	d02a      	beq.n	45fa <__gedf2+0x82>
    45a4:	4f25      	ldr	r7, [pc, #148]	; (463c <__gedf2+0xc4>)
    45a6:	42bd      	cmp	r5, r7
    45a8:	d02d      	beq.n	4606 <__gedf2+0x8e>
    45aa:	2c00      	cmp	r4, #0
    45ac:	d10f      	bne.n	45ce <__gedf2+0x56>
    45ae:	4330      	orrs	r0, r6
    45b0:	0007      	movs	r7, r0
    45b2:	4681      	mov	r9, r0
    45b4:	4278      	negs	r0, r7
    45b6:	4178      	adcs	r0, r7
    45b8:	b2c0      	uxtb	r0, r0
    45ba:	2d00      	cmp	r5, #0
    45bc:	d117      	bne.n	45ee <__gedf2+0x76>
    45be:	465f      	mov	r7, fp
    45c0:	433a      	orrs	r2, r7
    45c2:	d114      	bne.n	45ee <__gedf2+0x76>
    45c4:	464b      	mov	r3, r9
    45c6:	2000      	movs	r0, #0
    45c8:	2b00      	cmp	r3, #0
    45ca:	d00a      	beq.n	45e2 <__gedf2+0x6a>
    45cc:	e006      	b.n	45dc <__gedf2+0x64>
    45ce:	2d00      	cmp	r5, #0
    45d0:	d102      	bne.n	45d8 <__gedf2+0x60>
    45d2:	4658      	mov	r0, fp
    45d4:	4302      	orrs	r2, r0
    45d6:	d001      	beq.n	45dc <__gedf2+0x64>
    45d8:	4299      	cmp	r1, r3
    45da:	d018      	beq.n	460e <__gedf2+0x96>
    45dc:	4248      	negs	r0, r1
    45de:	2101      	movs	r1, #1
    45e0:	4308      	orrs	r0, r1
    45e2:	bc3c      	pop	{r2, r3, r4, r5}
    45e4:	4690      	mov	r8, r2
    45e6:	4699      	mov	r9, r3
    45e8:	46a2      	mov	sl, r4
    45ea:	46ab      	mov	fp, r5
    45ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45ee:	2800      	cmp	r0, #0
    45f0:	d0f2      	beq.n	45d8 <__gedf2+0x60>
    45f2:	2001      	movs	r0, #1
    45f4:	3b01      	subs	r3, #1
    45f6:	4318      	orrs	r0, r3
    45f8:	e7f3      	b.n	45e2 <__gedf2+0x6a>
    45fa:	0037      	movs	r7, r6
    45fc:	4307      	orrs	r7, r0
    45fe:	d0d1      	beq.n	45a4 <__gedf2+0x2c>
    4600:	2002      	movs	r0, #2
    4602:	4240      	negs	r0, r0
    4604:	e7ed      	b.n	45e2 <__gedf2+0x6a>
    4606:	465f      	mov	r7, fp
    4608:	4317      	orrs	r7, r2
    460a:	d0ce      	beq.n	45aa <__gedf2+0x32>
    460c:	e7f8      	b.n	4600 <__gedf2+0x88>
    460e:	42ac      	cmp	r4, r5
    4610:	dce4      	bgt.n	45dc <__gedf2+0x64>
    4612:	da03      	bge.n	461c <__gedf2+0xa4>
    4614:	1e48      	subs	r0, r1, #1
    4616:	2101      	movs	r1, #1
    4618:	4308      	orrs	r0, r1
    461a:	e7e2      	b.n	45e2 <__gedf2+0x6a>
    461c:	455e      	cmp	r6, fp
    461e:	d8dd      	bhi.n	45dc <__gedf2+0x64>
    4620:	d006      	beq.n	4630 <__gedf2+0xb8>
    4622:	2000      	movs	r0, #0
    4624:	455e      	cmp	r6, fp
    4626:	d2dc      	bcs.n	45e2 <__gedf2+0x6a>
    4628:	2301      	movs	r3, #1
    462a:	1e48      	subs	r0, r1, #1
    462c:	4318      	orrs	r0, r3
    462e:	e7d8      	b.n	45e2 <__gedf2+0x6a>
    4630:	45c4      	cmp	ip, r8
    4632:	d8d3      	bhi.n	45dc <__gedf2+0x64>
    4634:	2000      	movs	r0, #0
    4636:	45c4      	cmp	ip, r8
    4638:	d3f6      	bcc.n	4628 <__gedf2+0xb0>
    463a:	e7d2      	b.n	45e2 <__gedf2+0x6a>
    463c:	000007ff 	.word	0x000007ff

00004640 <__ledf2>:
    4640:	b5f0      	push	{r4, r5, r6, r7, lr}
    4642:	464e      	mov	r6, r9
    4644:	4645      	mov	r5, r8
    4646:	46de      	mov	lr, fp
    4648:	4657      	mov	r7, sl
    464a:	005c      	lsls	r4, r3, #1
    464c:	b5e0      	push	{r5, r6, r7, lr}
    464e:	031f      	lsls	r7, r3, #12
    4650:	0fdb      	lsrs	r3, r3, #31
    4652:	4699      	mov	r9, r3
    4654:	4b2a      	ldr	r3, [pc, #168]	; (4700 <__ledf2+0xc0>)
    4656:	030e      	lsls	r6, r1, #12
    4658:	004d      	lsls	r5, r1, #1
    465a:	0fc9      	lsrs	r1, r1, #31
    465c:	4684      	mov	ip, r0
    465e:	0b36      	lsrs	r6, r6, #12
    4660:	0d6d      	lsrs	r5, r5, #21
    4662:	468b      	mov	fp, r1
    4664:	4690      	mov	r8, r2
    4666:	0b3f      	lsrs	r7, r7, #12
    4668:	0d64      	lsrs	r4, r4, #21
    466a:	429d      	cmp	r5, r3
    466c:	d020      	beq.n	46b0 <__ledf2+0x70>
    466e:	4b24      	ldr	r3, [pc, #144]	; (4700 <__ledf2+0xc0>)
    4670:	429c      	cmp	r4, r3
    4672:	d022      	beq.n	46ba <__ledf2+0x7a>
    4674:	2d00      	cmp	r5, #0
    4676:	d112      	bne.n	469e <__ledf2+0x5e>
    4678:	4330      	orrs	r0, r6
    467a:	4243      	negs	r3, r0
    467c:	4143      	adcs	r3, r0
    467e:	b2db      	uxtb	r3, r3
    4680:	2c00      	cmp	r4, #0
    4682:	d01f      	beq.n	46c4 <__ledf2+0x84>
    4684:	2b00      	cmp	r3, #0
    4686:	d00c      	beq.n	46a2 <__ledf2+0x62>
    4688:	464b      	mov	r3, r9
    468a:	2001      	movs	r0, #1
    468c:	3b01      	subs	r3, #1
    468e:	4303      	orrs	r3, r0
    4690:	0018      	movs	r0, r3
    4692:	bc3c      	pop	{r2, r3, r4, r5}
    4694:	4690      	mov	r8, r2
    4696:	4699      	mov	r9, r3
    4698:	46a2      	mov	sl, r4
    469a:	46ab      	mov	fp, r5
    469c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    469e:	2c00      	cmp	r4, #0
    46a0:	d016      	beq.n	46d0 <__ledf2+0x90>
    46a2:	45cb      	cmp	fp, r9
    46a4:	d017      	beq.n	46d6 <__ledf2+0x96>
    46a6:	465b      	mov	r3, fp
    46a8:	4259      	negs	r1, r3
    46aa:	2301      	movs	r3, #1
    46ac:	430b      	orrs	r3, r1
    46ae:	e7ef      	b.n	4690 <__ledf2+0x50>
    46b0:	0031      	movs	r1, r6
    46b2:	2302      	movs	r3, #2
    46b4:	4301      	orrs	r1, r0
    46b6:	d1eb      	bne.n	4690 <__ledf2+0x50>
    46b8:	e7d9      	b.n	466e <__ledf2+0x2e>
    46ba:	0039      	movs	r1, r7
    46bc:	2302      	movs	r3, #2
    46be:	4311      	orrs	r1, r2
    46c0:	d1e6      	bne.n	4690 <__ledf2+0x50>
    46c2:	e7d7      	b.n	4674 <__ledf2+0x34>
    46c4:	433a      	orrs	r2, r7
    46c6:	d1dd      	bne.n	4684 <__ledf2+0x44>
    46c8:	2300      	movs	r3, #0
    46ca:	2800      	cmp	r0, #0
    46cc:	d0e0      	beq.n	4690 <__ledf2+0x50>
    46ce:	e7ea      	b.n	46a6 <__ledf2+0x66>
    46d0:	433a      	orrs	r2, r7
    46d2:	d1e6      	bne.n	46a2 <__ledf2+0x62>
    46d4:	e7e7      	b.n	46a6 <__ledf2+0x66>
    46d6:	42a5      	cmp	r5, r4
    46d8:	dce5      	bgt.n	46a6 <__ledf2+0x66>
    46da:	db05      	blt.n	46e8 <__ledf2+0xa8>
    46dc:	42be      	cmp	r6, r7
    46de:	d8e2      	bhi.n	46a6 <__ledf2+0x66>
    46e0:	d007      	beq.n	46f2 <__ledf2+0xb2>
    46e2:	2300      	movs	r3, #0
    46e4:	42be      	cmp	r6, r7
    46e6:	d2d3      	bcs.n	4690 <__ledf2+0x50>
    46e8:	4659      	mov	r1, fp
    46ea:	2301      	movs	r3, #1
    46ec:	3901      	subs	r1, #1
    46ee:	430b      	orrs	r3, r1
    46f0:	e7ce      	b.n	4690 <__ledf2+0x50>
    46f2:	45c4      	cmp	ip, r8
    46f4:	d8d7      	bhi.n	46a6 <__ledf2+0x66>
    46f6:	2300      	movs	r3, #0
    46f8:	45c4      	cmp	ip, r8
    46fa:	d3f5      	bcc.n	46e8 <__ledf2+0xa8>
    46fc:	e7c8      	b.n	4690 <__ledf2+0x50>
    46fe:	46c0      	nop			; (mov r8, r8)
    4700:	000007ff 	.word	0x000007ff

00004704 <__aeabi_dsub>:
    4704:	b5f0      	push	{r4, r5, r6, r7, lr}
    4706:	4646      	mov	r6, r8
    4708:	46d6      	mov	lr, sl
    470a:	464f      	mov	r7, r9
    470c:	030c      	lsls	r4, r1, #12
    470e:	b5c0      	push	{r6, r7, lr}
    4710:	0fcd      	lsrs	r5, r1, #31
    4712:	004e      	lsls	r6, r1, #1
    4714:	0a61      	lsrs	r1, r4, #9
    4716:	0f44      	lsrs	r4, r0, #29
    4718:	430c      	orrs	r4, r1
    471a:	00c1      	lsls	r1, r0, #3
    471c:	0058      	lsls	r0, r3, #1
    471e:	0d40      	lsrs	r0, r0, #21
    4720:	4684      	mov	ip, r0
    4722:	468a      	mov	sl, r1
    4724:	000f      	movs	r7, r1
    4726:	0319      	lsls	r1, r3, #12
    4728:	0f50      	lsrs	r0, r2, #29
    472a:	0a49      	lsrs	r1, r1, #9
    472c:	4301      	orrs	r1, r0
    472e:	48c6      	ldr	r0, [pc, #792]	; (4a48 <__aeabi_dsub+0x344>)
    4730:	0d76      	lsrs	r6, r6, #21
    4732:	46a8      	mov	r8, r5
    4734:	0fdb      	lsrs	r3, r3, #31
    4736:	00d2      	lsls	r2, r2, #3
    4738:	4584      	cmp	ip, r0
    473a:	d100      	bne.n	473e <__aeabi_dsub+0x3a>
    473c:	e0d8      	b.n	48f0 <__aeabi_dsub+0x1ec>
    473e:	2001      	movs	r0, #1
    4740:	4043      	eors	r3, r0
    4742:	42ab      	cmp	r3, r5
    4744:	d100      	bne.n	4748 <__aeabi_dsub+0x44>
    4746:	e0a6      	b.n	4896 <__aeabi_dsub+0x192>
    4748:	4660      	mov	r0, ip
    474a:	1a35      	subs	r5, r6, r0
    474c:	2d00      	cmp	r5, #0
    474e:	dc00      	bgt.n	4752 <__aeabi_dsub+0x4e>
    4750:	e105      	b.n	495e <__aeabi_dsub+0x25a>
    4752:	2800      	cmp	r0, #0
    4754:	d110      	bne.n	4778 <__aeabi_dsub+0x74>
    4756:	000b      	movs	r3, r1
    4758:	4313      	orrs	r3, r2
    475a:	d100      	bne.n	475e <__aeabi_dsub+0x5a>
    475c:	e0d7      	b.n	490e <__aeabi_dsub+0x20a>
    475e:	1e6b      	subs	r3, r5, #1
    4760:	2b00      	cmp	r3, #0
    4762:	d000      	beq.n	4766 <__aeabi_dsub+0x62>
    4764:	e14b      	b.n	49fe <__aeabi_dsub+0x2fa>
    4766:	4653      	mov	r3, sl
    4768:	1a9f      	subs	r7, r3, r2
    476a:	45ba      	cmp	sl, r7
    476c:	4180      	sbcs	r0, r0
    476e:	1a64      	subs	r4, r4, r1
    4770:	4240      	negs	r0, r0
    4772:	1a24      	subs	r4, r4, r0
    4774:	2601      	movs	r6, #1
    4776:	e01e      	b.n	47b6 <__aeabi_dsub+0xb2>
    4778:	4bb3      	ldr	r3, [pc, #716]	; (4a48 <__aeabi_dsub+0x344>)
    477a:	429e      	cmp	r6, r3
    477c:	d048      	beq.n	4810 <__aeabi_dsub+0x10c>
    477e:	2380      	movs	r3, #128	; 0x80
    4780:	041b      	lsls	r3, r3, #16
    4782:	4319      	orrs	r1, r3
    4784:	2d38      	cmp	r5, #56	; 0x38
    4786:	dd00      	ble.n	478a <__aeabi_dsub+0x86>
    4788:	e119      	b.n	49be <__aeabi_dsub+0x2ba>
    478a:	2d1f      	cmp	r5, #31
    478c:	dd00      	ble.n	4790 <__aeabi_dsub+0x8c>
    478e:	e14c      	b.n	4a2a <__aeabi_dsub+0x326>
    4790:	2320      	movs	r3, #32
    4792:	000f      	movs	r7, r1
    4794:	1b5b      	subs	r3, r3, r5
    4796:	0010      	movs	r0, r2
    4798:	409a      	lsls	r2, r3
    479a:	409f      	lsls	r7, r3
    479c:	40e8      	lsrs	r0, r5
    479e:	1e53      	subs	r3, r2, #1
    47a0:	419a      	sbcs	r2, r3
    47a2:	40e9      	lsrs	r1, r5
    47a4:	4307      	orrs	r7, r0
    47a6:	4317      	orrs	r7, r2
    47a8:	4653      	mov	r3, sl
    47aa:	1bdf      	subs	r7, r3, r7
    47ac:	1a61      	subs	r1, r4, r1
    47ae:	45ba      	cmp	sl, r7
    47b0:	41a4      	sbcs	r4, r4
    47b2:	4264      	negs	r4, r4
    47b4:	1b0c      	subs	r4, r1, r4
    47b6:	0223      	lsls	r3, r4, #8
    47b8:	d400      	bmi.n	47bc <__aeabi_dsub+0xb8>
    47ba:	e0c5      	b.n	4948 <__aeabi_dsub+0x244>
    47bc:	0264      	lsls	r4, r4, #9
    47be:	0a65      	lsrs	r5, r4, #9
    47c0:	2d00      	cmp	r5, #0
    47c2:	d100      	bne.n	47c6 <__aeabi_dsub+0xc2>
    47c4:	e0f6      	b.n	49b4 <__aeabi_dsub+0x2b0>
    47c6:	0028      	movs	r0, r5
    47c8:	f7fd fe3e 	bl	2448 <__clzsi2>
    47cc:	0003      	movs	r3, r0
    47ce:	3b08      	subs	r3, #8
    47d0:	2b1f      	cmp	r3, #31
    47d2:	dd00      	ble.n	47d6 <__aeabi_dsub+0xd2>
    47d4:	e0e9      	b.n	49aa <__aeabi_dsub+0x2a6>
    47d6:	2220      	movs	r2, #32
    47d8:	003c      	movs	r4, r7
    47da:	1ad2      	subs	r2, r2, r3
    47dc:	409d      	lsls	r5, r3
    47de:	40d4      	lsrs	r4, r2
    47e0:	409f      	lsls	r7, r3
    47e2:	4325      	orrs	r5, r4
    47e4:	429e      	cmp	r6, r3
    47e6:	dd00      	ble.n	47ea <__aeabi_dsub+0xe6>
    47e8:	e0db      	b.n	49a2 <__aeabi_dsub+0x29e>
    47ea:	1b9e      	subs	r6, r3, r6
    47ec:	1c73      	adds	r3, r6, #1
    47ee:	2b1f      	cmp	r3, #31
    47f0:	dd00      	ble.n	47f4 <__aeabi_dsub+0xf0>
    47f2:	e10a      	b.n	4a0a <__aeabi_dsub+0x306>
    47f4:	2220      	movs	r2, #32
    47f6:	0038      	movs	r0, r7
    47f8:	1ad2      	subs	r2, r2, r3
    47fa:	0029      	movs	r1, r5
    47fc:	4097      	lsls	r7, r2
    47fe:	002c      	movs	r4, r5
    4800:	4091      	lsls	r1, r2
    4802:	40d8      	lsrs	r0, r3
    4804:	1e7a      	subs	r2, r7, #1
    4806:	4197      	sbcs	r7, r2
    4808:	40dc      	lsrs	r4, r3
    480a:	2600      	movs	r6, #0
    480c:	4301      	orrs	r1, r0
    480e:	430f      	orrs	r7, r1
    4810:	077b      	lsls	r3, r7, #29
    4812:	d009      	beq.n	4828 <__aeabi_dsub+0x124>
    4814:	230f      	movs	r3, #15
    4816:	403b      	ands	r3, r7
    4818:	2b04      	cmp	r3, #4
    481a:	d005      	beq.n	4828 <__aeabi_dsub+0x124>
    481c:	1d3b      	adds	r3, r7, #4
    481e:	42bb      	cmp	r3, r7
    4820:	41bf      	sbcs	r7, r7
    4822:	427f      	negs	r7, r7
    4824:	19e4      	adds	r4, r4, r7
    4826:	001f      	movs	r7, r3
    4828:	0223      	lsls	r3, r4, #8
    482a:	d525      	bpl.n	4878 <__aeabi_dsub+0x174>
    482c:	4b86      	ldr	r3, [pc, #536]	; (4a48 <__aeabi_dsub+0x344>)
    482e:	3601      	adds	r6, #1
    4830:	429e      	cmp	r6, r3
    4832:	d100      	bne.n	4836 <__aeabi_dsub+0x132>
    4834:	e0af      	b.n	4996 <__aeabi_dsub+0x292>
    4836:	4b85      	ldr	r3, [pc, #532]	; (4a4c <__aeabi_dsub+0x348>)
    4838:	2501      	movs	r5, #1
    483a:	401c      	ands	r4, r3
    483c:	4643      	mov	r3, r8
    483e:	0762      	lsls	r2, r4, #29
    4840:	08ff      	lsrs	r7, r7, #3
    4842:	0264      	lsls	r4, r4, #9
    4844:	0576      	lsls	r6, r6, #21
    4846:	4317      	orrs	r7, r2
    4848:	0b24      	lsrs	r4, r4, #12
    484a:	0d76      	lsrs	r6, r6, #21
    484c:	401d      	ands	r5, r3
    484e:	2100      	movs	r1, #0
    4850:	0324      	lsls	r4, r4, #12
    4852:	0b23      	lsrs	r3, r4, #12
    4854:	0d0c      	lsrs	r4, r1, #20
    4856:	4a7e      	ldr	r2, [pc, #504]	; (4a50 <__aeabi_dsub+0x34c>)
    4858:	0524      	lsls	r4, r4, #20
    485a:	431c      	orrs	r4, r3
    485c:	4014      	ands	r4, r2
    485e:	0533      	lsls	r3, r6, #20
    4860:	4323      	orrs	r3, r4
    4862:	005b      	lsls	r3, r3, #1
    4864:	07ed      	lsls	r5, r5, #31
    4866:	085b      	lsrs	r3, r3, #1
    4868:	432b      	orrs	r3, r5
    486a:	0038      	movs	r0, r7
    486c:	0019      	movs	r1, r3
    486e:	bc1c      	pop	{r2, r3, r4}
    4870:	4690      	mov	r8, r2
    4872:	4699      	mov	r9, r3
    4874:	46a2      	mov	sl, r4
    4876:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4878:	2501      	movs	r5, #1
    487a:	4643      	mov	r3, r8
    487c:	0762      	lsls	r2, r4, #29
    487e:	08ff      	lsrs	r7, r7, #3
    4880:	4317      	orrs	r7, r2
    4882:	08e4      	lsrs	r4, r4, #3
    4884:	401d      	ands	r5, r3
    4886:	4b70      	ldr	r3, [pc, #448]	; (4a48 <__aeabi_dsub+0x344>)
    4888:	429e      	cmp	r6, r3
    488a:	d036      	beq.n	48fa <__aeabi_dsub+0x1f6>
    488c:	0324      	lsls	r4, r4, #12
    488e:	0576      	lsls	r6, r6, #21
    4890:	0b24      	lsrs	r4, r4, #12
    4892:	0d76      	lsrs	r6, r6, #21
    4894:	e7db      	b.n	484e <__aeabi_dsub+0x14a>
    4896:	4663      	mov	r3, ip
    4898:	1af3      	subs	r3, r6, r3
    489a:	2b00      	cmp	r3, #0
    489c:	dc00      	bgt.n	48a0 <__aeabi_dsub+0x19c>
    489e:	e094      	b.n	49ca <__aeabi_dsub+0x2c6>
    48a0:	4660      	mov	r0, ip
    48a2:	2800      	cmp	r0, #0
    48a4:	d035      	beq.n	4912 <__aeabi_dsub+0x20e>
    48a6:	4868      	ldr	r0, [pc, #416]	; (4a48 <__aeabi_dsub+0x344>)
    48a8:	4286      	cmp	r6, r0
    48aa:	d0b1      	beq.n	4810 <__aeabi_dsub+0x10c>
    48ac:	2780      	movs	r7, #128	; 0x80
    48ae:	043f      	lsls	r7, r7, #16
    48b0:	4339      	orrs	r1, r7
    48b2:	2b38      	cmp	r3, #56	; 0x38
    48b4:	dc00      	bgt.n	48b8 <__aeabi_dsub+0x1b4>
    48b6:	e0fd      	b.n	4ab4 <__aeabi_dsub+0x3b0>
    48b8:	430a      	orrs	r2, r1
    48ba:	0017      	movs	r7, r2
    48bc:	2100      	movs	r1, #0
    48be:	1e7a      	subs	r2, r7, #1
    48c0:	4197      	sbcs	r7, r2
    48c2:	4457      	add	r7, sl
    48c4:	4557      	cmp	r7, sl
    48c6:	4180      	sbcs	r0, r0
    48c8:	1909      	adds	r1, r1, r4
    48ca:	4244      	negs	r4, r0
    48cc:	190c      	adds	r4, r1, r4
    48ce:	0223      	lsls	r3, r4, #8
    48d0:	d53a      	bpl.n	4948 <__aeabi_dsub+0x244>
    48d2:	4b5d      	ldr	r3, [pc, #372]	; (4a48 <__aeabi_dsub+0x344>)
    48d4:	3601      	adds	r6, #1
    48d6:	429e      	cmp	r6, r3
    48d8:	d100      	bne.n	48dc <__aeabi_dsub+0x1d8>
    48da:	e14b      	b.n	4b74 <__aeabi_dsub+0x470>
    48dc:	2201      	movs	r2, #1
    48de:	4b5b      	ldr	r3, [pc, #364]	; (4a4c <__aeabi_dsub+0x348>)
    48e0:	401c      	ands	r4, r3
    48e2:	087b      	lsrs	r3, r7, #1
    48e4:	4017      	ands	r7, r2
    48e6:	431f      	orrs	r7, r3
    48e8:	07e2      	lsls	r2, r4, #31
    48ea:	4317      	orrs	r7, r2
    48ec:	0864      	lsrs	r4, r4, #1
    48ee:	e78f      	b.n	4810 <__aeabi_dsub+0x10c>
    48f0:	0008      	movs	r0, r1
    48f2:	4310      	orrs	r0, r2
    48f4:	d000      	beq.n	48f8 <__aeabi_dsub+0x1f4>
    48f6:	e724      	b.n	4742 <__aeabi_dsub+0x3e>
    48f8:	e721      	b.n	473e <__aeabi_dsub+0x3a>
    48fa:	0023      	movs	r3, r4
    48fc:	433b      	orrs	r3, r7
    48fe:	d100      	bne.n	4902 <__aeabi_dsub+0x1fe>
    4900:	e1b9      	b.n	4c76 <__aeabi_dsub+0x572>
    4902:	2280      	movs	r2, #128	; 0x80
    4904:	0312      	lsls	r2, r2, #12
    4906:	4314      	orrs	r4, r2
    4908:	0324      	lsls	r4, r4, #12
    490a:	0b24      	lsrs	r4, r4, #12
    490c:	e79f      	b.n	484e <__aeabi_dsub+0x14a>
    490e:	002e      	movs	r6, r5
    4910:	e77e      	b.n	4810 <__aeabi_dsub+0x10c>
    4912:	0008      	movs	r0, r1
    4914:	4310      	orrs	r0, r2
    4916:	d100      	bne.n	491a <__aeabi_dsub+0x216>
    4918:	e0ca      	b.n	4ab0 <__aeabi_dsub+0x3ac>
    491a:	1e58      	subs	r0, r3, #1
    491c:	4684      	mov	ip, r0
    491e:	2800      	cmp	r0, #0
    4920:	d000      	beq.n	4924 <__aeabi_dsub+0x220>
    4922:	e0e7      	b.n	4af4 <__aeabi_dsub+0x3f0>
    4924:	4452      	add	r2, sl
    4926:	4552      	cmp	r2, sl
    4928:	4180      	sbcs	r0, r0
    492a:	1864      	adds	r4, r4, r1
    492c:	4240      	negs	r0, r0
    492e:	1824      	adds	r4, r4, r0
    4930:	0017      	movs	r7, r2
    4932:	2601      	movs	r6, #1
    4934:	0223      	lsls	r3, r4, #8
    4936:	d507      	bpl.n	4948 <__aeabi_dsub+0x244>
    4938:	2602      	movs	r6, #2
    493a:	e7cf      	b.n	48dc <__aeabi_dsub+0x1d8>
    493c:	4664      	mov	r4, ip
    493e:	432c      	orrs	r4, r5
    4940:	d100      	bne.n	4944 <__aeabi_dsub+0x240>
    4942:	e1b3      	b.n	4cac <__aeabi_dsub+0x5a8>
    4944:	002c      	movs	r4, r5
    4946:	4667      	mov	r7, ip
    4948:	077b      	lsls	r3, r7, #29
    494a:	d000      	beq.n	494e <__aeabi_dsub+0x24a>
    494c:	e762      	b.n	4814 <__aeabi_dsub+0x110>
    494e:	0763      	lsls	r3, r4, #29
    4950:	08ff      	lsrs	r7, r7, #3
    4952:	431f      	orrs	r7, r3
    4954:	2501      	movs	r5, #1
    4956:	4643      	mov	r3, r8
    4958:	08e4      	lsrs	r4, r4, #3
    495a:	401d      	ands	r5, r3
    495c:	e793      	b.n	4886 <__aeabi_dsub+0x182>
    495e:	2d00      	cmp	r5, #0
    4960:	d178      	bne.n	4a54 <__aeabi_dsub+0x350>
    4962:	1c75      	adds	r5, r6, #1
    4964:	056d      	lsls	r5, r5, #21
    4966:	0d6d      	lsrs	r5, r5, #21
    4968:	2d01      	cmp	r5, #1
    496a:	dc00      	bgt.n	496e <__aeabi_dsub+0x26a>
    496c:	e0f2      	b.n	4b54 <__aeabi_dsub+0x450>
    496e:	4650      	mov	r0, sl
    4970:	1a80      	subs	r0, r0, r2
    4972:	4582      	cmp	sl, r0
    4974:	41bf      	sbcs	r7, r7
    4976:	1a65      	subs	r5, r4, r1
    4978:	427f      	negs	r7, r7
    497a:	1bed      	subs	r5, r5, r7
    497c:	4684      	mov	ip, r0
    497e:	0228      	lsls	r0, r5, #8
    4980:	d400      	bmi.n	4984 <__aeabi_dsub+0x280>
    4982:	e08c      	b.n	4a9e <__aeabi_dsub+0x39a>
    4984:	4650      	mov	r0, sl
    4986:	1a17      	subs	r7, r2, r0
    4988:	42ba      	cmp	r2, r7
    498a:	4192      	sbcs	r2, r2
    498c:	1b0c      	subs	r4, r1, r4
    498e:	4255      	negs	r5, r2
    4990:	1b65      	subs	r5, r4, r5
    4992:	4698      	mov	r8, r3
    4994:	e714      	b.n	47c0 <__aeabi_dsub+0xbc>
    4996:	2501      	movs	r5, #1
    4998:	4643      	mov	r3, r8
    499a:	2400      	movs	r4, #0
    499c:	401d      	ands	r5, r3
    499e:	2700      	movs	r7, #0
    49a0:	e755      	b.n	484e <__aeabi_dsub+0x14a>
    49a2:	4c2a      	ldr	r4, [pc, #168]	; (4a4c <__aeabi_dsub+0x348>)
    49a4:	1af6      	subs	r6, r6, r3
    49a6:	402c      	ands	r4, r5
    49a8:	e732      	b.n	4810 <__aeabi_dsub+0x10c>
    49aa:	003d      	movs	r5, r7
    49ac:	3828      	subs	r0, #40	; 0x28
    49ae:	4085      	lsls	r5, r0
    49b0:	2700      	movs	r7, #0
    49b2:	e717      	b.n	47e4 <__aeabi_dsub+0xe0>
    49b4:	0038      	movs	r0, r7
    49b6:	f7fd fd47 	bl	2448 <__clzsi2>
    49ba:	3020      	adds	r0, #32
    49bc:	e706      	b.n	47cc <__aeabi_dsub+0xc8>
    49be:	430a      	orrs	r2, r1
    49c0:	0017      	movs	r7, r2
    49c2:	2100      	movs	r1, #0
    49c4:	1e7a      	subs	r2, r7, #1
    49c6:	4197      	sbcs	r7, r2
    49c8:	e6ee      	b.n	47a8 <__aeabi_dsub+0xa4>
    49ca:	2b00      	cmp	r3, #0
    49cc:	d000      	beq.n	49d0 <__aeabi_dsub+0x2cc>
    49ce:	e0e5      	b.n	4b9c <__aeabi_dsub+0x498>
    49d0:	1c73      	adds	r3, r6, #1
    49d2:	469c      	mov	ip, r3
    49d4:	055b      	lsls	r3, r3, #21
    49d6:	0d5b      	lsrs	r3, r3, #21
    49d8:	2b01      	cmp	r3, #1
    49da:	dc00      	bgt.n	49de <__aeabi_dsub+0x2da>
    49dc:	e09f      	b.n	4b1e <__aeabi_dsub+0x41a>
    49de:	4b1a      	ldr	r3, [pc, #104]	; (4a48 <__aeabi_dsub+0x344>)
    49e0:	459c      	cmp	ip, r3
    49e2:	d100      	bne.n	49e6 <__aeabi_dsub+0x2e2>
    49e4:	e0c5      	b.n	4b72 <__aeabi_dsub+0x46e>
    49e6:	4452      	add	r2, sl
    49e8:	4552      	cmp	r2, sl
    49ea:	4180      	sbcs	r0, r0
    49ec:	1864      	adds	r4, r4, r1
    49ee:	4240      	negs	r0, r0
    49f0:	1824      	adds	r4, r4, r0
    49f2:	07e7      	lsls	r7, r4, #31
    49f4:	0852      	lsrs	r2, r2, #1
    49f6:	4317      	orrs	r7, r2
    49f8:	0864      	lsrs	r4, r4, #1
    49fa:	4666      	mov	r6, ip
    49fc:	e708      	b.n	4810 <__aeabi_dsub+0x10c>
    49fe:	4812      	ldr	r0, [pc, #72]	; (4a48 <__aeabi_dsub+0x344>)
    4a00:	4285      	cmp	r5, r0
    4a02:	d100      	bne.n	4a06 <__aeabi_dsub+0x302>
    4a04:	e085      	b.n	4b12 <__aeabi_dsub+0x40e>
    4a06:	001d      	movs	r5, r3
    4a08:	e6bc      	b.n	4784 <__aeabi_dsub+0x80>
    4a0a:	0029      	movs	r1, r5
    4a0c:	3e1f      	subs	r6, #31
    4a0e:	40f1      	lsrs	r1, r6
    4a10:	2b20      	cmp	r3, #32
    4a12:	d100      	bne.n	4a16 <__aeabi_dsub+0x312>
    4a14:	e07f      	b.n	4b16 <__aeabi_dsub+0x412>
    4a16:	2240      	movs	r2, #64	; 0x40
    4a18:	1ad3      	subs	r3, r2, r3
    4a1a:	409d      	lsls	r5, r3
    4a1c:	432f      	orrs	r7, r5
    4a1e:	1e7d      	subs	r5, r7, #1
    4a20:	41af      	sbcs	r7, r5
    4a22:	2400      	movs	r4, #0
    4a24:	430f      	orrs	r7, r1
    4a26:	2600      	movs	r6, #0
    4a28:	e78e      	b.n	4948 <__aeabi_dsub+0x244>
    4a2a:	002b      	movs	r3, r5
    4a2c:	000f      	movs	r7, r1
    4a2e:	3b20      	subs	r3, #32
    4a30:	40df      	lsrs	r7, r3
    4a32:	2d20      	cmp	r5, #32
    4a34:	d071      	beq.n	4b1a <__aeabi_dsub+0x416>
    4a36:	2340      	movs	r3, #64	; 0x40
    4a38:	1b5d      	subs	r5, r3, r5
    4a3a:	40a9      	lsls	r1, r5
    4a3c:	430a      	orrs	r2, r1
    4a3e:	1e51      	subs	r1, r2, #1
    4a40:	418a      	sbcs	r2, r1
    4a42:	2100      	movs	r1, #0
    4a44:	4317      	orrs	r7, r2
    4a46:	e6af      	b.n	47a8 <__aeabi_dsub+0xa4>
    4a48:	000007ff 	.word	0x000007ff
    4a4c:	ff7fffff 	.word	0xff7fffff
    4a50:	800fffff 	.word	0x800fffff
    4a54:	2e00      	cmp	r6, #0
    4a56:	d03e      	beq.n	4ad6 <__aeabi_dsub+0x3d2>
    4a58:	4eb3      	ldr	r6, [pc, #716]	; (4d28 <__aeabi_dsub+0x624>)
    4a5a:	45b4      	cmp	ip, r6
    4a5c:	d045      	beq.n	4aea <__aeabi_dsub+0x3e6>
    4a5e:	2680      	movs	r6, #128	; 0x80
    4a60:	0436      	lsls	r6, r6, #16
    4a62:	426d      	negs	r5, r5
    4a64:	4334      	orrs	r4, r6
    4a66:	2d38      	cmp	r5, #56	; 0x38
    4a68:	dd00      	ble.n	4a6c <__aeabi_dsub+0x368>
    4a6a:	e0a8      	b.n	4bbe <__aeabi_dsub+0x4ba>
    4a6c:	2d1f      	cmp	r5, #31
    4a6e:	dd00      	ble.n	4a72 <__aeabi_dsub+0x36e>
    4a70:	e11f      	b.n	4cb2 <__aeabi_dsub+0x5ae>
    4a72:	2620      	movs	r6, #32
    4a74:	0027      	movs	r7, r4
    4a76:	4650      	mov	r0, sl
    4a78:	1b76      	subs	r6, r6, r5
    4a7a:	40b7      	lsls	r7, r6
    4a7c:	40e8      	lsrs	r0, r5
    4a7e:	4307      	orrs	r7, r0
    4a80:	4650      	mov	r0, sl
    4a82:	40b0      	lsls	r0, r6
    4a84:	1e46      	subs	r6, r0, #1
    4a86:	41b0      	sbcs	r0, r6
    4a88:	40ec      	lsrs	r4, r5
    4a8a:	4338      	orrs	r0, r7
    4a8c:	1a17      	subs	r7, r2, r0
    4a8e:	42ba      	cmp	r2, r7
    4a90:	4192      	sbcs	r2, r2
    4a92:	1b0c      	subs	r4, r1, r4
    4a94:	4252      	negs	r2, r2
    4a96:	1aa4      	subs	r4, r4, r2
    4a98:	4666      	mov	r6, ip
    4a9a:	4698      	mov	r8, r3
    4a9c:	e68b      	b.n	47b6 <__aeabi_dsub+0xb2>
    4a9e:	4664      	mov	r4, ip
    4aa0:	4667      	mov	r7, ip
    4aa2:	432c      	orrs	r4, r5
    4aa4:	d000      	beq.n	4aa8 <__aeabi_dsub+0x3a4>
    4aa6:	e68b      	b.n	47c0 <__aeabi_dsub+0xbc>
    4aa8:	2500      	movs	r5, #0
    4aaa:	2600      	movs	r6, #0
    4aac:	2700      	movs	r7, #0
    4aae:	e6ea      	b.n	4886 <__aeabi_dsub+0x182>
    4ab0:	001e      	movs	r6, r3
    4ab2:	e6ad      	b.n	4810 <__aeabi_dsub+0x10c>
    4ab4:	2b1f      	cmp	r3, #31
    4ab6:	dc60      	bgt.n	4b7a <__aeabi_dsub+0x476>
    4ab8:	2720      	movs	r7, #32
    4aba:	1af8      	subs	r0, r7, r3
    4abc:	000f      	movs	r7, r1
    4abe:	4684      	mov	ip, r0
    4ac0:	4087      	lsls	r7, r0
    4ac2:	0010      	movs	r0, r2
    4ac4:	40d8      	lsrs	r0, r3
    4ac6:	4307      	orrs	r7, r0
    4ac8:	4660      	mov	r0, ip
    4aca:	4082      	lsls	r2, r0
    4acc:	1e50      	subs	r0, r2, #1
    4ace:	4182      	sbcs	r2, r0
    4ad0:	40d9      	lsrs	r1, r3
    4ad2:	4317      	orrs	r7, r2
    4ad4:	e6f5      	b.n	48c2 <__aeabi_dsub+0x1be>
    4ad6:	0026      	movs	r6, r4
    4ad8:	4650      	mov	r0, sl
    4ada:	4306      	orrs	r6, r0
    4adc:	d005      	beq.n	4aea <__aeabi_dsub+0x3e6>
    4ade:	43ed      	mvns	r5, r5
    4ae0:	2d00      	cmp	r5, #0
    4ae2:	d0d3      	beq.n	4a8c <__aeabi_dsub+0x388>
    4ae4:	4e90      	ldr	r6, [pc, #576]	; (4d28 <__aeabi_dsub+0x624>)
    4ae6:	45b4      	cmp	ip, r6
    4ae8:	d1bd      	bne.n	4a66 <__aeabi_dsub+0x362>
    4aea:	000c      	movs	r4, r1
    4aec:	0017      	movs	r7, r2
    4aee:	4666      	mov	r6, ip
    4af0:	4698      	mov	r8, r3
    4af2:	e68d      	b.n	4810 <__aeabi_dsub+0x10c>
    4af4:	488c      	ldr	r0, [pc, #560]	; (4d28 <__aeabi_dsub+0x624>)
    4af6:	4283      	cmp	r3, r0
    4af8:	d00b      	beq.n	4b12 <__aeabi_dsub+0x40e>
    4afa:	4663      	mov	r3, ip
    4afc:	e6d9      	b.n	48b2 <__aeabi_dsub+0x1ae>
    4afe:	2d00      	cmp	r5, #0
    4b00:	d000      	beq.n	4b04 <__aeabi_dsub+0x400>
    4b02:	e096      	b.n	4c32 <__aeabi_dsub+0x52e>
    4b04:	0008      	movs	r0, r1
    4b06:	4310      	orrs	r0, r2
    4b08:	d100      	bne.n	4b0c <__aeabi_dsub+0x408>
    4b0a:	e0e2      	b.n	4cd2 <__aeabi_dsub+0x5ce>
    4b0c:	000c      	movs	r4, r1
    4b0e:	0017      	movs	r7, r2
    4b10:	4698      	mov	r8, r3
    4b12:	4e85      	ldr	r6, [pc, #532]	; (4d28 <__aeabi_dsub+0x624>)
    4b14:	e67c      	b.n	4810 <__aeabi_dsub+0x10c>
    4b16:	2500      	movs	r5, #0
    4b18:	e780      	b.n	4a1c <__aeabi_dsub+0x318>
    4b1a:	2100      	movs	r1, #0
    4b1c:	e78e      	b.n	4a3c <__aeabi_dsub+0x338>
    4b1e:	0023      	movs	r3, r4
    4b20:	4650      	mov	r0, sl
    4b22:	4303      	orrs	r3, r0
    4b24:	2e00      	cmp	r6, #0
    4b26:	d000      	beq.n	4b2a <__aeabi_dsub+0x426>
    4b28:	e0a8      	b.n	4c7c <__aeabi_dsub+0x578>
    4b2a:	2b00      	cmp	r3, #0
    4b2c:	d100      	bne.n	4b30 <__aeabi_dsub+0x42c>
    4b2e:	e0de      	b.n	4cee <__aeabi_dsub+0x5ea>
    4b30:	000b      	movs	r3, r1
    4b32:	4313      	orrs	r3, r2
    4b34:	d100      	bne.n	4b38 <__aeabi_dsub+0x434>
    4b36:	e66b      	b.n	4810 <__aeabi_dsub+0x10c>
    4b38:	4452      	add	r2, sl
    4b3a:	4552      	cmp	r2, sl
    4b3c:	4180      	sbcs	r0, r0
    4b3e:	1864      	adds	r4, r4, r1
    4b40:	4240      	negs	r0, r0
    4b42:	1824      	adds	r4, r4, r0
    4b44:	0017      	movs	r7, r2
    4b46:	0223      	lsls	r3, r4, #8
    4b48:	d400      	bmi.n	4b4c <__aeabi_dsub+0x448>
    4b4a:	e6fd      	b.n	4948 <__aeabi_dsub+0x244>
    4b4c:	4b77      	ldr	r3, [pc, #476]	; (4d2c <__aeabi_dsub+0x628>)
    4b4e:	4666      	mov	r6, ip
    4b50:	401c      	ands	r4, r3
    4b52:	e65d      	b.n	4810 <__aeabi_dsub+0x10c>
    4b54:	0025      	movs	r5, r4
    4b56:	4650      	mov	r0, sl
    4b58:	4305      	orrs	r5, r0
    4b5a:	2e00      	cmp	r6, #0
    4b5c:	d1cf      	bne.n	4afe <__aeabi_dsub+0x3fa>
    4b5e:	2d00      	cmp	r5, #0
    4b60:	d14f      	bne.n	4c02 <__aeabi_dsub+0x4fe>
    4b62:	000c      	movs	r4, r1
    4b64:	4314      	orrs	r4, r2
    4b66:	d100      	bne.n	4b6a <__aeabi_dsub+0x466>
    4b68:	e0a0      	b.n	4cac <__aeabi_dsub+0x5a8>
    4b6a:	000c      	movs	r4, r1
    4b6c:	0017      	movs	r7, r2
    4b6e:	4698      	mov	r8, r3
    4b70:	e64e      	b.n	4810 <__aeabi_dsub+0x10c>
    4b72:	4666      	mov	r6, ip
    4b74:	2400      	movs	r4, #0
    4b76:	2700      	movs	r7, #0
    4b78:	e685      	b.n	4886 <__aeabi_dsub+0x182>
    4b7a:	001f      	movs	r7, r3
    4b7c:	0008      	movs	r0, r1
    4b7e:	3f20      	subs	r7, #32
    4b80:	40f8      	lsrs	r0, r7
    4b82:	0007      	movs	r7, r0
    4b84:	2b20      	cmp	r3, #32
    4b86:	d100      	bne.n	4b8a <__aeabi_dsub+0x486>
    4b88:	e08e      	b.n	4ca8 <__aeabi_dsub+0x5a4>
    4b8a:	2040      	movs	r0, #64	; 0x40
    4b8c:	1ac3      	subs	r3, r0, r3
    4b8e:	4099      	lsls	r1, r3
    4b90:	430a      	orrs	r2, r1
    4b92:	1e51      	subs	r1, r2, #1
    4b94:	418a      	sbcs	r2, r1
    4b96:	2100      	movs	r1, #0
    4b98:	4317      	orrs	r7, r2
    4b9a:	e692      	b.n	48c2 <__aeabi_dsub+0x1be>
    4b9c:	2e00      	cmp	r6, #0
    4b9e:	d114      	bne.n	4bca <__aeabi_dsub+0x4c6>
    4ba0:	0026      	movs	r6, r4
    4ba2:	4650      	mov	r0, sl
    4ba4:	4306      	orrs	r6, r0
    4ba6:	d062      	beq.n	4c6e <__aeabi_dsub+0x56a>
    4ba8:	43db      	mvns	r3, r3
    4baa:	2b00      	cmp	r3, #0
    4bac:	d15c      	bne.n	4c68 <__aeabi_dsub+0x564>
    4bae:	1887      	adds	r7, r0, r2
    4bb0:	4297      	cmp	r7, r2
    4bb2:	4192      	sbcs	r2, r2
    4bb4:	1864      	adds	r4, r4, r1
    4bb6:	4252      	negs	r2, r2
    4bb8:	18a4      	adds	r4, r4, r2
    4bba:	4666      	mov	r6, ip
    4bbc:	e687      	b.n	48ce <__aeabi_dsub+0x1ca>
    4bbe:	4650      	mov	r0, sl
    4bc0:	4320      	orrs	r0, r4
    4bc2:	1e44      	subs	r4, r0, #1
    4bc4:	41a0      	sbcs	r0, r4
    4bc6:	2400      	movs	r4, #0
    4bc8:	e760      	b.n	4a8c <__aeabi_dsub+0x388>
    4bca:	4e57      	ldr	r6, [pc, #348]	; (4d28 <__aeabi_dsub+0x624>)
    4bcc:	45b4      	cmp	ip, r6
    4bce:	d04e      	beq.n	4c6e <__aeabi_dsub+0x56a>
    4bd0:	2680      	movs	r6, #128	; 0x80
    4bd2:	0436      	lsls	r6, r6, #16
    4bd4:	425b      	negs	r3, r3
    4bd6:	4334      	orrs	r4, r6
    4bd8:	2b38      	cmp	r3, #56	; 0x38
    4bda:	dd00      	ble.n	4bde <__aeabi_dsub+0x4da>
    4bdc:	e07f      	b.n	4cde <__aeabi_dsub+0x5da>
    4bde:	2b1f      	cmp	r3, #31
    4be0:	dd00      	ble.n	4be4 <__aeabi_dsub+0x4e0>
    4be2:	e08b      	b.n	4cfc <__aeabi_dsub+0x5f8>
    4be4:	2620      	movs	r6, #32
    4be6:	0027      	movs	r7, r4
    4be8:	4650      	mov	r0, sl
    4bea:	1af6      	subs	r6, r6, r3
    4bec:	40b7      	lsls	r7, r6
    4bee:	40d8      	lsrs	r0, r3
    4bf0:	4307      	orrs	r7, r0
    4bf2:	4650      	mov	r0, sl
    4bf4:	40b0      	lsls	r0, r6
    4bf6:	1e46      	subs	r6, r0, #1
    4bf8:	41b0      	sbcs	r0, r6
    4bfa:	4307      	orrs	r7, r0
    4bfc:	40dc      	lsrs	r4, r3
    4bfe:	18bf      	adds	r7, r7, r2
    4c00:	e7d6      	b.n	4bb0 <__aeabi_dsub+0x4ac>
    4c02:	000d      	movs	r5, r1
    4c04:	4315      	orrs	r5, r2
    4c06:	d100      	bne.n	4c0a <__aeabi_dsub+0x506>
    4c08:	e602      	b.n	4810 <__aeabi_dsub+0x10c>
    4c0a:	4650      	mov	r0, sl
    4c0c:	1a80      	subs	r0, r0, r2
    4c0e:	4582      	cmp	sl, r0
    4c10:	41bf      	sbcs	r7, r7
    4c12:	1a65      	subs	r5, r4, r1
    4c14:	427f      	negs	r7, r7
    4c16:	1bed      	subs	r5, r5, r7
    4c18:	4684      	mov	ip, r0
    4c1a:	0228      	lsls	r0, r5, #8
    4c1c:	d400      	bmi.n	4c20 <__aeabi_dsub+0x51c>
    4c1e:	e68d      	b.n	493c <__aeabi_dsub+0x238>
    4c20:	4650      	mov	r0, sl
    4c22:	1a17      	subs	r7, r2, r0
    4c24:	42ba      	cmp	r2, r7
    4c26:	4192      	sbcs	r2, r2
    4c28:	1b0c      	subs	r4, r1, r4
    4c2a:	4252      	negs	r2, r2
    4c2c:	1aa4      	subs	r4, r4, r2
    4c2e:	4698      	mov	r8, r3
    4c30:	e5ee      	b.n	4810 <__aeabi_dsub+0x10c>
    4c32:	000d      	movs	r5, r1
    4c34:	4315      	orrs	r5, r2
    4c36:	d100      	bne.n	4c3a <__aeabi_dsub+0x536>
    4c38:	e76b      	b.n	4b12 <__aeabi_dsub+0x40e>
    4c3a:	4650      	mov	r0, sl
    4c3c:	0767      	lsls	r7, r4, #29
    4c3e:	08c0      	lsrs	r0, r0, #3
    4c40:	4307      	orrs	r7, r0
    4c42:	2080      	movs	r0, #128	; 0x80
    4c44:	08e4      	lsrs	r4, r4, #3
    4c46:	0300      	lsls	r0, r0, #12
    4c48:	4204      	tst	r4, r0
    4c4a:	d007      	beq.n	4c5c <__aeabi_dsub+0x558>
    4c4c:	08cd      	lsrs	r5, r1, #3
    4c4e:	4205      	tst	r5, r0
    4c50:	d104      	bne.n	4c5c <__aeabi_dsub+0x558>
    4c52:	002c      	movs	r4, r5
    4c54:	4698      	mov	r8, r3
    4c56:	08d7      	lsrs	r7, r2, #3
    4c58:	0749      	lsls	r1, r1, #29
    4c5a:	430f      	orrs	r7, r1
    4c5c:	0f7b      	lsrs	r3, r7, #29
    4c5e:	00e4      	lsls	r4, r4, #3
    4c60:	431c      	orrs	r4, r3
    4c62:	00ff      	lsls	r7, r7, #3
    4c64:	4e30      	ldr	r6, [pc, #192]	; (4d28 <__aeabi_dsub+0x624>)
    4c66:	e5d3      	b.n	4810 <__aeabi_dsub+0x10c>
    4c68:	4e2f      	ldr	r6, [pc, #188]	; (4d28 <__aeabi_dsub+0x624>)
    4c6a:	45b4      	cmp	ip, r6
    4c6c:	d1b4      	bne.n	4bd8 <__aeabi_dsub+0x4d4>
    4c6e:	000c      	movs	r4, r1
    4c70:	0017      	movs	r7, r2
    4c72:	4666      	mov	r6, ip
    4c74:	e5cc      	b.n	4810 <__aeabi_dsub+0x10c>
    4c76:	2700      	movs	r7, #0
    4c78:	2400      	movs	r4, #0
    4c7a:	e5e8      	b.n	484e <__aeabi_dsub+0x14a>
    4c7c:	2b00      	cmp	r3, #0
    4c7e:	d039      	beq.n	4cf4 <__aeabi_dsub+0x5f0>
    4c80:	000b      	movs	r3, r1
    4c82:	4313      	orrs	r3, r2
    4c84:	d100      	bne.n	4c88 <__aeabi_dsub+0x584>
    4c86:	e744      	b.n	4b12 <__aeabi_dsub+0x40e>
    4c88:	08c0      	lsrs	r0, r0, #3
    4c8a:	0767      	lsls	r7, r4, #29
    4c8c:	4307      	orrs	r7, r0
    4c8e:	2080      	movs	r0, #128	; 0x80
    4c90:	08e4      	lsrs	r4, r4, #3
    4c92:	0300      	lsls	r0, r0, #12
    4c94:	4204      	tst	r4, r0
    4c96:	d0e1      	beq.n	4c5c <__aeabi_dsub+0x558>
    4c98:	08cb      	lsrs	r3, r1, #3
    4c9a:	4203      	tst	r3, r0
    4c9c:	d1de      	bne.n	4c5c <__aeabi_dsub+0x558>
    4c9e:	08d7      	lsrs	r7, r2, #3
    4ca0:	0749      	lsls	r1, r1, #29
    4ca2:	430f      	orrs	r7, r1
    4ca4:	001c      	movs	r4, r3
    4ca6:	e7d9      	b.n	4c5c <__aeabi_dsub+0x558>
    4ca8:	2100      	movs	r1, #0
    4caa:	e771      	b.n	4b90 <__aeabi_dsub+0x48c>
    4cac:	2500      	movs	r5, #0
    4cae:	2700      	movs	r7, #0
    4cb0:	e5e9      	b.n	4886 <__aeabi_dsub+0x182>
    4cb2:	002e      	movs	r6, r5
    4cb4:	0027      	movs	r7, r4
    4cb6:	3e20      	subs	r6, #32
    4cb8:	40f7      	lsrs	r7, r6
    4cba:	2d20      	cmp	r5, #32
    4cbc:	d02f      	beq.n	4d1e <__aeabi_dsub+0x61a>
    4cbe:	2640      	movs	r6, #64	; 0x40
    4cc0:	1b75      	subs	r5, r6, r5
    4cc2:	40ac      	lsls	r4, r5
    4cc4:	4650      	mov	r0, sl
    4cc6:	4320      	orrs	r0, r4
    4cc8:	1e44      	subs	r4, r0, #1
    4cca:	41a0      	sbcs	r0, r4
    4ccc:	2400      	movs	r4, #0
    4cce:	4338      	orrs	r0, r7
    4cd0:	e6dc      	b.n	4a8c <__aeabi_dsub+0x388>
    4cd2:	2480      	movs	r4, #128	; 0x80
    4cd4:	2500      	movs	r5, #0
    4cd6:	0324      	lsls	r4, r4, #12
    4cd8:	4e13      	ldr	r6, [pc, #76]	; (4d28 <__aeabi_dsub+0x624>)
    4cda:	2700      	movs	r7, #0
    4cdc:	e5d3      	b.n	4886 <__aeabi_dsub+0x182>
    4cde:	4650      	mov	r0, sl
    4ce0:	4320      	orrs	r0, r4
    4ce2:	0007      	movs	r7, r0
    4ce4:	1e78      	subs	r0, r7, #1
    4ce6:	4187      	sbcs	r7, r0
    4ce8:	2400      	movs	r4, #0
    4cea:	18bf      	adds	r7, r7, r2
    4cec:	e760      	b.n	4bb0 <__aeabi_dsub+0x4ac>
    4cee:	000c      	movs	r4, r1
    4cf0:	0017      	movs	r7, r2
    4cf2:	e58d      	b.n	4810 <__aeabi_dsub+0x10c>
    4cf4:	000c      	movs	r4, r1
    4cf6:	0017      	movs	r7, r2
    4cf8:	4e0b      	ldr	r6, [pc, #44]	; (4d28 <__aeabi_dsub+0x624>)
    4cfa:	e589      	b.n	4810 <__aeabi_dsub+0x10c>
    4cfc:	001e      	movs	r6, r3
    4cfe:	0027      	movs	r7, r4
    4d00:	3e20      	subs	r6, #32
    4d02:	40f7      	lsrs	r7, r6
    4d04:	2b20      	cmp	r3, #32
    4d06:	d00c      	beq.n	4d22 <__aeabi_dsub+0x61e>
    4d08:	2640      	movs	r6, #64	; 0x40
    4d0a:	1af3      	subs	r3, r6, r3
    4d0c:	409c      	lsls	r4, r3
    4d0e:	4650      	mov	r0, sl
    4d10:	4320      	orrs	r0, r4
    4d12:	1e44      	subs	r4, r0, #1
    4d14:	41a0      	sbcs	r0, r4
    4d16:	4307      	orrs	r7, r0
    4d18:	2400      	movs	r4, #0
    4d1a:	18bf      	adds	r7, r7, r2
    4d1c:	e748      	b.n	4bb0 <__aeabi_dsub+0x4ac>
    4d1e:	2400      	movs	r4, #0
    4d20:	e7d0      	b.n	4cc4 <__aeabi_dsub+0x5c0>
    4d22:	2400      	movs	r4, #0
    4d24:	e7f3      	b.n	4d0e <__aeabi_dsub+0x60a>
    4d26:	46c0      	nop			; (mov r8, r8)
    4d28:	000007ff 	.word	0x000007ff
    4d2c:	ff7fffff 	.word	0xff7fffff

00004d30 <__aeabi_d2iz>:
    4d30:	b530      	push	{r4, r5, lr}
    4d32:	4d13      	ldr	r5, [pc, #76]	; (4d80 <__aeabi_d2iz+0x50>)
    4d34:	030a      	lsls	r2, r1, #12
    4d36:	004b      	lsls	r3, r1, #1
    4d38:	0b12      	lsrs	r2, r2, #12
    4d3a:	0d5b      	lsrs	r3, r3, #21
    4d3c:	0fc9      	lsrs	r1, r1, #31
    4d3e:	2400      	movs	r4, #0
    4d40:	42ab      	cmp	r3, r5
    4d42:	dd10      	ble.n	4d66 <__aeabi_d2iz+0x36>
    4d44:	4c0f      	ldr	r4, [pc, #60]	; (4d84 <__aeabi_d2iz+0x54>)
    4d46:	42a3      	cmp	r3, r4
    4d48:	dc0f      	bgt.n	4d6a <__aeabi_d2iz+0x3a>
    4d4a:	2480      	movs	r4, #128	; 0x80
    4d4c:	4d0e      	ldr	r5, [pc, #56]	; (4d88 <__aeabi_d2iz+0x58>)
    4d4e:	0364      	lsls	r4, r4, #13
    4d50:	4322      	orrs	r2, r4
    4d52:	1aed      	subs	r5, r5, r3
    4d54:	2d1f      	cmp	r5, #31
    4d56:	dd0b      	ble.n	4d70 <__aeabi_d2iz+0x40>
    4d58:	480c      	ldr	r0, [pc, #48]	; (4d8c <__aeabi_d2iz+0x5c>)
    4d5a:	1ac3      	subs	r3, r0, r3
    4d5c:	40da      	lsrs	r2, r3
    4d5e:	4254      	negs	r4, r2
    4d60:	2900      	cmp	r1, #0
    4d62:	d100      	bne.n	4d66 <__aeabi_d2iz+0x36>
    4d64:	0014      	movs	r4, r2
    4d66:	0020      	movs	r0, r4
    4d68:	bd30      	pop	{r4, r5, pc}
    4d6a:	4b09      	ldr	r3, [pc, #36]	; (4d90 <__aeabi_d2iz+0x60>)
    4d6c:	18cc      	adds	r4, r1, r3
    4d6e:	e7fa      	b.n	4d66 <__aeabi_d2iz+0x36>
    4d70:	4c08      	ldr	r4, [pc, #32]	; (4d94 <__aeabi_d2iz+0x64>)
    4d72:	40e8      	lsrs	r0, r5
    4d74:	46a4      	mov	ip, r4
    4d76:	4463      	add	r3, ip
    4d78:	409a      	lsls	r2, r3
    4d7a:	4302      	orrs	r2, r0
    4d7c:	e7ef      	b.n	4d5e <__aeabi_d2iz+0x2e>
    4d7e:	46c0      	nop			; (mov r8, r8)
    4d80:	000003fe 	.word	0x000003fe
    4d84:	0000041d 	.word	0x0000041d
    4d88:	00000433 	.word	0x00000433
    4d8c:	00000413 	.word	0x00000413
    4d90:	7fffffff 	.word	0x7fffffff
    4d94:	fffffbed 	.word	0xfffffbed

00004d98 <__aeabi_ui2d>:
    4d98:	b510      	push	{r4, lr}
    4d9a:	1e04      	subs	r4, r0, #0
    4d9c:	d028      	beq.n	4df0 <__aeabi_ui2d+0x58>
    4d9e:	f7fd fb53 	bl	2448 <__clzsi2>
    4da2:	4b15      	ldr	r3, [pc, #84]	; (4df8 <__aeabi_ui2d+0x60>)
    4da4:	4a15      	ldr	r2, [pc, #84]	; (4dfc <__aeabi_ui2d+0x64>)
    4da6:	1a1b      	subs	r3, r3, r0
    4da8:	1ad2      	subs	r2, r2, r3
    4daa:	2a1f      	cmp	r2, #31
    4dac:	dd15      	ble.n	4dda <__aeabi_ui2d+0x42>
    4dae:	4a14      	ldr	r2, [pc, #80]	; (4e00 <__aeabi_ui2d+0x68>)
    4db0:	1ad2      	subs	r2, r2, r3
    4db2:	4094      	lsls	r4, r2
    4db4:	2200      	movs	r2, #0
    4db6:	0324      	lsls	r4, r4, #12
    4db8:	055b      	lsls	r3, r3, #21
    4dba:	0b24      	lsrs	r4, r4, #12
    4dbc:	0d5b      	lsrs	r3, r3, #21
    4dbe:	2100      	movs	r1, #0
    4dc0:	0010      	movs	r0, r2
    4dc2:	0324      	lsls	r4, r4, #12
    4dc4:	0d0a      	lsrs	r2, r1, #20
    4dc6:	0b24      	lsrs	r4, r4, #12
    4dc8:	0512      	lsls	r2, r2, #20
    4dca:	4322      	orrs	r2, r4
    4dcc:	4c0d      	ldr	r4, [pc, #52]	; (4e04 <__aeabi_ui2d+0x6c>)
    4dce:	051b      	lsls	r3, r3, #20
    4dd0:	4022      	ands	r2, r4
    4dd2:	4313      	orrs	r3, r2
    4dd4:	005b      	lsls	r3, r3, #1
    4dd6:	0859      	lsrs	r1, r3, #1
    4dd8:	bd10      	pop	{r4, pc}
    4dda:	0021      	movs	r1, r4
    4ddc:	4091      	lsls	r1, r2
    4dde:	000a      	movs	r2, r1
    4de0:	210b      	movs	r1, #11
    4de2:	1a08      	subs	r0, r1, r0
    4de4:	40c4      	lsrs	r4, r0
    4de6:	055b      	lsls	r3, r3, #21
    4de8:	0324      	lsls	r4, r4, #12
    4dea:	0b24      	lsrs	r4, r4, #12
    4dec:	0d5b      	lsrs	r3, r3, #21
    4dee:	e7e6      	b.n	4dbe <__aeabi_ui2d+0x26>
    4df0:	2300      	movs	r3, #0
    4df2:	2400      	movs	r4, #0
    4df4:	2200      	movs	r2, #0
    4df6:	e7e2      	b.n	4dbe <__aeabi_ui2d+0x26>
    4df8:	0000041e 	.word	0x0000041e
    4dfc:	00000433 	.word	0x00000433
    4e00:	00000413 	.word	0x00000413
    4e04:	800fffff 	.word	0x800fffff
    4e08:	42000800 	.word	0x42000800
    4e0c:	42000c00 	.word	0x42000c00
    4e10:	42001000 	.word	0x42001000
    4e14:	42001400 	.word	0x42001400
    4e18:	42001800 	.word	0x42001800
    4e1c:	42001c00 	.word	0x42001c00
    4e20:	00000c02 	.word	0x00000c02
    4e24:	00000bfe 	.word	0x00000bfe
    4e28:	00000bfe 	.word	0x00000bfe
    4e2c:	00000c64 	.word	0x00000c64
    4e30:	00000c64 	.word	0x00000c64
    4e34:	00000c16 	.word	0x00000c16
    4e38:	00000c08 	.word	0x00000c08
    4e3c:	00000c1c 	.word	0x00000c1c
    4e40:	00000c52 	.word	0x00000c52
    4e44:	00000cec 	.word	0x00000cec
    4e48:	00000ccc 	.word	0x00000ccc
    4e4c:	00000ccc 	.word	0x00000ccc
    4e50:	00000d58 	.word	0x00000d58
    4e54:	00000cde 	.word	0x00000cde
    4e58:	00000cfa 	.word	0x00000cfa
    4e5c:	00000cd0 	.word	0x00000cd0
    4e60:	00000d08 	.word	0x00000d08
    4e64:	00000d48 	.word	0x00000d48
    4e68:	75702020 	.word	0x75702020
    4e6c:	2065736c 	.word	0x2065736c
    4e70:	00000009 	.word	0x00000009
    4e74:	7a4f2020 	.word	0x7a4f2020
    4e78:	6e696d2f 	.word	0x6e696d2f
    4e7c:	000a0d20 	.word	0x000a0d20
    4e80:	0000189c 	.word	0x0000189c
    4e84:	0000187e 	.word	0x0000187e
    4e88:	00001838 	.word	0x00001838
    4e8c:	00001756 	.word	0x00001756
    4e90:	00001838 	.word	0x00001838
    4e94:	00001870 	.word	0x00001870
    4e98:	00001838 	.word	0x00001838
    4e9c:	00001756 	.word	0x00001756
    4ea0:	0000187e 	.word	0x0000187e
    4ea4:	0000187e 	.word	0x0000187e
    4ea8:	00001870 	.word	0x00001870
    4eac:	00001756 	.word	0x00001756
    4eb0:	0000174e 	.word	0x0000174e
    4eb4:	0000174e 	.word	0x0000174e
    4eb8:	0000174e 	.word	0x0000174e
    4ebc:	00001ab4 	.word	0x00001ab4
    4ec0:	00001efc 	.word	0x00001efc
    4ec4:	00001dbc 	.word	0x00001dbc
    4ec8:	00001dbc 	.word	0x00001dbc
    4ecc:	00001db8 	.word	0x00001db8
    4ed0:	00001ed4 	.word	0x00001ed4
    4ed4:	00001ed4 	.word	0x00001ed4
    4ed8:	00001ec6 	.word	0x00001ec6
    4edc:	00001db8 	.word	0x00001db8
    4ee0:	00001ed4 	.word	0x00001ed4
    4ee4:	00001ec6 	.word	0x00001ec6
    4ee8:	00001ed4 	.word	0x00001ed4
    4eec:	00001db8 	.word	0x00001db8
    4ef0:	00001edc 	.word	0x00001edc
    4ef4:	00001edc 	.word	0x00001edc
    4ef8:	00001edc 	.word	0x00001edc
    4efc:	000020e0 	.word	0x000020e0
    4f00:	33323130 	.word	0x33323130
    4f04:	37363534 	.word	0x37363534
    4f08:	62613938 	.word	0x62613938
    4f0c:	66656463 	.word	0x66656463
    4f10:	6a696867 	.word	0x6a696867
    4f14:	6e6d6c6b 	.word	0x6e6d6c6b
    4f18:	7271706f 	.word	0x7271706f
    4f1c:	76757473 	.word	0x76757473
    4f20:	7a797877 	.word	0x7a797877
    4f24:	00000000 	.word	0x00000000

00004f28 <__mprec_bigtens>:
    4f28:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    4f38:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    4f48:	7f73bf3c 75154fdd                       <.s..O.u

00004f50 <__mprec_tens>:
    4f50:	00000000 3ff00000 00000000 40240000     .......?......$@
    4f60:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    4f70:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    4f80:	00000000 412e8480 00000000 416312d0     .......A......cA
    4f90:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    4fa0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    4fb0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    4fc0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    4fd0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    4fe0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    4ff0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    5000:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    5010:	79d99db4 44ea7843                       ...yCx.D

00005018 <p05.6047>:
    5018:	00000005 00000019 0000007d 69666e49     ........}...Infi
    5028:	7974696e 4e614e00 00003000              nity.NaN.0..

00005034 <_init>:
    5034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5036:	46c0      	nop			; (mov r8, r8)
    5038:	bcf8      	pop	{r3, r4, r5, r6, r7}
    503a:	bc08      	pop	{r3}
    503c:	469e      	mov	lr, r3
    503e:	4770      	bx	lr

00005040 <__init_array_start>:
    5040:	000000dd 	.word	0x000000dd

00005044 <_fini>:
    5044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5046:	46c0      	nop			; (mov r8, r8)
    5048:	bcf8      	pop	{r3, r4, r5, r6, r7}
    504a:	bc08      	pop	{r3}
    504c:	469e      	mov	lr, r3
    504e:	4770      	bx	lr

00005050 <__fini_array_start>:
    5050:	000000b5 	.word	0x000000b5
