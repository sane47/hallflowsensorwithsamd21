
GccBoardProject1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000512c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000006c  20000000  0000512c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000200  2000006c  00005198  0002006c  2**2
                  ALLOC
  3 .stack        00002004  2000026c  00005398  0002006c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
  6 .debug_info   00020062  00000000  00000000  000200ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000030ff  00000000  00000000  0004014f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00003b3d  00000000  00000000  0004324e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000410  00000000  00000000  00046d8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000508  00000000  00000000  0004719b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001a661  00000000  00000000  000476a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00009a33  00000000  00000000  00061d04  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0008f0bf  00000000  00000000  0006b737  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  0000124c  00000000  00000000  000fa7f8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	70 22 00 20 95 11 00 00 91 11 00 00 91 11 00 00     p". ............
	...
      2c:	91 11 00 00 00 00 00 00 00 00 00 00 91 11 00 00     ................
      3c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      4c:	91 11 00 00 61 01 00 00 91 11 00 00 91 11 00 00     ....a...........
      5c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      6c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      7c:	91 11 00 00 91 11 00 00 91 11 00 00 9d 06 00 00     ................
      8c:	ad 06 00 00 bd 06 00 00 cd 06 00 00 dd 06 00 00     ................
      9c:	91 11 00 00 91 11 00 00 91 11 00 00 91 11 00 00     ................
      ac:	91 11 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	2000006c 	.word	0x2000006c
      d4:	00000000 	.word	0x00000000
      d8:	0000512c 	.word	0x0000512c

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000070 	.word	0x20000070
     108:	0000512c 	.word	0x0000512c
     10c:	0000512c 	.word	0x0000512c
     110:	00000000 	.word	0x00000000

00000114 <extint_register_callback>:
	/* Sanity check arguments */
	Assert(callback);

	if (type != EXTINT_CALLBACK_TYPE_DETECT) {
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     114:	2317      	movs	r3, #23
	if (type != EXTINT_CALLBACK_TYPE_DETECT) {
     116:	2a00      	cmp	r2, #0
     118:	d001      	beq.n	11e <extint_register_callback+0xa>
	} else if (_extint_dev.callbacks[channel] == callback) {
		return STATUS_OK;
	}

	return STATUS_ERR_ALREADY_INITIALIZED;
}
     11a:	0018      	movs	r0, r3
     11c:	4770      	bx	lr
	if (_extint_dev.callbacks[channel] == NULL) {
     11e:	008b      	lsls	r3, r1, #2
     120:	4a06      	ldr	r2, [pc, #24]	; (13c <extint_register_callback+0x28>)
     122:	589b      	ldr	r3, [r3, r2]
     124:	2b00      	cmp	r3, #0
     126:	d003      	beq.n	130 <extint_register_callback+0x1c>
	} else if (_extint_dev.callbacks[channel] == callback) {
     128:	4283      	cmp	r3, r0
     12a:	d005      	beq.n	138 <extint_register_callback+0x24>
	return STATUS_ERR_ALREADY_INITIALIZED;
     12c:	231d      	movs	r3, #29
     12e:	e7f4      	b.n	11a <extint_register_callback+0x6>
		_extint_dev.callbacks[channel] = callback;
     130:	0089      	lsls	r1, r1, #2
     132:	5088      	str	r0, [r1, r2]
		return STATUS_OK;
     134:	2300      	movs	r3, #0
     136:	e7f0      	b.n	11a <extint_register_callback+0x6>
		return STATUS_OK;
     138:	2300      	movs	r3, #0
     13a:	e7ee      	b.n	11a <extint_register_callback+0x6>
     13c:	200000c4 	.word	0x200000c4

00000140 <extint_chan_enable_callback>:

		eic->INTENSET.reg = (1UL << channel);
	}
	else {
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     140:	2317      	movs	r3, #23
	if (type == EXTINT_CALLBACK_TYPE_DETECT) {
     142:	2900      	cmp	r1, #0
     144:	d001      	beq.n	14a <extint_chan_enable_callback+0xa>
	}

	return STATUS_OK;
}
     146:	0018      	movs	r0, r3
     148:	4770      	bx	lr
		Eic *const eics[EIC_INST_NUM] = EIC_INSTS;

		return eics[eic_index];
	} else {
		Assert(false);
		return NULL;
     14a:	2200      	movs	r2, #0
	if (eic_index < EIC_INST_NUM) {
     14c:	281f      	cmp	r0, #31
     14e:	d800      	bhi.n	152 <extint_chan_enable_callback+0x12>
		return eics[eic_index];
     150:	4a02      	ldr	r2, [pc, #8]	; (15c <extint_chan_enable_callback+0x1c>)
		eic->INTENSET.reg = (1UL << channel);
     152:	2301      	movs	r3, #1
     154:	4083      	lsls	r3, r0
     156:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
     158:	2300      	movs	r3, #0
     15a:	e7f4      	b.n	146 <extint_chan_enable_callback+0x6>
     15c:	40001800 	.word	0x40001800

00000160 <EIC_Handler>:
	return _current_channel;
}

/** Handler for the EXTINT hardware module interrupt. */
void EIC_Handler(void)
{
     160:	b570      	push	{r4, r5, r6, lr}
	/* Find any triggered channels, run associated callback handlers */
	for (_current_channel = 0; _current_channel < EIC_NUMBER_OF_INTERRUPTS ; _current_channel++) {
     162:	2200      	movs	r2, #0
     164:	4b10      	ldr	r3, [pc, #64]	; (1a8 <EIC_Handler+0x48>)
     166:	701a      	strb	r2, [r3, #0]
     168:	2300      	movs	r3, #0
     16a:	4910      	ldr	r1, [pc, #64]	; (1ac <EIC_Handler+0x4c>)
 */
static inline bool extint_chan_is_detected(
		const uint8_t channel)
{
	Eic *const eic_module = _extint_get_eic_from_channel(channel);
	uint32_t eic_mask   = (1UL << (channel % 32));
     16c:	251f      	movs	r5, #31
		if (extint_chan_is_detected(_current_channel)) {
			/* Clear flag */
			extint_chan_clear_detected(_current_channel);
			/* Find any associated callback entries in the callback table */
			if (_extint_dev.callbacks[_current_channel] != NULL) {
     16e:	4e10      	ldr	r6, [pc, #64]	; (1b0 <EIC_Handler+0x50>)
	for (_current_channel = 0; _current_channel < EIC_NUMBER_OF_INTERRUPTS ; _current_channel++) {
     170:	4c0d      	ldr	r4, [pc, #52]	; (1a8 <EIC_Handler+0x48>)
     172:	e00a      	b.n	18a <EIC_Handler+0x2a>
		return eics[eic_index];
     174:	490d      	ldr	r1, [pc, #52]	; (1ac <EIC_Handler+0x4c>)
     176:	e008      	b.n	18a <EIC_Handler+0x2a>
     178:	7823      	ldrb	r3, [r4, #0]
     17a:	3301      	adds	r3, #1
     17c:	b2db      	uxtb	r3, r3
     17e:	7023      	strb	r3, [r4, #0]
     180:	2b0f      	cmp	r3, #15
     182:	d810      	bhi.n	1a6 <EIC_Handler+0x46>
		return NULL;
     184:	2100      	movs	r1, #0
	if (eic_index < EIC_INST_NUM) {
     186:	2b1f      	cmp	r3, #31
     188:	d9f4      	bls.n	174 <EIC_Handler+0x14>
	uint32_t eic_mask   = (1UL << (channel % 32));
     18a:	0028      	movs	r0, r5
     18c:	4018      	ands	r0, r3
     18e:	2201      	movs	r2, #1
     190:	4082      	lsls	r2, r0

	return (eic_module->INTFLAG.reg & eic_mask);
     192:	6908      	ldr	r0, [r1, #16]
		if (extint_chan_is_detected(_current_channel)) {
     194:	4210      	tst	r0, r2
     196:	d0ef      	beq.n	178 <EIC_Handler+0x18>
		const uint8_t channel)
{
	Eic *const eic_module = _extint_get_eic_from_channel(channel);
	uint32_t eic_mask   = (1UL << (channel % 32));

	eic_module->INTFLAG.reg = eic_mask;
     198:	610a      	str	r2, [r1, #16]
			if (_extint_dev.callbacks[_current_channel] != NULL) {
     19a:	009b      	lsls	r3, r3, #2
     19c:	599b      	ldr	r3, [r3, r6]
     19e:	2b00      	cmp	r3, #0
     1a0:	d0ea      	beq.n	178 <EIC_Handler+0x18>
				/* Run the registered callback */
				_extint_dev.callbacks[_current_channel]();
     1a2:	4798      	blx	r3
     1a4:	e7e8      	b.n	178 <EIC_Handler+0x18>
			}
		}
	}
}
     1a6:	bd70      	pop	{r4, r5, r6, pc}
     1a8:	200000c0 	.word	0x200000c0
     1ac:	40001800 	.word	0x40001800
     1b0:	200000c4 	.word	0x200000c4

000001b4 <_extint_enable>:
{
	Eic *const eics[EIC_INST_NUM] = EIC_INSTS;

	/* Enable all EIC hardware modules. */
	for (uint32_t i = 0; i < EIC_INST_NUM; i++) {
		eics[i]->CTRL.reg |= EIC_CTRL_ENABLE;
     1b4:	4a04      	ldr	r2, [pc, #16]	; (1c8 <_extint_enable+0x14>)
     1b6:	7813      	ldrb	r3, [r2, #0]
     1b8:	2102      	movs	r1, #2
     1ba:	430b      	orrs	r3, r1
     1bc:	7013      	strb	r3, [r2, #0]
		if (eics[i]->STATUS.reg & EIC_STATUS_SYNCBUSY) {
     1be:	7853      	ldrb	r3, [r2, #1]
     1c0:	b25b      	sxtb	r3, r3
     1c2:	2b00      	cmp	r3, #0
     1c4:	dbfb      	blt.n	1be <_extint_enable+0xa>
	}

	while (extint_is_syncing()) {
		/* Wait for all hardware modules to complete synchronization */
	}
}
     1c6:	4770      	bx	lr
     1c8:	40001800 	.word	0x40001800

000001cc <_system_extint_init>:
{
     1cc:	b500      	push	{lr}
     1ce:	b083      	sub	sp, #12
		const enum system_clock_apb_bus bus,
		const uint32_t mask)
{
	switch (bus) {
		case SYSTEM_CLOCK_APB_APBA:
			PM->APBAMASK.reg |= mask;
     1d0:	4a12      	ldr	r2, [pc, #72]	; (21c <_system_extint_init+0x50>)
     1d2:	6993      	ldr	r3, [r2, #24]
     1d4:	2140      	movs	r1, #64	; 0x40
     1d6:	430b      	orrs	r3, r1
     1d8:	6193      	str	r3, [r2, #24]
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->source_generator = GCLK_GENERATOR_0;
     1da:	a901      	add	r1, sp, #4
     1dc:	2300      	movs	r3, #0
     1de:	700b      	strb	r3, [r1, #0]
	system_gclk_chan_set_config(EIC_GCLK_ID, &gclk_chan_conf);
     1e0:	2005      	movs	r0, #5
     1e2:	4b0f      	ldr	r3, [pc, #60]	; (220 <_system_extint_init+0x54>)
     1e4:	4798      	blx	r3
	system_gclk_chan_enable(EIC_GCLK_ID);
     1e6:	2005      	movs	r0, #5
     1e8:	4b0e      	ldr	r3, [pc, #56]	; (224 <_system_extint_init+0x58>)
     1ea:	4798      	blx	r3
		eics[i]->CTRL.reg |= EIC_CTRL_SWRST;
     1ec:	4a0e      	ldr	r2, [pc, #56]	; (228 <_system_extint_init+0x5c>)
     1ee:	7813      	ldrb	r3, [r2, #0]
     1f0:	2101      	movs	r1, #1
     1f2:	430b      	orrs	r3, r1
     1f4:	7013      	strb	r3, [r2, #0]
		if (eics[i]->STATUS.reg & EIC_STATUS_SYNCBUSY) {
     1f6:	7853      	ldrb	r3, [r2, #1]
     1f8:	b25b      	sxtb	r3, r3
     1fa:	2b00      	cmp	r3, #0
     1fc:	dbfb      	blt.n	1f6 <_system_extint_init+0x2a>
     1fe:	4b0b      	ldr	r3, [pc, #44]	; (22c <_system_extint_init+0x60>)
     200:	0019      	movs	r1, r3
     202:	3140      	adds	r1, #64	; 0x40
		_extint_dev.callbacks[j] = NULL;
     204:	2200      	movs	r2, #0
     206:	c304      	stmia	r3!, {r2}
	for (uint8_t j = 0; j < EIC_NUMBER_OF_INTERRUPTS; j++) {
     208:	4299      	cmp	r1, r3
     20a:	d1fc      	bne.n	206 <_system_extint_init+0x3a>
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     20c:	2210      	movs	r2, #16
     20e:	4b08      	ldr	r3, [pc, #32]	; (230 <_system_extint_init+0x64>)
     210:	601a      	str	r2, [r3, #0]
	_extint_enable();
     212:	4b08      	ldr	r3, [pc, #32]	; (234 <_system_extint_init+0x68>)
     214:	4798      	blx	r3
}
     216:	b003      	add	sp, #12
     218:	bd00      	pop	{pc}
     21a:	46c0      	nop			; (mov r8, r8)
     21c:	40000400 	.word	0x40000400
     220:	00001039 	.word	0x00001039
     224:	00000fad 	.word	0x00000fad
     228:	40001800 	.word	0x40001800
     22c:	200000c4 	.word	0x200000c4
     230:	e000e100 	.word	0xe000e100
     234:	000001b5 	.word	0x000001b5

00000238 <extint_chan_get_config_defaults>:
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->gpio_pin            = 0;
     238:	2300      	movs	r3, #0
     23a:	6003      	str	r3, [r0, #0]
	config->gpio_pin_mux        = 0;
     23c:	6043      	str	r3, [r0, #4]
	config->gpio_pin_pull       = EXTINT_PULL_UP;
     23e:	2201      	movs	r2, #1
     240:	7202      	strb	r2, [r0, #8]
	config->wake_if_sleeping    = true;
     242:	7242      	strb	r2, [r0, #9]
	config->filter_input_signal = false;
     244:	7283      	strb	r3, [r0, #10]
	config->detection_criteria  = EXTINT_DETECT_FALLING;
     246:	3302      	adds	r3, #2
     248:	72c3      	strb	r3, [r0, #11]
}
     24a:	4770      	bx	lr

0000024c <extint_chan_set_config>:

 */
void extint_chan_set_config(
		const uint8_t channel,
		const struct extint_chan_conf *const config)
{
     24c:	b5f0      	push	{r4, r5, r6, r7, lr}
     24e:	b083      	sub	sp, #12
     250:	0005      	movs	r5, r0
     252:	000c      	movs	r4, r1
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     254:	a901      	add	r1, sp, #4
     256:	2300      	movs	r3, #0
     258:	704b      	strb	r3, [r1, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
	config->powersave    = false;
     25a:	70cb      	strb	r3, [r1, #3]
			config->detection_criteria)));

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = config->gpio_pin_mux;
     25c:	7923      	ldrb	r3, [r4, #4]
     25e:	700b      	strb	r3, [r1, #0]
	pinmux_config.direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->gpio_pin_pull;
     260:	7a23      	ldrb	r3, [r4, #8]
     262:	708b      	strb	r3, [r1, #2]
	system_pinmux_pin_set_config(config->gpio_pin, &pinmux_config);
     264:	7820      	ldrb	r0, [r4, #0]
     266:	4b15      	ldr	r3, [pc, #84]	; (2bc <extint_chan_set_config+0x70>)
     268:	4798      	blx	r3
		return NULL;
     26a:	2000      	movs	r0, #0
	if (eic_index < EIC_INST_NUM) {
     26c:	2d1f      	cmp	r5, #31
     26e:	d800      	bhi.n	272 <extint_chan_set_config+0x26>
		return eics[eic_index];
     270:	4813      	ldr	r0, [pc, #76]	; (2c0 <extint_chan_set_config+0x74>)

	/* Get a pointer to the module hardware instance */
	Eic *const EIC_module = _extint_get_eic_from_channel(channel);

	uint32_t config_pos = (4 * (channel % 8));
     272:	2207      	movs	r2, #7
     274:	402a      	ands	r2, r5
     276:	0092      	lsls	r2, r2, #2
	uint32_t new_config;

	/* Determine the channel's new edge detection configuration */
	new_config = (config->detection_criteria << EIC_CONFIG_SENSE0_Pos);
     278:	7ae7      	ldrb	r7, [r4, #11]

	/* Enable the hardware signal filter if requested in the config */
	if (config->filter_input_signal) {
     27a:	7aa3      	ldrb	r3, [r4, #10]
     27c:	2b00      	cmp	r3, #0
     27e:	d001      	beq.n	284 <extint_chan_set_config+0x38>
     280:	2308      	movs	r3, #8
     282:	431f      	orrs	r7, r3
     284:	08eb      	lsrs	r3, r5, #3
     286:	009b      	lsls	r3, r3, #2
     288:	18c3      	adds	r3, r0, r3
		new_config |= EIC_CONFIG_FILTEN0;
	}

	/* Clear the existing and set the new channel configuration */
	EIC_module->CONFIG[channel / 8].reg
		= (EIC_module->CONFIG[channel / 8].reg &
     28a:	6999      	ldr	r1, [r3, #24]
			~((EIC_CONFIG_SENSE0_Msk | EIC_CONFIG_FILTEN0) << config_pos)) |
     28c:	260f      	movs	r6, #15
     28e:	4096      	lsls	r6, r2
		= (EIC_module->CONFIG[channel / 8].reg &
     290:	43b1      	bics	r1, r6
			(new_config << config_pos);
     292:	4097      	lsls	r7, r2
     294:	003a      	movs	r2, r7
			~((EIC_CONFIG_SENSE0_Msk | EIC_CONFIG_FILTEN0) << config_pos)) |
     296:	430a      	orrs	r2, r1
		= (EIC_module->CONFIG[channel / 8].reg &
     298:	619a      	str	r2, [r3, #24]

	/* Set the channel's new wake up mode setting */
	if (config->wake_if_sleeping) {
     29a:	7a63      	ldrb	r3, [r4, #9]
     29c:	2b00      	cmp	r3, #0
     29e:	d106      	bne.n	2ae <extint_chan_set_config+0x62>
		EIC_module->WAKEUP.reg |=  (1UL << channel);
	} else {
		EIC_module->WAKEUP.reg &= ~(1UL << channel);
     2a0:	6943      	ldr	r3, [r0, #20]
     2a2:	2201      	movs	r2, #1
     2a4:	40aa      	lsls	r2, r5
     2a6:	4393      	bics	r3, r2
     2a8:	6143      	str	r3, [r0, #20]
	}
}
     2aa:	b003      	add	sp, #12
     2ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
		EIC_module->WAKEUP.reg |=  (1UL << channel);
     2ae:	6942      	ldr	r2, [r0, #20]
     2b0:	2301      	movs	r3, #1
     2b2:	40ab      	lsls	r3, r5
     2b4:	4313      	orrs	r3, r2
     2b6:	6143      	str	r3, [r0, #20]
     2b8:	e7f7      	b.n	2aa <extint_chan_set_config+0x5e>
     2ba:	46c0      	nop			; (mov r8, r8)
     2bc:	00001131 	.word	0x00001131
     2c0:	40001800 	.word	0x40001800

000002c4 <long_division>:
/**
 * \internal Calculate 64 bit division, ref can be found in
 * http://en.wikipedia.org/wiki/Division_algorithm#Long_division
 */
static uint64_t long_division(uint64_t n, uint64_t d)
{
     2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
     2c6:	46de      	mov	lr, fp
     2c8:	4657      	mov	r7, sl
     2ca:	464e      	mov	r6, r9
     2cc:	4645      	mov	r5, r8
     2ce:	b5e0      	push	{r5, r6, r7, lr}
     2d0:	b087      	sub	sp, #28
     2d2:	4680      	mov	r8, r0
     2d4:	9104      	str	r1, [sp, #16]
     2d6:	0016      	movs	r6, r2
     2d8:	001f      	movs	r7, r3
	int32_t i;
	uint64_t q = 0, r = 0, bit_shift;
     2da:	2200      	movs	r2, #0
     2dc:	2300      	movs	r3, #0
     2de:	2100      	movs	r1, #0
     2e0:	468b      	mov	fp, r1
	for (i = 63; i >= 0; i--) {
     2e2:	243f      	movs	r4, #63	; 0x3f
		bit_shift = (uint64_t)1 << i;
     2e4:	2001      	movs	r0, #1
     2e6:	0021      	movs	r1, r4
     2e8:	9600      	str	r6, [sp, #0]
     2ea:	9701      	str	r7, [sp, #4]
     2ec:	465c      	mov	r4, fp
     2ee:	9403      	str	r4, [sp, #12]
     2f0:	4644      	mov	r4, r8
     2f2:	9405      	str	r4, [sp, #20]
     2f4:	e013      	b.n	31e <long_division+0x5a>
     2f6:	2420      	movs	r4, #32
     2f8:	1a64      	subs	r4, r4, r1
     2fa:	0005      	movs	r5, r0
     2fc:	40e5      	lsrs	r5, r4
     2fe:	46a8      	mov	r8, r5
     300:	e014      	b.n	32c <long_division+0x68>
		if (n & bit_shift) {
			r |= 0x01;
		}

		if (r >= d) {
			r = r - d;
     302:	9c00      	ldr	r4, [sp, #0]
     304:	9d01      	ldr	r5, [sp, #4]
     306:	1b12      	subs	r2, r2, r4
     308:	41ab      	sbcs	r3, r5
			q |= bit_shift;
     30a:	465c      	mov	r4, fp
     30c:	464d      	mov	r5, r9
     30e:	432c      	orrs	r4, r5
     310:	46a3      	mov	fp, r4
     312:	9c03      	ldr	r4, [sp, #12]
     314:	4645      	mov	r5, r8
     316:	432c      	orrs	r4, r5
     318:	9403      	str	r4, [sp, #12]
	for (i = 63; i >= 0; i--) {
     31a:	3901      	subs	r1, #1
     31c:	d325      	bcc.n	36a <long_division+0xa6>
		bit_shift = (uint64_t)1 << i;
     31e:	2420      	movs	r4, #32
     320:	4264      	negs	r4, r4
     322:	190c      	adds	r4, r1, r4
     324:	d4e7      	bmi.n	2f6 <long_division+0x32>
     326:	0005      	movs	r5, r0
     328:	40a5      	lsls	r5, r4
     32a:	46a8      	mov	r8, r5
     32c:	0004      	movs	r4, r0
     32e:	408c      	lsls	r4, r1
     330:	46a1      	mov	r9, r4
		r = r << 1;
     332:	1892      	adds	r2, r2, r2
     334:	415b      	adcs	r3, r3
     336:	0014      	movs	r4, r2
     338:	001d      	movs	r5, r3
		if (n & bit_shift) {
     33a:	9e05      	ldr	r6, [sp, #20]
     33c:	464f      	mov	r7, r9
     33e:	403e      	ands	r6, r7
     340:	46b4      	mov	ip, r6
     342:	9e04      	ldr	r6, [sp, #16]
     344:	4647      	mov	r7, r8
     346:	403e      	ands	r6, r7
     348:	46b2      	mov	sl, r6
     34a:	4666      	mov	r6, ip
     34c:	4657      	mov	r7, sl
     34e:	433e      	orrs	r6, r7
     350:	d003      	beq.n	35a <long_division+0x96>
			r |= 0x01;
     352:	0006      	movs	r6, r0
     354:	4326      	orrs	r6, r4
     356:	0032      	movs	r2, r6
     358:	002b      	movs	r3, r5
		if (r >= d) {
     35a:	9c00      	ldr	r4, [sp, #0]
     35c:	9d01      	ldr	r5, [sp, #4]
     35e:	429d      	cmp	r5, r3
     360:	d8db      	bhi.n	31a <long_division+0x56>
     362:	d1ce      	bne.n	302 <long_division+0x3e>
     364:	4294      	cmp	r4, r2
     366:	d8d8      	bhi.n	31a <long_division+0x56>
     368:	e7cb      	b.n	302 <long_division+0x3e>
     36a:	9b03      	ldr	r3, [sp, #12]
		}
	}

	return q;
}
     36c:	4658      	mov	r0, fp
     36e:	0019      	movs	r1, r3
     370:	b007      	add	sp, #28
     372:	bc3c      	pop	{r2, r3, r4, r5}
     374:	4690      	mov	r8, r2
     376:	4699      	mov	r9, r3
     378:	46a2      	mov	sl, r4
     37a:	46ab      	mov	fp, r5
     37c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000037e <_sercom_get_sync_baud_val>:
 */
enum status_code _sercom_get_sync_baud_val(
		const uint32_t baudrate,
		const uint32_t external_clock,
		uint16_t *const baudvalue)
{
     37e:	b510      	push	{r4, lr}
	uint16_t baud_calculated = 0;
	uint32_t clock_value = external_clock;


	/* Check if baudrate is outside of valid range */
	if (baudrate > (external_clock / 2)) {
     380:	0849      	lsrs	r1, r1, #1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     382:	2340      	movs	r3, #64	; 0x40
     384:	2400      	movs	r4, #0
	if (baudrate > (external_clock / 2)) {
     386:	4281      	cmp	r1, r0
     388:	d202      	bcs.n	390 <_sercom_get_sync_baud_val+0x12>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		*baudvalue = baud_calculated;
		return STATUS_OK;
	}
}
     38a:	0018      	movs	r0, r3
     38c:	bd10      	pop	{r4, pc}
		baud_calculated++;
     38e:	001c      	movs	r4, r3
		clock_value = clock_value - baudrate;
     390:	1a09      	subs	r1, r1, r0
		baud_calculated++;
     392:	1c63      	adds	r3, r4, #1
     394:	b29b      	uxth	r3, r3
	while (clock_value >= baudrate) {
     396:	4288      	cmp	r0, r1
     398:	d9f9      	bls.n	38e <_sercom_get_sync_baud_val+0x10>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     39a:	2340      	movs	r3, #64	; 0x40
	if (baud_calculated > 0xFF) {
     39c:	2cff      	cmp	r4, #255	; 0xff
     39e:	d8f4      	bhi.n	38a <_sercom_get_sync_baud_val+0xc>
		*baudvalue = baud_calculated;
     3a0:	8014      	strh	r4, [r2, #0]
		return STATUS_OK;
     3a2:	2300      	movs	r3, #0
     3a4:	e7f1      	b.n	38a <_sercom_get_sync_baud_val+0xc>
	...

000003a8 <_sercom_get_async_baud_val>:
		const uint32_t baudrate,
		const uint32_t peripheral_clock,
		uint16_t *const baudval,
		enum sercom_asynchronous_operation_mode mode,
		enum sercom_asynchronous_sample_num sample_num)
{
     3a8:	b5f0      	push	{r4, r5, r6, r7, lr}
     3aa:	b083      	sub	sp, #12
     3ac:	000f      	movs	r7, r1
     3ae:	0016      	movs	r6, r2
     3b0:	aa08      	add	r2, sp, #32
     3b2:	7811      	ldrb	r1, [r2, #0]
	uint8_t baud_fp;
	uint32_t baud_int = 0;
	uint64_t temp1;

	/* Check if the baudrate is outside of valid range */
	if ((baudrate * sample_num) > peripheral_clock) {
     3b4:	0004      	movs	r4, r0
     3b6:	434c      	muls	r4, r1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     3b8:	2240      	movs	r2, #64	; 0x40
	if ((baudrate * sample_num) > peripheral_clock) {
     3ba:	42bc      	cmp	r4, r7
     3bc:	d902      	bls.n	3c4 <_sercom_get_async_baud_val+0x1c>
		baud_calculated = baud_int | (baud_fp << 13);
	}

	*baudval = baud_calculated;
	return STATUS_OK;
}
     3be:	0010      	movs	r0, r2
     3c0:	b003      	add	sp, #12
     3c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(mode == SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC) {
     3c4:	2b00      	cmp	r3, #0
     3c6:	d114      	bne.n	3f2 <_sercom_get_async_baud_val+0x4a>
		temp1 = ((sample_num * (uint64_t)baudrate) << SHIFT);
     3c8:	0002      	movs	r2, r0
     3ca:	0008      	movs	r0, r1
     3cc:	2100      	movs	r1, #0
     3ce:	4c19      	ldr	r4, [pc, #100]	; (434 <_sercom_get_async_baud_val+0x8c>)
     3d0:	47a0      	blx	r4
     3d2:	0001      	movs	r1, r0
		ratio = long_division(temp1, peripheral_clock);
     3d4:	003a      	movs	r2, r7
     3d6:	2300      	movs	r3, #0
     3d8:	2000      	movs	r0, #0
     3da:	4c17      	ldr	r4, [pc, #92]	; (438 <_sercom_get_async_baud_val+0x90>)
     3dc:	47a0      	blx	r4
		scale = ((uint64_t)1 << SHIFT) - ratio;
     3de:	2200      	movs	r2, #0
     3e0:	2301      	movs	r3, #1
     3e2:	1a12      	subs	r2, r2, r0
     3e4:	418b      	sbcs	r3, r1
		baud_calculated = (65536 * scale) >> SHIFT;
     3e6:	0c12      	lsrs	r2, r2, #16
     3e8:	041b      	lsls	r3, r3, #16
     3ea:	431a      	orrs	r2, r3
	*baudval = baud_calculated;
     3ec:	8032      	strh	r2, [r6, #0]
	return STATUS_OK;
     3ee:	2200      	movs	r2, #0
     3f0:	e7e5      	b.n	3be <_sercom_get_async_baud_val+0x16>
	uint64_t baud_calculated = 0;
     3f2:	2200      	movs	r2, #0
	} else if(mode == SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL) {
     3f4:	2b01      	cmp	r3, #1
     3f6:	d1f9      	bne.n	3ec <_sercom_get_async_baud_val+0x44>
		temp1 = ((uint64_t)baudrate * sample_num);
     3f8:	000a      	movs	r2, r1
     3fa:	2300      	movs	r3, #0
     3fc:	2100      	movs	r1, #0
     3fe:	4c0d      	ldr	r4, [pc, #52]	; (434 <_sercom_get_async_baud_val+0x8c>)
     400:	47a0      	blx	r4
     402:	0002      	movs	r2, r0
     404:	000b      	movs	r3, r1
     406:	9200      	str	r2, [sp, #0]
     408:	9301      	str	r3, [sp, #4]
		baud_int = long_division( peripheral_clock, temp1);
     40a:	0038      	movs	r0, r7
     40c:	2100      	movs	r1, #0
     40e:	4c0a      	ldr	r4, [pc, #40]	; (438 <_sercom_get_async_baud_val+0x90>)
     410:	47a0      	blx	r4
     412:	0005      	movs	r5, r0
		if(baud_int > BAUD_INT_MAX) {
     414:	2380      	movs	r3, #128	; 0x80
     416:	019b      	lsls	r3, r3, #6
				return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     418:	2240      	movs	r2, #64	; 0x40
		if(baud_int > BAUD_INT_MAX) {
     41a:	4298      	cmp	r0, r3
     41c:	d8cf      	bhi.n	3be <_sercom_get_async_baud_val+0x16>
		temp1 = long_division( 8 * (uint64_t)peripheral_clock, temp1);
     41e:	0f79      	lsrs	r1, r7, #29
     420:	00f8      	lsls	r0, r7, #3
     422:	9a00      	ldr	r2, [sp, #0]
     424:	9b01      	ldr	r3, [sp, #4]
     426:	47a0      	blx	r4
		baud_fp = temp1 - 8 * baud_int;
     428:	00ea      	lsls	r2, r5, #3
     42a:	1a82      	subs	r2, r0, r2
		baud_calculated = baud_int | (baud_fp << 13);
     42c:	b2d2      	uxtb	r2, r2
     42e:	0352      	lsls	r2, r2, #13
     430:	432a      	orrs	r2, r5
     432:	e7db      	b.n	3ec <_sercom_get_async_baud_val+0x44>
     434:	00001685 	.word	0x00001685
     438:	000002c5 	.word	0x000002c5

0000043c <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
     43c:	b510      	push	{r4, lr}
     43e:	b082      	sub	sp, #8
     440:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
     442:	4b0e      	ldr	r3, [pc, #56]	; (47c <sercom_set_gclk_generator+0x40>)
     444:	781b      	ldrb	r3, [r3, #0]
     446:	2b00      	cmp	r3, #0
     448:	d007      	beq.n	45a <sercom_set_gclk_generator+0x1e>
     44a:	2900      	cmp	r1, #0
     44c:	d105      	bne.n	45a <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
     44e:	4b0b      	ldr	r3, [pc, #44]	; (47c <sercom_set_gclk_generator+0x40>)
     450:	785b      	ldrb	r3, [r3, #1]
     452:	4283      	cmp	r3, r0
     454:	d010      	beq.n	478 <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
     456:	201d      	movs	r0, #29
     458:	e00c      	b.n	474 <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
     45a:	a901      	add	r1, sp, #4
     45c:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
     45e:	2013      	movs	r0, #19
     460:	4b07      	ldr	r3, [pc, #28]	; (480 <sercom_set_gclk_generator+0x44>)
     462:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
     464:	2013      	movs	r0, #19
     466:	4b07      	ldr	r3, [pc, #28]	; (484 <sercom_set_gclk_generator+0x48>)
     468:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
     46a:	4b04      	ldr	r3, [pc, #16]	; (47c <sercom_set_gclk_generator+0x40>)
     46c:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
     46e:	2201      	movs	r2, #1
     470:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
     472:	2000      	movs	r0, #0
}
     474:	b002      	add	sp, #8
     476:	bd10      	pop	{r4, pc}
		return STATUS_OK;
     478:	2000      	movs	r0, #0
     47a:	e7fb      	b.n	474 <sercom_set_gclk_generator+0x38>
     47c:	20000088 	.word	0x20000088
     480:	00001039 	.word	0x00001039
     484:	00000fad 	.word	0x00000fad

00000488 <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
     488:	4b40      	ldr	r3, [pc, #256]	; (58c <_sercom_get_default_pad+0x104>)
     48a:	4298      	cmp	r0, r3
     48c:	d031      	beq.n	4f2 <_sercom_get_default_pad+0x6a>
     48e:	d90a      	bls.n	4a6 <_sercom_get_default_pad+0x1e>
     490:	4b3f      	ldr	r3, [pc, #252]	; (590 <_sercom_get_default_pad+0x108>)
     492:	4298      	cmp	r0, r3
     494:	d04d      	beq.n	532 <_sercom_get_default_pad+0xaa>
     496:	4b3f      	ldr	r3, [pc, #252]	; (594 <_sercom_get_default_pad+0x10c>)
     498:	4298      	cmp	r0, r3
     49a:	d05a      	beq.n	552 <_sercom_get_default_pad+0xca>
     49c:	4b3e      	ldr	r3, [pc, #248]	; (598 <_sercom_get_default_pad+0x110>)
     49e:	4298      	cmp	r0, r3
     4a0:	d037      	beq.n	512 <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
     4a2:	2000      	movs	r0, #0
}
     4a4:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
     4a6:	4b3d      	ldr	r3, [pc, #244]	; (59c <_sercom_get_default_pad+0x114>)
     4a8:	4298      	cmp	r0, r3
     4aa:	d00c      	beq.n	4c6 <_sercom_get_default_pad+0x3e>
     4ac:	4b3c      	ldr	r3, [pc, #240]	; (5a0 <_sercom_get_default_pad+0x118>)
     4ae:	4298      	cmp	r0, r3
     4b0:	d1f7      	bne.n	4a2 <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     4b2:	2901      	cmp	r1, #1
     4b4:	d017      	beq.n	4e6 <_sercom_get_default_pad+0x5e>
     4b6:	2900      	cmp	r1, #0
     4b8:	d05d      	beq.n	576 <_sercom_get_default_pad+0xee>
     4ba:	2902      	cmp	r1, #2
     4bc:	d015      	beq.n	4ea <_sercom_get_default_pad+0x62>
     4be:	2903      	cmp	r1, #3
     4c0:	d015      	beq.n	4ee <_sercom_get_default_pad+0x66>
	return 0;
     4c2:	2000      	movs	r0, #0
     4c4:	e7ee      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     4c6:	2901      	cmp	r1, #1
     4c8:	d007      	beq.n	4da <_sercom_get_default_pad+0x52>
     4ca:	2900      	cmp	r1, #0
     4cc:	d051      	beq.n	572 <_sercom_get_default_pad+0xea>
     4ce:	2902      	cmp	r1, #2
     4d0:	d005      	beq.n	4de <_sercom_get_default_pad+0x56>
     4d2:	2903      	cmp	r1, #3
     4d4:	d005      	beq.n	4e2 <_sercom_get_default_pad+0x5a>
	return 0;
     4d6:	2000      	movs	r0, #0
     4d8:	e7e4      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     4da:	4832      	ldr	r0, [pc, #200]	; (5a4 <_sercom_get_default_pad+0x11c>)
     4dc:	e7e2      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4de:	4832      	ldr	r0, [pc, #200]	; (5a8 <_sercom_get_default_pad+0x120>)
     4e0:	e7e0      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4e2:	4832      	ldr	r0, [pc, #200]	; (5ac <_sercom_get_default_pad+0x124>)
     4e4:	e7de      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4e6:	4832      	ldr	r0, [pc, #200]	; (5b0 <_sercom_get_default_pad+0x128>)
     4e8:	e7dc      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4ea:	4832      	ldr	r0, [pc, #200]	; (5b4 <_sercom_get_default_pad+0x12c>)
     4ec:	e7da      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4ee:	4832      	ldr	r0, [pc, #200]	; (5b8 <_sercom_get_default_pad+0x130>)
     4f0:	e7d8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     4f2:	2901      	cmp	r1, #1
     4f4:	d007      	beq.n	506 <_sercom_get_default_pad+0x7e>
     4f6:	2900      	cmp	r1, #0
     4f8:	d03f      	beq.n	57a <_sercom_get_default_pad+0xf2>
     4fa:	2902      	cmp	r1, #2
     4fc:	d005      	beq.n	50a <_sercom_get_default_pad+0x82>
     4fe:	2903      	cmp	r1, #3
     500:	d005      	beq.n	50e <_sercom_get_default_pad+0x86>
	return 0;
     502:	2000      	movs	r0, #0
     504:	e7ce      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     506:	482d      	ldr	r0, [pc, #180]	; (5bc <_sercom_get_default_pad+0x134>)
     508:	e7cc      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     50a:	482d      	ldr	r0, [pc, #180]	; (5c0 <_sercom_get_default_pad+0x138>)
     50c:	e7ca      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     50e:	482d      	ldr	r0, [pc, #180]	; (5c4 <_sercom_get_default_pad+0x13c>)
     510:	e7c8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     512:	2901      	cmp	r1, #1
     514:	d007      	beq.n	526 <_sercom_get_default_pad+0x9e>
     516:	2900      	cmp	r1, #0
     518:	d031      	beq.n	57e <_sercom_get_default_pad+0xf6>
     51a:	2902      	cmp	r1, #2
     51c:	d005      	beq.n	52a <_sercom_get_default_pad+0xa2>
     51e:	2903      	cmp	r1, #3
     520:	d005      	beq.n	52e <_sercom_get_default_pad+0xa6>
	return 0;
     522:	2000      	movs	r0, #0
     524:	e7be      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     526:	4828      	ldr	r0, [pc, #160]	; (5c8 <_sercom_get_default_pad+0x140>)
     528:	e7bc      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     52a:	4828      	ldr	r0, [pc, #160]	; (5cc <_sercom_get_default_pad+0x144>)
     52c:	e7ba      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     52e:	4828      	ldr	r0, [pc, #160]	; (5d0 <_sercom_get_default_pad+0x148>)
     530:	e7b8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     532:	2901      	cmp	r1, #1
     534:	d007      	beq.n	546 <_sercom_get_default_pad+0xbe>
     536:	2900      	cmp	r1, #0
     538:	d023      	beq.n	582 <_sercom_get_default_pad+0xfa>
     53a:	2902      	cmp	r1, #2
     53c:	d005      	beq.n	54a <_sercom_get_default_pad+0xc2>
     53e:	2903      	cmp	r1, #3
     540:	d005      	beq.n	54e <_sercom_get_default_pad+0xc6>
	return 0;
     542:	2000      	movs	r0, #0
     544:	e7ae      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     546:	4823      	ldr	r0, [pc, #140]	; (5d4 <_sercom_get_default_pad+0x14c>)
     548:	e7ac      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     54a:	4823      	ldr	r0, [pc, #140]	; (5d8 <_sercom_get_default_pad+0x150>)
     54c:	e7aa      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     54e:	4823      	ldr	r0, [pc, #140]	; (5dc <_sercom_get_default_pad+0x154>)
     550:	e7a8      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     552:	2901      	cmp	r1, #1
     554:	d007      	beq.n	566 <_sercom_get_default_pad+0xde>
     556:	2900      	cmp	r1, #0
     558:	d015      	beq.n	586 <_sercom_get_default_pad+0xfe>
     55a:	2902      	cmp	r1, #2
     55c:	d005      	beq.n	56a <_sercom_get_default_pad+0xe2>
     55e:	2903      	cmp	r1, #3
     560:	d005      	beq.n	56e <_sercom_get_default_pad+0xe6>
	return 0;
     562:	2000      	movs	r0, #0
     564:	e79e      	b.n	4a4 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     566:	481e      	ldr	r0, [pc, #120]	; (5e0 <_sercom_get_default_pad+0x158>)
     568:	e79c      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     56a:	481e      	ldr	r0, [pc, #120]	; (5e4 <_sercom_get_default_pad+0x15c>)
     56c:	e79a      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     56e:	481e      	ldr	r0, [pc, #120]	; (5e8 <_sercom_get_default_pad+0x160>)
     570:	e798      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     572:	481e      	ldr	r0, [pc, #120]	; (5ec <_sercom_get_default_pad+0x164>)
     574:	e796      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     576:	2003      	movs	r0, #3
     578:	e794      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     57a:	481d      	ldr	r0, [pc, #116]	; (5f0 <_sercom_get_default_pad+0x168>)
     57c:	e792      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     57e:	481d      	ldr	r0, [pc, #116]	; (5f4 <_sercom_get_default_pad+0x16c>)
     580:	e790      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     582:	481d      	ldr	r0, [pc, #116]	; (5f8 <_sercom_get_default_pad+0x170>)
     584:	e78e      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     586:	481d      	ldr	r0, [pc, #116]	; (5fc <_sercom_get_default_pad+0x174>)
     588:	e78c      	b.n	4a4 <_sercom_get_default_pad+0x1c>
     58a:	46c0      	nop			; (mov r8, r8)
     58c:	42001000 	.word	0x42001000
     590:	42001800 	.word	0x42001800
     594:	42001c00 	.word	0x42001c00
     598:	42001400 	.word	0x42001400
     59c:	42000800 	.word	0x42000800
     5a0:	42000c00 	.word	0x42000c00
     5a4:	00050003 	.word	0x00050003
     5a8:	00060003 	.word	0x00060003
     5ac:	00070003 	.word	0x00070003
     5b0:	00010003 	.word	0x00010003
     5b4:	001e0003 	.word	0x001e0003
     5b8:	001f0003 	.word	0x001f0003
     5bc:	00090003 	.word	0x00090003
     5c0:	000a0003 	.word	0x000a0003
     5c4:	000b0003 	.word	0x000b0003
     5c8:	00110003 	.word	0x00110003
     5cc:	00120003 	.word	0x00120003
     5d0:	00130003 	.word	0x00130003
     5d4:	000d0003 	.word	0x000d0003
     5d8:	000e0003 	.word	0x000e0003
     5dc:	000f0003 	.word	0x000f0003
     5e0:	00170003 	.word	0x00170003
     5e4:	00180003 	.word	0x00180003
     5e8:	00190003 	.word	0x00190003
     5ec:	00040003 	.word	0x00040003
     5f0:	00080003 	.word	0x00080003
     5f4:	00100003 	.word	0x00100003
     5f8:	000c0003 	.word	0x000c0003
     5fc:	00160003 	.word	0x00160003

00000600 <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
     600:	b530      	push	{r4, r5, lr}
     602:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
     604:	4b0b      	ldr	r3, [pc, #44]	; (634 <_sercom_get_sercom_inst_index+0x34>)
     606:	466a      	mov	r2, sp
     608:	cb32      	ldmia	r3!, {r1, r4, r5}
     60a:	c232      	stmia	r2!, {r1, r4, r5}
     60c:	cb32      	ldmia	r3!, {r1, r4, r5}
     60e:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
     610:	9b00      	ldr	r3, [sp, #0]
     612:	4283      	cmp	r3, r0
     614:	d00b      	beq.n	62e <_sercom_get_sercom_inst_index+0x2e>
     616:	2301      	movs	r3, #1
     618:	009a      	lsls	r2, r3, #2
     61a:	4669      	mov	r1, sp
     61c:	5852      	ldr	r2, [r2, r1]
     61e:	4282      	cmp	r2, r0
     620:	d006      	beq.n	630 <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     622:	3301      	adds	r3, #1
     624:	2b06      	cmp	r3, #6
     626:	d1f7      	bne.n	618 <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
     628:	2000      	movs	r0, #0
}
     62a:	b007      	add	sp, #28
     62c:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     62e:	2300      	movs	r3, #0
			return i;
     630:	b2d8      	uxtb	r0, r3
     632:	e7fa      	b.n	62a <_sercom_get_sercom_inst_index+0x2a>
     634:	00004edc 	.word	0x00004edc

00000638 <_tc_interrupt_handler>:
 * \param[in]  instance  ID of the TC instance calling the interrupt
 *                       handler
 */
void _tc_interrupt_handler(
		uint8_t instance)
{
     638:	b570      	push	{r4, r5, r6, lr}
	/* Temporary variable */
	uint8_t interrupt_and_callback_status_mask;

	/* Get device instance from the look-up table */
	struct tc_module *module
     63a:	0080      	lsls	r0, r0, #2
     63c:	4b16      	ldr	r3, [pc, #88]	; (698 <_tc_interrupt_handler+0x60>)
     63e:	58c4      	ldr	r4, [r0, r3]
			= (struct tc_module *)_tc_instances[instance];

	/* Read and mask interrupt flag register */
	interrupt_and_callback_status_mask = module->hw->COUNT8.INTFLAG.reg &
     640:	6823      	ldr	r3, [r4, #0]
     642:	7b9d      	ldrb	r5, [r3, #14]
     644:	7e22      	ldrb	r2, [r4, #24]
     646:	7e63      	ldrb	r3, [r4, #25]
     648:	4013      	ands	r3, r2
     64a:	401d      	ands	r5, r3
			module->register_callback_mask &
			module->enable_callback_mask;

	/* Check if an Overflow interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_OVF) {
     64c:	07eb      	lsls	r3, r5, #31
     64e:	d406      	bmi.n	65e <_tc_interrupt_handler+0x26>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
	}

	/* Check if an Error interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_ERR) {
     650:	07ab      	lsls	r3, r5, #30
     652:	d40b      	bmi.n	66c <_tc_interrupt_handler+0x34>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_ERR;
	}

	/* Check if an Match/Capture Channel 0 interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_MC(1)) {
     654:	06eb      	lsls	r3, r5, #27
     656:	d410      	bmi.n	67a <_tc_interrupt_handler+0x42>
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(1);
	}

	/* Check if an Match/Capture Channel 1 interrupt has occurred */
	if (interrupt_and_callback_status_mask & TC_INTFLAG_MC(2)) {
     658:	06ab      	lsls	r3, r5, #26
     65a:	d415      	bmi.n	688 <_tc_interrupt_handler+0x50>
		/* Invoke registered and enabled callback function */
		(module->callback[TC_CALLBACK_CC_CHANNEL1])(module);
		/* Clear interrupt flag */
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(2);
	}
}
     65c:	bd70      	pop	{r4, r5, r6, pc}
		(module->callback[TC_CALLBACK_OVERFLOW])(module);
     65e:	0020      	movs	r0, r4
     660:	68a3      	ldr	r3, [r4, #8]
     662:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_OVF;
     664:	2301      	movs	r3, #1
     666:	6822      	ldr	r2, [r4, #0]
     668:	7393      	strb	r3, [r2, #14]
     66a:	e7f1      	b.n	650 <_tc_interrupt_handler+0x18>
		(module->callback[TC_CALLBACK_ERROR])(module);
     66c:	0020      	movs	r0, r4
     66e:	68e3      	ldr	r3, [r4, #12]
     670:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_ERR;
     672:	2302      	movs	r3, #2
     674:	6822      	ldr	r2, [r4, #0]
     676:	7393      	strb	r3, [r2, #14]
     678:	e7ec      	b.n	654 <_tc_interrupt_handler+0x1c>
		(module->callback[TC_CALLBACK_CC_CHANNEL0])(module);
     67a:	0020      	movs	r0, r4
     67c:	6923      	ldr	r3, [r4, #16]
     67e:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(1);
     680:	2310      	movs	r3, #16
     682:	6822      	ldr	r2, [r4, #0]
     684:	7393      	strb	r3, [r2, #14]
     686:	e7e7      	b.n	658 <_tc_interrupt_handler+0x20>
		(module->callback[TC_CALLBACK_CC_CHANNEL1])(module);
     688:	0020      	movs	r0, r4
     68a:	6963      	ldr	r3, [r4, #20]
     68c:	4798      	blx	r3
		module->hw->COUNT8.INTFLAG.reg = TC_INTFLAG_MC(2);
     68e:	6823      	ldr	r3, [r4, #0]
     690:	2220      	movs	r2, #32
     692:	739a      	strb	r2, [r3, #14]
}
     694:	e7e2      	b.n	65c <_tc_interrupt_handler+0x24>
     696:	46c0      	nop			; (mov r8, r8)
     698:	20000104 	.word	0x20000104

0000069c <TC3_Handler>:
	MRECURSION(TC_INST_NUM, _TC_INTERRUPT_HANDLER, TC_INST_MAX_ID)
     69c:	b510      	push	{r4, lr}
     69e:	2000      	movs	r0, #0
     6a0:	4b01      	ldr	r3, [pc, #4]	; (6a8 <TC3_Handler+0xc>)
     6a2:	4798      	blx	r3
     6a4:	bd10      	pop	{r4, pc}
     6a6:	46c0      	nop			; (mov r8, r8)
     6a8:	00000639 	.word	0x00000639

000006ac <TC4_Handler>:
     6ac:	b510      	push	{r4, lr}
     6ae:	2001      	movs	r0, #1
     6b0:	4b01      	ldr	r3, [pc, #4]	; (6b8 <TC4_Handler+0xc>)
     6b2:	4798      	blx	r3
     6b4:	bd10      	pop	{r4, pc}
     6b6:	46c0      	nop			; (mov r8, r8)
     6b8:	00000639 	.word	0x00000639

000006bc <TC5_Handler>:
     6bc:	b510      	push	{r4, lr}
     6be:	2002      	movs	r0, #2
     6c0:	4b01      	ldr	r3, [pc, #4]	; (6c8 <TC5_Handler+0xc>)
     6c2:	4798      	blx	r3
     6c4:	bd10      	pop	{r4, pc}
     6c6:	46c0      	nop			; (mov r8, r8)
     6c8:	00000639 	.word	0x00000639

000006cc <TC6_Handler>:
     6cc:	b510      	push	{r4, lr}
     6ce:	2003      	movs	r0, #3
     6d0:	4b01      	ldr	r3, [pc, #4]	; (6d8 <TC6_Handler+0xc>)
     6d2:	4798      	blx	r3
     6d4:	bd10      	pop	{r4, pc}
     6d6:	46c0      	nop			; (mov r8, r8)
     6d8:	00000639 	.word	0x00000639

000006dc <TC7_Handler>:
     6dc:	b510      	push	{r4, lr}
     6de:	2004      	movs	r0, #4
     6e0:	4b01      	ldr	r3, [pc, #4]	; (6e8 <TC7_Handler+0xc>)
     6e2:	4798      	blx	r3
     6e4:	bd10      	pop	{r4, pc}
     6e6:	46c0      	nop			; (mov r8, r8)
     6e8:	00000639 	.word	0x00000639

000006ec <usart_init>:
 */
enum status_code usart_init(
		struct usart_module *const module,
		Sercom *const hw,
		const struct usart_config *const config)
{
     6ec:	b5f0      	push	{r4, r5, r6, r7, lr}
     6ee:	46de      	mov	lr, fp
     6f0:	4657      	mov	r7, sl
     6f2:	464e      	mov	r6, r9
     6f4:	4645      	mov	r5, r8
     6f6:	b5e0      	push	{r5, r6, r7, lr}
     6f8:	b091      	sub	sp, #68	; 0x44
     6fa:	0005      	movs	r5, r0
     6fc:	000c      	movs	r4, r1
     6fe:	0016      	movs	r6, r2
	Assert(config);

	enum status_code status_code = STATUS_OK;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
     700:	6029      	str	r1, [r5, #0]

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     702:	0008      	movs	r0, r1
     704:	4bab      	ldr	r3, [pc, #684]	; (9b4 <usart_init+0x2c8>)
     706:	4798      	blx	r3
     708:	0002      	movs	r2, r0
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
#endif

	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     70a:	6823      	ldr	r3, [r4, #0]
		/* The module is busy resetting itself */
		return STATUS_BUSY;
     70c:	2005      	movs	r0, #5
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     70e:	07db      	lsls	r3, r3, #31
     710:	d506      	bpl.n	720 <usart_init+0x34>
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
	_sercom_instances[instance_index] = module;
#endif

	return status_code;
}
     712:	b011      	add	sp, #68	; 0x44
     714:	bc3c      	pop	{r2, r3, r4, r5}
     716:	4690      	mov	r8, r2
     718:	4699      	mov	r9, r3
     71a:	46a2      	mov	sl, r4
     71c:	46ab      	mov	fp, r5
     71e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     720:	6823      	ldr	r3, [r4, #0]
		return STATUS_ERR_DENIED;
     722:	3017      	adds	r0, #23
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     724:	079b      	lsls	r3, r3, #30
     726:	d4f4      	bmi.n	712 <usart_init+0x26>
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
     728:	49a3      	ldr	r1, [pc, #652]	; (9b8 <usart_init+0x2cc>)
     72a:	6a08      	ldr	r0, [r1, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     72c:	1c97      	adds	r7, r2, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     72e:	2301      	movs	r3, #1
     730:	40bb      	lsls	r3, r7
     732:	4303      	orrs	r3, r0
     734:	620b      	str	r3, [r1, #32]
	gclk_chan_conf.source_generator = config->generator_source;
     736:	a90f      	add	r1, sp, #60	; 0x3c
     738:	272d      	movs	r7, #45	; 0x2d
     73a:	5df3      	ldrb	r3, [r6, r7]
     73c:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     73e:	3214      	adds	r2, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     740:	b2d3      	uxtb	r3, r2
     742:	9302      	str	r3, [sp, #8]
     744:	0018      	movs	r0, r3
     746:	4b9d      	ldr	r3, [pc, #628]	; (9bc <usart_init+0x2d0>)
     748:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     74a:	9802      	ldr	r0, [sp, #8]
     74c:	4b9c      	ldr	r3, [pc, #624]	; (9c0 <usart_init+0x2d4>)
     74e:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     750:	5df0      	ldrb	r0, [r6, r7]
     752:	2100      	movs	r1, #0
     754:	4b9b      	ldr	r3, [pc, #620]	; (9c4 <usart_init+0x2d8>)
     756:	4798      	blx	r3
	module->character_size = config->character_size;
     758:	7af3      	ldrb	r3, [r6, #11]
     75a:	716b      	strb	r3, [r5, #5]
	module->receiver_enabled = config->receiver_enable;
     75c:	2324      	movs	r3, #36	; 0x24
     75e:	5cf3      	ldrb	r3, [r6, r3]
     760:	71ab      	strb	r3, [r5, #6]
	module->transmitter_enabled = config->transmitter_enable;
     762:	2325      	movs	r3, #37	; 0x25
     764:	5cf3      	ldrb	r3, [r6, r3]
     766:	71eb      	strb	r3, [r5, #7]
	module->lin_slave_enabled = config->lin_slave_enable;
     768:	7ef3      	ldrb	r3, [r6, #27]
     76a:	722b      	strb	r3, [r5, #8]
	module->start_frame_detection_enabled = config->start_frame_detection_enable;
     76c:	7f33      	ldrb	r3, [r6, #28]
     76e:	726b      	strb	r3, [r5, #9]
	SercomUsart *const usart_hw = &(module->hw->USART);
     770:	682b      	ldr	r3, [r5, #0]
     772:	4698      	mov	r8, r3
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     774:	0018      	movs	r0, r3
     776:	4b8f      	ldr	r3, [pc, #572]	; (9b4 <usart_init+0x2c8>)
     778:	4798      	blx	r3
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     77a:	3014      	adds	r0, #20
	uint16_t baud  = 0;
     77c:	2200      	movs	r2, #0
     77e:	230e      	movs	r3, #14
     780:	a906      	add	r1, sp, #24
     782:	468c      	mov	ip, r1
     784:	4463      	add	r3, ip
     786:	801a      	strh	r2, [r3, #0]
	switch (config->sample_rate) {
     788:	8a32      	ldrh	r2, [r6, #16]
     78a:	9202      	str	r2, [sp, #8]
     78c:	2380      	movs	r3, #128	; 0x80
     78e:	01db      	lsls	r3, r3, #7
     790:	429a      	cmp	r2, r3
     792:	d100      	bne.n	796 <usart_init+0xaa>
     794:	e09b      	b.n	8ce <usart_init+0x1e2>
     796:	d90f      	bls.n	7b8 <usart_init+0xcc>
     798:	23c0      	movs	r3, #192	; 0xc0
     79a:	01db      	lsls	r3, r3, #7
     79c:	9a02      	ldr	r2, [sp, #8]
     79e:	429a      	cmp	r2, r3
     7a0:	d100      	bne.n	7a4 <usart_init+0xb8>
     7a2:	e08f      	b.n	8c4 <usart_init+0x1d8>
     7a4:	2380      	movs	r3, #128	; 0x80
     7a6:	021b      	lsls	r3, r3, #8
     7a8:	429a      	cmp	r2, r3
     7aa:	d000      	beq.n	7ae <usart_init+0xc2>
     7ac:	e0fd      	b.n	9aa <usart_init+0x2be>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_3;
     7ae:	2303      	movs	r3, #3
     7b0:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     7b2:	2300      	movs	r3, #0
     7b4:	9307      	str	r3, [sp, #28]
     7b6:	e008      	b.n	7ca <usart_init+0xde>
	switch (config->sample_rate) {
     7b8:	2380      	movs	r3, #128	; 0x80
     7ba:	019b      	lsls	r3, r3, #6
     7bc:	429a      	cmp	r2, r3
     7be:	d000      	beq.n	7c2 <usart_init+0xd6>
     7c0:	e0f3      	b.n	9aa <usart_init+0x2be>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     7c2:	2310      	movs	r3, #16
     7c4:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     7c6:	3b0f      	subs	r3, #15
     7c8:	9307      	str	r3, [sp, #28]
	ctrla = (uint32_t)config->data_order |
     7ca:	6833      	ldr	r3, [r6, #0]
     7cc:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
     7ce:	68f3      	ldr	r3, [r6, #12]
     7d0:	9305      	str	r3, [sp, #20]
		config->sample_adjustment |
     7d2:	6973      	ldr	r3, [r6, #20]
     7d4:	9304      	str	r3, [sp, #16]
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     7d6:	7e33      	ldrb	r3, [r6, #24]
     7d8:	9303      	str	r3, [sp, #12]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     7da:	2326      	movs	r3, #38	; 0x26
     7dc:	5cf3      	ldrb	r3, [r6, r3]
     7de:	469a      	mov	sl, r3
	transfer_mode = (uint32_t)config->transfer_mode;
     7e0:	6873      	ldr	r3, [r6, #4]
     7e2:	4699      	mov	r9, r3
	switch (transfer_mode)
     7e4:	2b00      	cmp	r3, #0
     7e6:	d100      	bne.n	7ea <usart_init+0xfe>
     7e8:	e09d      	b.n	926 <usart_init+0x23a>
     7ea:	2380      	movs	r3, #128	; 0x80
     7ec:	055b      	lsls	r3, r3, #21
     7ee:	4599      	cmp	r9, r3
     7f0:	d100      	bne.n	7f4 <usart_init+0x108>
     7f2:	e081      	b.n	8f8 <usart_init+0x20c>
	if(config->encoding_format_enable) {
     7f4:	7e73      	ldrb	r3, [r6, #25]
     7f6:	2b00      	cmp	r3, #0
     7f8:	d002      	beq.n	800 <usart_init+0x114>
		usart_hw->RXPL.reg = config->receive_pulse_length;
     7fa:	7eb3      	ldrb	r3, [r6, #26]
     7fc:	4642      	mov	r2, r8
     7fe:	7393      	strb	r3, [r2, #14]
	usart_hw->BAUD.reg = baud;
     800:	230e      	movs	r3, #14
     802:	aa06      	add	r2, sp, #24
     804:	4694      	mov	ip, r2
     806:	4463      	add	r3, ip
     808:	881b      	ldrh	r3, [r3, #0]
     80a:	4642      	mov	r2, r8
     80c:	8193      	strh	r3, [r2, #12]
	ctrla |= transfer_mode;
     80e:	465b      	mov	r3, fp
     810:	9a05      	ldr	r2, [sp, #20]
     812:	4313      	orrs	r3, r2
     814:	9a04      	ldr	r2, [sp, #16]
     816:	4313      	orrs	r3, r2
     818:	464a      	mov	r2, r9
     81a:	4313      	orrs	r3, r2
     81c:	9f02      	ldr	r7, [sp, #8]
     81e:	431f      	orrs	r7, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     820:	9b03      	ldr	r3, [sp, #12]
     822:	021b      	lsls	r3, r3, #8
	ctrla |= transfer_mode;
     824:	431f      	orrs	r7, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     826:	4653      	mov	r3, sl
     828:	075b      	lsls	r3, r3, #29
	ctrla |= transfer_mode;
     82a:	431f      	orrs	r7, r3
	if (config->use_external_clock == false) {
     82c:	2327      	movs	r3, #39	; 0x27
     82e:	5cf3      	ldrb	r3, [r6, r3]
     830:	2b00      	cmp	r3, #0
     832:	d101      	bne.n	838 <usart_init+0x14c>
		ctrla |= SERCOM_USART_CTRLA_MODE(0x1);
     834:	3304      	adds	r3, #4
     836:	431f      	orrs	r7, r3
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     838:	7e73      	ldrb	r3, [r6, #25]
     83a:	029b      	lsls	r3, r3, #10
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     83c:	7f32      	ldrb	r2, [r6, #28]
     83e:	0252      	lsls	r2, r2, #9
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     840:	4313      	orrs	r3, r2
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     842:	7f72      	ldrb	r2, [r6, #29]
     844:	0212      	lsls	r2, r2, #8
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     846:	4313      	orrs	r3, r2
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     848:	2224      	movs	r2, #36	; 0x24
     84a:	5cb2      	ldrb	r2, [r6, r2]
     84c:	0452      	lsls	r2, r2, #17
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     84e:	4313      	orrs	r3, r2
			(config->transmitter_enable << SERCOM_USART_CTRLB_TXEN_Pos);
     850:	2225      	movs	r2, #37	; 0x25
     852:	5cb2      	ldrb	r2, [r6, r2]
     854:	0412      	lsls	r2, r2, #16
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     856:	4313      	orrs	r3, r2
	ctrlb |= (uint32_t)config->character_size;
     858:	7ab1      	ldrb	r1, [r6, #10]
     85a:	7af2      	ldrb	r2, [r6, #11]
     85c:	4311      	orrs	r1, r2
     85e:	4319      	orrs	r1, r3
	if (config->parity != USART_PARITY_NONE) {
     860:	8933      	ldrh	r3, [r6, #8]
     862:	2bff      	cmp	r3, #255	; 0xff
     864:	d100      	bne.n	868 <usart_init+0x17c>
     866:	e082      	b.n	96e <usart_init+0x282>
		ctrla |= SERCOM_USART_CTRLA_FORM(1);
     868:	2280      	movs	r2, #128	; 0x80
     86a:	0452      	lsls	r2, r2, #17
     86c:	4317      	orrs	r7, r2
		ctrlb |= config->parity;
     86e:	4319      	orrs	r1, r3
	if (config->run_in_standby || system_is_debugger_present()) {
     870:	232c      	movs	r3, #44	; 0x2c
     872:	5cf3      	ldrb	r3, [r6, r3]
     874:	2b00      	cmp	r3, #0
     876:	d103      	bne.n	880 <usart_init+0x194>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     878:	4b53      	ldr	r3, [pc, #332]	; (9c8 <usart_init+0x2dc>)
     87a:	789b      	ldrb	r3, [r3, #2]
     87c:	079b      	lsls	r3, r3, #30
     87e:	d501      	bpl.n	884 <usart_init+0x198>
		ctrla |= SERCOM_USART_CTRLA_RUNSTDBY;
     880:	2380      	movs	r3, #128	; 0x80
     882:	431f      	orrs	r7, r3
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomUsart *const usart_hw = &(module->hw->USART);
     884:	682a      	ldr	r2, [r5, #0]

#ifdef FEATURE_USART_SYNC_SCHEME_V2
	return (usart_hw->SYNCBUSY.reg);
     886:	69d3      	ldr	r3, [r2, #28]
		const struct usart_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (usart_is_syncing(module)) {
     888:	2b00      	cmp	r3, #0
     88a:	d1fc      	bne.n	886 <usart_init+0x19a>
	usart_hw->CTRLB.reg = ctrlb;
     88c:	4643      	mov	r3, r8
     88e:	6059      	str	r1, [r3, #4]
	SercomUsart *const usart_hw = &(module->hw->USART);
     890:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     892:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     894:	2b00      	cmp	r3, #0
     896:	d1fc      	bne.n	892 <usart_init+0x1a6>
	usart_hw->CTRLA.reg = ctrla;
     898:	4643      	mov	r3, r8
     89a:	601f      	str	r7, [r3, #0]
	config->mux_position = SYSTEM_PINMUX_GPIO;
     89c:	ab0e      	add	r3, sp, #56	; 0x38
     89e:	2280      	movs	r2, #128	; 0x80
     8a0:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     8a2:	2200      	movs	r2, #0
     8a4:	705a      	strb	r2, [r3, #1]
	config->powersave    = false;
     8a6:	70da      	strb	r2, [r3, #3]
	pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
     8a8:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
     8aa:	6b33      	ldr	r3, [r6, #48]	; 0x30
     8ac:	930a      	str	r3, [sp, #40]	; 0x28
     8ae:	6b73      	ldr	r3, [r6, #52]	; 0x34
     8b0:	930b      	str	r3, [sp, #44]	; 0x2c
     8b2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
     8b4:	930c      	str	r3, [sp, #48]	; 0x30
     8b6:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
     8b8:	9302      	str	r3, [sp, #8]
     8ba:	930d      	str	r3, [sp, #52]	; 0x34
     8bc:	2700      	movs	r7, #0
		uint32_t current_pinmux = pad_pinmuxes[pad];
     8be:	ad0a      	add	r5, sp, #40	; 0x28
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     8c0:	4e42      	ldr	r6, [pc, #264]	; (9cc <usart_init+0x2e0>)
     8c2:	e063      	b.n	98c <usart_init+0x2a0>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     8c4:	2308      	movs	r3, #8
     8c6:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     8c8:	3b07      	subs	r3, #7
     8ca:	9307      	str	r3, [sp, #28]
     8cc:	e77d      	b.n	7ca <usart_init+0xde>
	ctrla = (uint32_t)config->data_order |
     8ce:	6833      	ldr	r3, [r6, #0]
     8d0:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
     8d2:	68f3      	ldr	r3, [r6, #12]
     8d4:	9305      	str	r3, [sp, #20]
		config->sample_adjustment |
     8d6:	6973      	ldr	r3, [r6, #20]
     8d8:	9304      	str	r3, [sp, #16]
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     8da:	7e33      	ldrb	r3, [r6, #24]
     8dc:	9303      	str	r3, [sp, #12]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     8de:	2326      	movs	r3, #38	; 0x26
     8e0:	5cf3      	ldrb	r3, [r6, r3]
     8e2:	469a      	mov	sl, r3
	transfer_mode = (uint32_t)config->transfer_mode;
     8e4:	6873      	ldr	r3, [r6, #4]
     8e6:	4699      	mov	r9, r3
	switch (transfer_mode)
     8e8:	2b00      	cmp	r3, #0
     8ea:	d018      	beq.n	91e <usart_init+0x232>
     8ec:	2380      	movs	r3, #128	; 0x80
     8ee:	055b      	lsls	r3, r3, #21
     8f0:	4599      	cmp	r9, r3
     8f2:	d001      	beq.n	8f8 <usart_init+0x20c>
	enum status_code status_code = STATUS_OK;
     8f4:	2000      	movs	r0, #0
     8f6:	e025      	b.n	944 <usart_init+0x258>
			if (!config->use_external_clock) {
     8f8:	2327      	movs	r3, #39	; 0x27
     8fa:	5cf3      	ldrb	r3, [r6, r3]
     8fc:	2b00      	cmp	r3, #0
     8fe:	d000      	beq.n	902 <usart_init+0x216>
     900:	e778      	b.n	7f4 <usart_init+0x108>
				status_code = _sercom_get_sync_baud_val(config->baudrate,
     902:	6a33      	ldr	r3, [r6, #32]
     904:	001f      	movs	r7, r3
     906:	b2c0      	uxtb	r0, r0
     908:	4b31      	ldr	r3, [pc, #196]	; (9d0 <usart_init+0x2e4>)
     90a:	4798      	blx	r3
     90c:	0001      	movs	r1, r0
     90e:	220e      	movs	r2, #14
     910:	ab06      	add	r3, sp, #24
     912:	469c      	mov	ip, r3
     914:	4462      	add	r2, ip
     916:	0038      	movs	r0, r7
     918:	4b2e      	ldr	r3, [pc, #184]	; (9d4 <usart_init+0x2e8>)
     91a:	4798      	blx	r3
     91c:	e012      	b.n	944 <usart_init+0x258>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     91e:	2308      	movs	r3, #8
     920:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     922:	2300      	movs	r3, #0
     924:	9307      	str	r3, [sp, #28]
			if (config->use_external_clock) {
     926:	2327      	movs	r3, #39	; 0x27
     928:	5cf3      	ldrb	r3, [r6, r3]
     92a:	2b00      	cmp	r3, #0
     92c:	d00e      	beq.n	94c <usart_init+0x260>
				status_code =
     92e:	9b06      	ldr	r3, [sp, #24]
     930:	9300      	str	r3, [sp, #0]
     932:	9b07      	ldr	r3, [sp, #28]
     934:	220e      	movs	r2, #14
     936:	a906      	add	r1, sp, #24
     938:	468c      	mov	ip, r1
     93a:	4462      	add	r2, ip
     93c:	6ab1      	ldr	r1, [r6, #40]	; 0x28
     93e:	6a30      	ldr	r0, [r6, #32]
     940:	4f25      	ldr	r7, [pc, #148]	; (9d8 <usart_init+0x2ec>)
     942:	47b8      	blx	r7
	if (status_code != STATUS_OK) {
     944:	2800      	cmp	r0, #0
     946:	d000      	beq.n	94a <usart_init+0x25e>
     948:	e6e3      	b.n	712 <usart_init+0x26>
     94a:	e753      	b.n	7f4 <usart_init+0x108>
						_sercom_get_async_baud_val(config->baudrate,
     94c:	6a33      	ldr	r3, [r6, #32]
     94e:	001f      	movs	r7, r3
     950:	b2c0      	uxtb	r0, r0
     952:	4b1f      	ldr	r3, [pc, #124]	; (9d0 <usart_init+0x2e4>)
     954:	4798      	blx	r3
     956:	0001      	movs	r1, r0
				status_code =
     958:	9b06      	ldr	r3, [sp, #24]
     95a:	9300      	str	r3, [sp, #0]
     95c:	9b07      	ldr	r3, [sp, #28]
     95e:	220e      	movs	r2, #14
     960:	a806      	add	r0, sp, #24
     962:	4684      	mov	ip, r0
     964:	4462      	add	r2, ip
     966:	0038      	movs	r0, r7
     968:	4f1b      	ldr	r7, [pc, #108]	; (9d8 <usart_init+0x2ec>)
     96a:	47b8      	blx	r7
     96c:	e7ea      	b.n	944 <usart_init+0x258>
		if(config->lin_slave_enable) {
     96e:	7ef3      	ldrb	r3, [r6, #27]
     970:	2b00      	cmp	r3, #0
     972:	d100      	bne.n	976 <usart_init+0x28a>
     974:	e77c      	b.n	870 <usart_init+0x184>
			ctrla |= SERCOM_USART_CTRLA_FORM(0x4);
     976:	2380      	movs	r3, #128	; 0x80
     978:	04db      	lsls	r3, r3, #19
     97a:	431f      	orrs	r7, r3
     97c:	e778      	b.n	870 <usart_init+0x184>
			current_pinmux = _sercom_get_default_pad(hw, pad);
     97e:	0020      	movs	r0, r4
     980:	4b16      	ldr	r3, [pc, #88]	; (9dc <usart_init+0x2f0>)
     982:	4798      	blx	r3
     984:	e007      	b.n	996 <usart_init+0x2aa>
     986:	3701      	adds	r7, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
     988:	2f04      	cmp	r7, #4
     98a:	d00c      	beq.n	9a6 <usart_init+0x2ba>
     98c:	b2f9      	uxtb	r1, r7
		uint32_t current_pinmux = pad_pinmuxes[pad];
     98e:	00bb      	lsls	r3, r7, #2
     990:	5958      	ldr	r0, [r3, r5]
		if (current_pinmux == PINMUX_DEFAULT) {
     992:	2800      	cmp	r0, #0
     994:	d0f3      	beq.n	97e <usart_init+0x292>
		if (current_pinmux != PINMUX_UNUSED) {
     996:	1c43      	adds	r3, r0, #1
     998:	d0f5      	beq.n	986 <usart_init+0x29a>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
     99a:	a90e      	add	r1, sp, #56	; 0x38
     99c:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     99e:	0c00      	lsrs	r0, r0, #16
     9a0:	b2c0      	uxtb	r0, r0
     9a2:	47b0      	blx	r6
     9a4:	e7ef      	b.n	986 <usart_init+0x29a>
	return status_code;
     9a6:	2000      	movs	r0, #0
     9a8:	e6b3      	b.n	712 <usart_init+0x26>
	enum sercom_asynchronous_sample_num sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     9aa:	2310      	movs	r3, #16
     9ac:	9306      	str	r3, [sp, #24]
	enum sercom_asynchronous_operation_mode mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     9ae:	2300      	movs	r3, #0
     9b0:	9307      	str	r3, [sp, #28]
     9b2:	e70a      	b.n	7ca <usart_init+0xde>
     9b4:	00000601 	.word	0x00000601
     9b8:	40000400 	.word	0x40000400
     9bc:	00001039 	.word	0x00001039
     9c0:	00000fad 	.word	0x00000fad
     9c4:	0000043d 	.word	0x0000043d
     9c8:	41002000 	.word	0x41002000
     9cc:	00001131 	.word	0x00001131
     9d0:	00001055 	.word	0x00001055
     9d4:	0000037f 	.word	0x0000037f
     9d8:	000003a9 	.word	0x000003a9
     9dc:	00000489 	.word	0x00000489

000009e0 <usart_write_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the transmitter is enabled */
	if (!(module->transmitter_enabled)) {
     9e0:	79c2      	ldrb	r2, [r0, #7]
		return STATUS_ERR_DENIED;
     9e2:	231c      	movs	r3, #28
	if (!(module->transmitter_enabled)) {
     9e4:	2a00      	cmp	r2, #0
     9e6:	d101      	bne.n	9ec <usart_write_wait+0xc>
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
		/* Wait until data is sent */
	}

	return STATUS_OK;
}
     9e8:	0018      	movs	r0, r3
     9ea:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
     9ec:	6802      	ldr	r2, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
     9ee:	7e10      	ldrb	r0, [r2, #24]
		return STATUS_BUSY;
     9f0:	3b17      	subs	r3, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
     9f2:	07c0      	lsls	r0, r0, #31
     9f4:	d5f8      	bpl.n	9e8 <usart_write_wait+0x8>
	usart_hw->DATA.reg = tx_data;
     9f6:	8511      	strh	r1, [r2, #40]	; 0x28
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
     9f8:	2102      	movs	r1, #2
     9fa:	7e13      	ldrb	r3, [r2, #24]
     9fc:	420b      	tst	r3, r1
     9fe:	d0fc      	beq.n	9fa <usart_write_wait+0x1a>
	return STATUS_OK;
     a00:	2300      	movs	r3, #0
     a02:	e7f1      	b.n	9e8 <usart_write_wait+0x8>

00000a04 <usart_read_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the receiver is enabled */
	if (!(module->receiver_enabled)) {
     a04:	7982      	ldrb	r2, [r0, #6]
		return STATUS_ERR_DENIED;
     a06:	231c      	movs	r3, #28
	if (!(module->receiver_enabled)) {
     a08:	2a00      	cmp	r2, #0
     a0a:	d101      	bne.n	a10 <usart_read_wait+0xc>

	/* Read data from USART module */
	*rx_data = usart_hw->DATA.reg;

	return STATUS_OK;
}
     a0c:	0018      	movs	r0, r3
     a0e:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
     a10:	6802      	ldr	r2, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
     a12:	7e10      	ldrb	r0, [r2, #24]
		return STATUS_BUSY;
     a14:	3b17      	subs	r3, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
     a16:	0740      	lsls	r0, r0, #29
     a18:	d5f8      	bpl.n	a0c <usart_read_wait+0x8>
	error_code = (uint8_t)(usart_hw->STATUS.reg & SERCOM_USART_STATUS_MASK);
     a1a:	8b53      	ldrh	r3, [r2, #26]
     a1c:	b2db      	uxtb	r3, r3
	if (error_code) {
     a1e:	0698      	lsls	r0, r3, #26
     a20:	d01d      	beq.n	a5e <usart_read_wait+0x5a>
		if (error_code & SERCOM_USART_STATUS_FERR) {
     a22:	0798      	lsls	r0, r3, #30
     a24:	d503      	bpl.n	a2e <usart_read_wait+0x2a>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_FERR;
     a26:	2302      	movs	r3, #2
     a28:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_FORMAT;
     a2a:	3318      	adds	r3, #24
     a2c:	e7ee      	b.n	a0c <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_BUFOVF) {
     a2e:	0758      	lsls	r0, r3, #29
     a30:	d503      	bpl.n	a3a <usart_read_wait+0x36>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_BUFOVF;
     a32:	2304      	movs	r3, #4
     a34:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_OVERFLOW;
     a36:	331a      	adds	r3, #26
     a38:	e7e8      	b.n	a0c <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_PERR) {
     a3a:	07d8      	lsls	r0, r3, #31
     a3c:	d503      	bpl.n	a46 <usart_read_wait+0x42>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_PERR;
     a3e:	2301      	movs	r3, #1
     a40:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_DATA;
     a42:	3312      	adds	r3, #18
     a44:	e7e2      	b.n	a0c <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_ISF) {
     a46:	06d8      	lsls	r0, r3, #27
     a48:	d503      	bpl.n	a52 <usart_read_wait+0x4e>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_ISF;
     a4a:	2310      	movs	r3, #16
     a4c:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PROTOCOL;
     a4e:	3332      	adds	r3, #50	; 0x32
     a50:	e7dc      	b.n	a0c <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_COLL) {
     a52:	069b      	lsls	r3, r3, #26
     a54:	d503      	bpl.n	a5e <usart_read_wait+0x5a>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_COLL;
     a56:	2320      	movs	r3, #32
     a58:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PACKET_COLLISION;
     a5a:	3321      	adds	r3, #33	; 0x21
     a5c:	e7d6      	b.n	a0c <usart_read_wait+0x8>
	*rx_data = usart_hw->DATA.reg;
     a5e:	8d13      	ldrh	r3, [r2, #40]	; 0x28
     a60:	800b      	strh	r3, [r1, #0]
	return STATUS_OK;
     a62:	2300      	movs	r3, #0
     a64:	e7d2      	b.n	a0c <usart_read_wait+0x8>
	...

00000a68 <usart_write_buffer_wait>:
 */
enum status_code usart_write_buffer_wait(
		struct usart_module *const module,
		const uint8_t *tx_data,
		uint16_t length)
{
     a68:	b5f0      	push	{r4, r5, r6, r7, lr}
     a6a:	46ce      	mov	lr, r9
     a6c:	4647      	mov	r7, r8
     a6e:	b580      	push	{r7, lr}
     a70:	b083      	sub	sp, #12
     a72:	0005      	movs	r5, r0
     a74:	9101      	str	r1, [sp, #4]
	Assert(module);
	Assert(module->hw);

	/* Check if the buffer length is valid */
	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
     a76:	2017      	movs	r0, #23
	if (length == 0) {
     a78:	2a00      	cmp	r2, #0
     a7a:	d104      	bne.n	a86 <usart_write_buffer_wait+0x1e>
			return STATUS_ERR_TIMEOUT;
		}
	}

	return STATUS_OK;
}
     a7c:	b003      	add	sp, #12
     a7e:	bc0c      	pop	{r2, r3}
     a80:	4690      	mov	r8, r2
     a82:	4699      	mov	r9, r3
     a84:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (!(module->transmitter_enabled)) {
     a86:	79eb      	ldrb	r3, [r5, #7]
		return STATUS_ERR_DENIED;
     a88:	3005      	adds	r0, #5
	if (!(module->transmitter_enabled)) {
     a8a:	2b00      	cmp	r3, #0
     a8c:	d0f6      	beq.n	a7c <usart_write_buffer_wait+0x14>
	SercomUsart *const usart_hw = &(module->hw->USART);
     a8e:	682c      	ldr	r4, [r5, #0]
	while (length--) {
     a90:	3a01      	subs	r2, #1
     a92:	b293      	uxth	r3, r2
     a94:	4699      	mov	r9, r3
     a96:	2600      	movs	r6, #0
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
     a98:	2701      	movs	r7, #1
	while (length--) {
     a9a:	4b20      	ldr	r3, [pc, #128]	; (b1c <usart_write_buffer_wait+0xb4>)
     a9c:	4698      	mov	r8, r3
     a9e:	e011      	b.n	ac4 <usart_write_buffer_wait+0x5c>
		uint16_t data_to_send = tx_data[tx_pos++];
     aa0:	1c73      	adds	r3, r6, #1
     aa2:	b29b      	uxth	r3, r3
     aa4:	9a01      	ldr	r2, [sp, #4]
     aa6:	5d91      	ldrb	r1, [r2, r6]
		if (module->character_size == USART_CHARACTER_SIZE_9BIT) {
     aa8:	796a      	ldrb	r2, [r5, #5]
     aaa:	2a01      	cmp	r2, #1
     aac:	d017      	beq.n	ade <usart_write_buffer_wait+0x76>
		uint16_t data_to_send = tx_data[tx_pos++];
     aae:	b289      	uxth	r1, r1
     ab0:	001e      	movs	r6, r3
		usart_write_wait(module, data_to_send);
     ab2:	0028      	movs	r0, r5
     ab4:	4b1a      	ldr	r3, [pc, #104]	; (b20 <usart_write_buffer_wait+0xb8>)
     ab6:	4798      	blx	r3
	while (length--) {
     ab8:	464b      	mov	r3, r9
     aba:	3b01      	subs	r3, #1
     abc:	b29b      	uxth	r3, r3
     abe:	4699      	mov	r9, r3
     ac0:	4543      	cmp	r3, r8
     ac2:	d013      	beq.n	aec <usart_write_buffer_wait+0x84>
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
     ac4:	7e23      	ldrb	r3, [r4, #24]
     ac6:	423b      	tst	r3, r7
     ac8:	d1ea      	bne.n	aa0 <usart_write_buffer_wait+0x38>
     aca:	4b14      	ldr	r3, [pc, #80]	; (b1c <usart_write_buffer_wait+0xb4>)
     acc:	7e22      	ldrb	r2, [r4, #24]
     ace:	423a      	tst	r2, r7
     ad0:	d1e6      	bne.n	aa0 <usart_write_buffer_wait+0x38>
			} else if (i == USART_TIMEOUT) {
     ad2:	2b01      	cmp	r3, #1
     ad4:	d019      	beq.n	b0a <usart_write_buffer_wait+0xa2>
     ad6:	3b01      	subs	r3, #1
		for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
     ad8:	2b00      	cmp	r3, #0
     ada:	d1f7      	bne.n	acc <usart_write_buffer_wait+0x64>
     adc:	e7e0      	b.n	aa0 <usart_write_buffer_wait+0x38>
			data_to_send |= (tx_data[tx_pos++] << 8);
     ade:	3602      	adds	r6, #2
     ae0:	b2b6      	uxth	r6, r6
     ae2:	9a01      	ldr	r2, [sp, #4]
     ae4:	5cd3      	ldrb	r3, [r2, r3]
     ae6:	021b      	lsls	r3, r3, #8
     ae8:	4319      	orrs	r1, r3
     aea:	e7e2      	b.n	ab2 <usart_write_buffer_wait+0x4a>
		if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) {
     aec:	7e23      	ldrb	r3, [r4, #24]
     aee:	079b      	lsls	r3, r3, #30
     af0:	d40d      	bmi.n	b0e <usart_write_buffer_wait+0xa6>
     af2:	4b0a      	ldr	r3, [pc, #40]	; (b1c <usart_write_buffer_wait+0xb4>)
     af4:	2102      	movs	r1, #2
     af6:	7e22      	ldrb	r2, [r4, #24]
     af8:	420a      	tst	r2, r1
     afa:	d10a      	bne.n	b12 <usart_write_buffer_wait+0xaa>
		} else if (i == USART_TIMEOUT) {
     afc:	2b01      	cmp	r3, #1
     afe:	d00a      	beq.n	b16 <usart_write_buffer_wait+0xae>
     b00:	3b01      	subs	r3, #1
	for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
     b02:	2b00      	cmp	r3, #0
     b04:	d1f7      	bne.n	af6 <usart_write_buffer_wait+0x8e>
	return STATUS_OK;
     b06:	2000      	movs	r0, #0
     b08:	e7b8      	b.n	a7c <usart_write_buffer_wait+0x14>
				return STATUS_ERR_TIMEOUT;
     b0a:	2012      	movs	r0, #18
     b0c:	e7b6      	b.n	a7c <usart_write_buffer_wait+0x14>
	return STATUS_OK;
     b0e:	2000      	movs	r0, #0
     b10:	e7b4      	b.n	a7c <usart_write_buffer_wait+0x14>
     b12:	2000      	movs	r0, #0
     b14:	e7b2      	b.n	a7c <usart_write_buffer_wait+0x14>
			return STATUS_ERR_TIMEOUT;
     b16:	2012      	movs	r0, #18
     b18:	e7b0      	b.n	a7c <usart_write_buffer_wait+0x14>
     b1a:	46c0      	nop			; (mov r8, r8)
     b1c:	0000ffff 	.word	0x0000ffff
     b20:	000009e1 	.word	0x000009e1

00000b24 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
     b24:	4b0c      	ldr	r3, [pc, #48]	; (b58 <cpu_irq_enter_critical+0x34>)
     b26:	681b      	ldr	r3, [r3, #0]
     b28:	2b00      	cmp	r3, #0
     b2a:	d106      	bne.n	b3a <cpu_irq_enter_critical+0x16>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     b2c:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
     b30:	2b00      	cmp	r3, #0
     b32:	d007      	beq.n	b44 <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
     b34:	2200      	movs	r2, #0
     b36:	4b09      	ldr	r3, [pc, #36]	; (b5c <cpu_irq_enter_critical+0x38>)
     b38:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
     b3a:	4a07      	ldr	r2, [pc, #28]	; (b58 <cpu_irq_enter_critical+0x34>)
     b3c:	6813      	ldr	r3, [r2, #0]
     b3e:	3301      	adds	r3, #1
     b40:	6013      	str	r3, [r2, #0]
}
     b42:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
     b44:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     b46:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
     b4a:	2200      	movs	r2, #0
     b4c:	4b04      	ldr	r3, [pc, #16]	; (b60 <cpu_irq_enter_critical+0x3c>)
     b4e:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
     b50:	3201      	adds	r2, #1
     b52:	4b02      	ldr	r3, [pc, #8]	; (b5c <cpu_irq_enter_critical+0x38>)
     b54:	701a      	strb	r2, [r3, #0]
     b56:	e7f0      	b.n	b3a <cpu_irq_enter_critical+0x16>
     b58:	2000008c 	.word	0x2000008c
     b5c:	20000090 	.word	0x20000090
     b60:	20000000 	.word	0x20000000

00000b64 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
     b64:	4b08      	ldr	r3, [pc, #32]	; (b88 <cpu_irq_leave_critical+0x24>)
     b66:	681a      	ldr	r2, [r3, #0]
     b68:	3a01      	subs	r2, #1
     b6a:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
     b6c:	681b      	ldr	r3, [r3, #0]
     b6e:	2b00      	cmp	r3, #0
     b70:	d109      	bne.n	b86 <cpu_irq_leave_critical+0x22>
     b72:	4b06      	ldr	r3, [pc, #24]	; (b8c <cpu_irq_leave_critical+0x28>)
     b74:	781b      	ldrb	r3, [r3, #0]
     b76:	2b00      	cmp	r3, #0
     b78:	d005      	beq.n	b86 <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
     b7a:	2201      	movs	r2, #1
     b7c:	4b04      	ldr	r3, [pc, #16]	; (b90 <cpu_irq_leave_critical+0x2c>)
     b7e:	701a      	strb	r2, [r3, #0]
     b80:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     b84:	b662      	cpsie	i
	}
}
     b86:	4770      	bx	lr
     b88:	2000008c 	.word	0x2000008c
     b8c:	20000090 	.word	0x20000090
     b90:	20000000 	.word	0x20000000

00000b94 <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
     b94:	b5f0      	push	{r4, r5, r6, r7, lr}
     b96:	b083      	sub	sp, #12
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
     b98:	ac01      	add	r4, sp, #4
     b9a:	2501      	movs	r5, #1
     b9c:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
     b9e:	2700      	movs	r7, #0
     ba0:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
     ba2:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
     ba4:	0021      	movs	r1, r4
     ba6:	203e      	movs	r0, #62	; 0x3e
     ba8:	4e06      	ldr	r6, [pc, #24]	; (bc4 <system_board_init+0x30>)
     baa:	47b0      	blx	r6
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     bac:	2280      	movs	r2, #128	; 0x80
     bae:	05d2      	lsls	r2, r2, #23
     bb0:	4b05      	ldr	r3, [pc, #20]	; (bc8 <system_board_init+0x34>)
     bb2:	619a      	str	r2, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
     bb4:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
     bb6:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
     bb8:	0021      	movs	r1, r4
     bba:	200f      	movs	r0, #15
     bbc:	47b0      	blx	r6
	port_pin_set_output_level(AT86RFX_RST_PIN, true);
	port_pin_set_output_level(AT86RFX_SLP_PIN, true);
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
	port_pin_set_config(AT86RFX_SPI_MISO, &pin_conf);
#endif	
}
     bbe:	b003      	add	sp, #12
     bc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     bc2:	46c0      	nop			; (mov r8, r8)
     bc4:	00000bcd 	.word	0x00000bcd
     bc8:	41004480 	.word	0x41004480

00000bcc <port_pin_set_config>:
 *  \param[in] config    Configuration settings for the pin
 */
void port_pin_set_config(
		const uint8_t gpio_pin,
		const struct port_config *const config)
{
     bcc:	b500      	push	{lr}
     bce:	b083      	sub	sp, #12
	config->mux_position = SYSTEM_PINMUX_GPIO;
     bd0:	ab01      	add	r3, sp, #4
     bd2:	2280      	movs	r2, #128	; 0x80
     bd4:	701a      	strb	r2, [r3, #0]

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = SYSTEM_PINMUX_GPIO;
	pinmux_config.direction    = (enum system_pinmux_pin_dir)config->direction;
     bd6:	780a      	ldrb	r2, [r1, #0]
     bd8:	705a      	strb	r2, [r3, #1]
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->input_pull;
     bda:	784a      	ldrb	r2, [r1, #1]
     bdc:	709a      	strb	r2, [r3, #2]
	pinmux_config.powersave    = config->powersave;
     bde:	788a      	ldrb	r2, [r1, #2]
     be0:	70da      	strb	r2, [r3, #3]

	system_pinmux_pin_set_config(gpio_pin, &pinmux_config);
     be2:	0019      	movs	r1, r3
     be4:	4b01      	ldr	r3, [pc, #4]	; (bec <port_pin_set_config+0x20>)
     be6:	4798      	blx	r3
}
     be8:	b003      	add	sp, #12
     bea:	bd00      	pop	{pc}
     bec:	00001131 	.word	0x00001131

00000bf0 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
     bf0:	b510      	push	{r4, lr}
	switch (clock_source) {
     bf2:	2808      	cmp	r0, #8
     bf4:	d803      	bhi.n	bfe <system_clock_source_get_hz+0xe>
     bf6:	0080      	lsls	r0, r0, #2
     bf8:	4b1c      	ldr	r3, [pc, #112]	; (c6c <system_clock_source_get_hz+0x7c>)
     bfa:	581b      	ldr	r3, [r3, r0]
     bfc:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
     bfe:	2000      	movs	r0, #0
     c00:	e032      	b.n	c68 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc.frequency;
     c02:	4b1b      	ldr	r3, [pc, #108]	; (c70 <system_clock_source_get_hz+0x80>)
     c04:	6918      	ldr	r0, [r3, #16]
     c06:	e02f      	b.n	c68 <system_clock_source_get_hz+0x78>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
     c08:	4b1a      	ldr	r3, [pc, #104]	; (c74 <system_clock_source_get_hz+0x84>)
     c0a:	6a1b      	ldr	r3, [r3, #32]
     c0c:	059b      	lsls	r3, r3, #22
     c0e:	0f9b      	lsrs	r3, r3, #30
     c10:	4819      	ldr	r0, [pc, #100]	; (c78 <system_clock_source_get_hz+0x88>)
     c12:	40d8      	lsrs	r0, r3
     c14:	e028      	b.n	c68 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc32k.frequency;
     c16:	4b16      	ldr	r3, [pc, #88]	; (c70 <system_clock_source_get_hz+0x80>)
     c18:	6958      	ldr	r0, [r3, #20]
     c1a:	e025      	b.n	c68 <system_clock_source_get_hz+0x78>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
     c1c:	4b14      	ldr	r3, [pc, #80]	; (c70 <system_clock_source_get_hz+0x80>)
     c1e:	681b      	ldr	r3, [r3, #0]
			return 0;
     c20:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
     c22:	079b      	lsls	r3, r3, #30
     c24:	d520      	bpl.n	c68 <system_clock_source_get_hz+0x78>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     c26:	4913      	ldr	r1, [pc, #76]	; (c74 <system_clock_source_get_hz+0x84>)
     c28:	2210      	movs	r2, #16
     c2a:	68cb      	ldr	r3, [r1, #12]
     c2c:	421a      	tst	r2, r3
     c2e:	d0fc      	beq.n	c2a <system_clock_source_get_hz+0x3a>
		switch(_system_clock_inst.dfll.control &
     c30:	4b0f      	ldr	r3, [pc, #60]	; (c70 <system_clock_source_get_hz+0x80>)
     c32:	681a      	ldr	r2, [r3, #0]
     c34:	2324      	movs	r3, #36	; 0x24
     c36:	4013      	ands	r3, r2
     c38:	2b04      	cmp	r3, #4
     c3a:	d001      	beq.n	c40 <system_clock_source_get_hz+0x50>
			return 48000000UL;
     c3c:	480f      	ldr	r0, [pc, #60]	; (c7c <system_clock_source_get_hz+0x8c>)
     c3e:	e013      	b.n	c68 <system_clock_source_get_hz+0x78>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
     c40:	2000      	movs	r0, #0
     c42:	4b0f      	ldr	r3, [pc, #60]	; (c80 <system_clock_source_get_hz+0x90>)
     c44:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
     c46:	4b0a      	ldr	r3, [pc, #40]	; (c70 <system_clock_source_get_hz+0x80>)
     c48:	689b      	ldr	r3, [r3, #8]
     c4a:	041b      	lsls	r3, r3, #16
     c4c:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
     c4e:	4358      	muls	r0, r3
     c50:	e00a      	b.n	c68 <system_clock_source_get_hz+0x78>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
     c52:	2350      	movs	r3, #80	; 0x50
     c54:	4a07      	ldr	r2, [pc, #28]	; (c74 <system_clock_source_get_hz+0x84>)
     c56:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
     c58:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
     c5a:	075b      	lsls	r3, r3, #29
     c5c:	d504      	bpl.n	c68 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.dpll.frequency;
     c5e:	4b04      	ldr	r3, [pc, #16]	; (c70 <system_clock_source_get_hz+0x80>)
     c60:	68d8      	ldr	r0, [r3, #12]
     c62:	e001      	b.n	c68 <system_clock_source_get_hz+0x78>
		return 32768UL;
     c64:	2080      	movs	r0, #128	; 0x80
     c66:	0200      	lsls	r0, r0, #8
	}
}
     c68:	bd10      	pop	{r4, pc}
     c6a:	46c0      	nop			; (mov r8, r8)
     c6c:	00004ef4 	.word	0x00004ef4
     c70:	20000094 	.word	0x20000094
     c74:	40000800 	.word	0x40000800
     c78:	007a1200 	.word	0x007a1200
     c7c:	02dc6c00 	.word	0x02dc6c00
     c80:	00001055 	.word	0x00001055

00000c84 <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
     c84:	b570      	push	{r4, r5, r6, lr}
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
     c86:	490c      	ldr	r1, [pc, #48]	; (cb8 <system_clock_source_osc8m_set_config+0x34>)
     c88:	6a0b      	ldr	r3, [r1, #32]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
     c8a:	7804      	ldrb	r4, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
     c8c:	7885      	ldrb	r5, [r0, #2]
	temp.bit.RUNSTDBY = config->run_in_standby;

	SYSCTRL->OSC8M = temp;
     c8e:	7840      	ldrb	r0, [r0, #1]
     c90:	2201      	movs	r2, #1
     c92:	4010      	ands	r0, r2
     c94:	0180      	lsls	r0, r0, #6
     c96:	2640      	movs	r6, #64	; 0x40
     c98:	43b3      	bics	r3, r6
     c9a:	4303      	orrs	r3, r0
     c9c:	402a      	ands	r2, r5
     c9e:	01d2      	lsls	r2, r2, #7
     ca0:	2080      	movs	r0, #128	; 0x80
     ca2:	4383      	bics	r3, r0
     ca4:	4313      	orrs	r3, r2
     ca6:	2203      	movs	r2, #3
     ca8:	4022      	ands	r2, r4
     caa:	0212      	lsls	r2, r2, #8
     cac:	4803      	ldr	r0, [pc, #12]	; (cbc <system_clock_source_osc8m_set_config+0x38>)
     cae:	4003      	ands	r3, r0
     cb0:	4313      	orrs	r3, r2
     cb2:	620b      	str	r3, [r1, #32]
}
     cb4:	bd70      	pop	{r4, r5, r6, pc}
     cb6:	46c0      	nop			; (mov r8, r8)
     cb8:	40000800 	.word	0x40000800
     cbc:	fffffcff 	.word	0xfffffcff

00000cc0 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
     cc0:	2808      	cmp	r0, #8
     cc2:	d803      	bhi.n	ccc <system_clock_source_enable+0xc>
     cc4:	0080      	lsls	r0, r0, #2
     cc6:	4b25      	ldr	r3, [pc, #148]	; (d5c <system_clock_source_enable+0x9c>)
     cc8:	581b      	ldr	r3, [r3, r0]
     cca:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     ccc:	2017      	movs	r0, #23
     cce:	e044      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
     cd0:	4a23      	ldr	r2, [pc, #140]	; (d60 <system_clock_source_enable+0xa0>)
     cd2:	6a13      	ldr	r3, [r2, #32]
     cd4:	2102      	movs	r1, #2
     cd6:	430b      	orrs	r3, r1
     cd8:	6213      	str	r3, [r2, #32]
		return STATUS_OK;
     cda:	2000      	movs	r0, #0
     cdc:	e03d      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
     cde:	4a20      	ldr	r2, [pc, #128]	; (d60 <system_clock_source_enable+0xa0>)
     ce0:	6993      	ldr	r3, [r2, #24]
     ce2:	2102      	movs	r1, #2
     ce4:	430b      	orrs	r3, r1
     ce6:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
     ce8:	2000      	movs	r0, #0
		break;
     cea:	e036      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
     cec:	4a1c      	ldr	r2, [pc, #112]	; (d60 <system_clock_source_enable+0xa0>)
     cee:	8a13      	ldrh	r3, [r2, #16]
     cf0:	2102      	movs	r1, #2
     cf2:	430b      	orrs	r3, r1
     cf4:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
     cf6:	2000      	movs	r0, #0
		break;
     cf8:	e02f      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
     cfa:	4a19      	ldr	r2, [pc, #100]	; (d60 <system_clock_source_enable+0xa0>)
     cfc:	8a93      	ldrh	r3, [r2, #20]
     cfe:	2102      	movs	r1, #2
     d00:	430b      	orrs	r3, r1
     d02:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
     d04:	2000      	movs	r0, #0
		break;
     d06:	e028      	b.n	d5a <system_clock_source_enable+0x9a>
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
     d08:	4916      	ldr	r1, [pc, #88]	; (d64 <system_clock_source_enable+0xa4>)
     d0a:	680b      	ldr	r3, [r1, #0]
     d0c:	2202      	movs	r2, #2
     d0e:	4313      	orrs	r3, r2
     d10:	600b      	str	r3, [r1, #0]
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
     d12:	4b13      	ldr	r3, [pc, #76]	; (d60 <system_clock_source_enable+0xa0>)
     d14:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     d16:	0019      	movs	r1, r3
     d18:	320e      	adds	r2, #14
     d1a:	68cb      	ldr	r3, [r1, #12]
     d1c:	421a      	tst	r2, r3
     d1e:	d0fc      	beq.n	d1a <system_clock_source_enable+0x5a>
	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
     d20:	4a10      	ldr	r2, [pc, #64]	; (d64 <system_clock_source_enable+0xa4>)
     d22:	6891      	ldr	r1, [r2, #8]
     d24:	4b0e      	ldr	r3, [pc, #56]	; (d60 <system_clock_source_enable+0xa0>)
     d26:	62d9      	str	r1, [r3, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
     d28:	6852      	ldr	r2, [r2, #4]
     d2a:	629a      	str	r2, [r3, #40]	; 0x28
	SYSCTRL->DFLLCTRL.reg = 0;
     d2c:	2200      	movs	r2, #0
     d2e:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     d30:	0019      	movs	r1, r3
     d32:	3210      	adds	r2, #16
     d34:	68cb      	ldr	r3, [r1, #12]
     d36:	421a      	tst	r2, r3
     d38:	d0fc      	beq.n	d34 <system_clock_source_enable+0x74>
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
     d3a:	4b0a      	ldr	r3, [pc, #40]	; (d64 <system_clock_source_enable+0xa4>)
     d3c:	681b      	ldr	r3, [r3, #0]
     d3e:	b29b      	uxth	r3, r3
     d40:	4a07      	ldr	r2, [pc, #28]	; (d60 <system_clock_source_enable+0xa0>)
     d42:	8493      	strh	r3, [r2, #36]	; 0x24
	return STATUS_OK;
     d44:	2000      	movs	r0, #0
     d46:	e008      	b.n	d5a <system_clock_source_enable+0x9a>
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
     d48:	4905      	ldr	r1, [pc, #20]	; (d60 <system_clock_source_enable+0xa0>)
     d4a:	2244      	movs	r2, #68	; 0x44
     d4c:	5c8b      	ldrb	r3, [r1, r2]
     d4e:	2002      	movs	r0, #2
     d50:	4303      	orrs	r3, r0
     d52:	548b      	strb	r3, [r1, r2]
	return STATUS_OK;
     d54:	2000      	movs	r0, #0
		break;
     d56:	e000      	b.n	d5a <system_clock_source_enable+0x9a>
		return STATUS_OK;
     d58:	2000      	movs	r0, #0
}
     d5a:	4770      	bx	lr
     d5c:	00004f18 	.word	0x00004f18
     d60:	40000800 	.word	0x40000800
     d64:	20000094 	.word	0x20000094

00000d68 <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
     d68:	b530      	push	{r4, r5, lr}
     d6a:	b085      	sub	sp, #20
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
     d6c:	22c2      	movs	r2, #194	; 0xc2
     d6e:	00d2      	lsls	r2, r2, #3
     d70:	4b1a      	ldr	r3, [pc, #104]	; (ddc <system_clock_init+0x74>)
     d72:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
     d74:	4a1a      	ldr	r2, [pc, #104]	; (de0 <system_clock_init+0x78>)
     d76:	6853      	ldr	r3, [r2, #4]
     d78:	211e      	movs	r1, #30
     d7a:	438b      	bics	r3, r1
     d7c:	6053      	str	r3, [r2, #4]
	gclk_conf.source_generator = GCLK_GENERATOR_1;
     d7e:	2301      	movs	r3, #1
     d80:	466a      	mov	r2, sp
     d82:	7013      	strb	r3, [r2, #0]
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
     d84:	2400      	movs	r4, #0
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
     d86:	4d17      	ldr	r5, [pc, #92]	; (de4 <system_clock_init+0x7c>)
     d88:	b2e0      	uxtb	r0, r4
     d8a:	4669      	mov	r1, sp
     d8c:	47a8      	blx	r5
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
     d8e:	3401      	adds	r4, #1
     d90:	2c25      	cmp	r4, #37	; 0x25
     d92:	d1f9      	bne.n	d88 <system_clock_init+0x20>
	config->run_in_standby  = false;
     d94:	a803      	add	r0, sp, #12
     d96:	2400      	movs	r4, #0
     d98:	7044      	strb	r4, [r0, #1]
	config->on_demand       = true;
     d9a:	2501      	movs	r5, #1
     d9c:	7085      	strb	r5, [r0, #2]

	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
     d9e:	7004      	strb	r4, [r0, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;

	system_clock_source_osc8m_set_config(&osc8m_conf);
     da0:	4b11      	ldr	r3, [pc, #68]	; (de8 <system_clock_init+0x80>)
     da2:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
     da4:	2006      	movs	r0, #6
     da6:	4b11      	ldr	r3, [pc, #68]	; (dec <system_clock_init+0x84>)
     da8:	4798      	blx	r3


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
     daa:	4b11      	ldr	r3, [pc, #68]	; (df0 <system_clock_init+0x88>)
     dac:	4798      	blx	r3
	PM->CPUSEL.reg = (uint32_t)divider;
     dae:	4b11      	ldr	r3, [pc, #68]	; (df4 <system_clock_init+0x8c>)
     db0:	721c      	strb	r4, [r3, #8]
			PM->APBASEL.reg = (uint32_t)divider;
     db2:	725c      	strb	r4, [r3, #9]
			PM->APBBSEL.reg = (uint32_t)divider;
     db4:	729c      	strb	r4, [r3, #10]
			PM->APBCSEL.reg = (uint32_t)divider;
     db6:	72dc      	strb	r4, [r3, #11]
	config->division_factor    = 1;
     db8:	9501      	str	r5, [sp, #4]
	config->high_when_disabled = false;
     dba:	466b      	mov	r3, sp
     dbc:	705c      	strb	r4, [r3, #1]
	config->source_clock       = GCLK_SOURCE_OSC8M;
     dbe:	2306      	movs	r3, #6
     dc0:	466a      	mov	r2, sp
     dc2:	7013      	strb	r3, [r2, #0]
	config->run_in_standby     = false;
     dc4:	7214      	strb	r4, [r2, #8]
	config->output_enable      = false;
     dc6:	7254      	strb	r4, [r2, #9]
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
     dc8:	4669      	mov	r1, sp
     dca:	2000      	movs	r0, #0
     dcc:	4b0a      	ldr	r3, [pc, #40]	; (df8 <system_clock_init+0x90>)
     dce:	4798      	blx	r3
     dd0:	2000      	movs	r0, #0
     dd2:	4b0a      	ldr	r3, [pc, #40]	; (dfc <system_clock_init+0x94>)
     dd4:	4798      	blx	r3
#endif
}
     dd6:	b005      	add	sp, #20
     dd8:	bd30      	pop	{r4, r5, pc}
     dda:	46c0      	nop			; (mov r8, r8)
     ddc:	40000800 	.word	0x40000800
     de0:	41004000 	.word	0x41004000
     de4:	00001039 	.word	0x00001039
     de8:	00000c85 	.word	0x00000c85
     dec:	00000cc1 	.word	0x00000cc1
     df0:	00000e01 	.word	0x00000e01
     df4:	40000400 	.word	0x40000400
     df8:	00000e25 	.word	0x00000e25
     dfc:	00000edd 	.word	0x00000edd

00000e00 <system_gclk_init>:
			PM->APBAMASK.reg |= mask;
     e00:	4a06      	ldr	r2, [pc, #24]	; (e1c <system_gclk_init+0x1c>)
     e02:	6993      	ldr	r3, [r2, #24]
     e04:	2108      	movs	r1, #8
     e06:	430b      	orrs	r3, r1
     e08:	6193      	str	r3, [r2, #24]
{
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBA, PM_APBAMASK_GCLK);

	/* Software reset the module to ensure it is re-initialized correctly */
	GCLK->CTRL.reg = GCLK_CTRL_SWRST;
     e0a:	2201      	movs	r2, #1
     e0c:	4b04      	ldr	r3, [pc, #16]	; (e20 <system_gclk_init+0x20>)
     e0e:	701a      	strb	r2, [r3, #0]
	while (GCLK->CTRL.reg & GCLK_CTRL_SWRST) {
     e10:	0019      	movs	r1, r3
     e12:	780b      	ldrb	r3, [r1, #0]
     e14:	4213      	tst	r3, r2
     e16:	d1fc      	bne.n	e12 <system_gclk_init+0x12>
		/* Wait for reset to complete */
	}
}
     e18:	4770      	bx	lr
     e1a:	46c0      	nop			; (mov r8, r8)
     e1c:	40000400 	.word	0x40000400
     e20:	40000c00 	.word	0x40000c00

00000e24 <system_gclk_gen_set_config>:
 * \param[in] config     Configuration settings for the generator
 */
void system_gclk_gen_set_config(
		const uint8_t generator,
		struct system_gclk_gen_config *const config)
{
     e24:	b570      	push	{r4, r5, r6, lr}
     e26:	0006      	movs	r6, r0
	/* Sanity check arguments */
	Assert(config);

	/* Cache new register configurations to minimize sync requirements. */
	uint32_t new_genctrl_config = (generator << GCLK_GENCTRL_ID_Pos);
     e28:	0004      	movs	r4, r0
	uint32_t new_gendiv_config  = (generator << GCLK_GENDIV_ID_Pos);

	/* Select the requested source clock for the generator */
	new_genctrl_config |= config->source_clock << GCLK_GENCTRL_SRC_Pos;
     e2a:	780d      	ldrb	r5, [r1, #0]
     e2c:	022d      	lsls	r5, r5, #8
     e2e:	4305      	orrs	r5, r0

	/* Configure the clock to be either high or low when disabled */
	if (config->high_when_disabled) {
     e30:	784b      	ldrb	r3, [r1, #1]
     e32:	2b00      	cmp	r3, #0
     e34:	d002      	beq.n	e3c <system_gclk_gen_set_config+0x18>
		new_genctrl_config |= GCLK_GENCTRL_OOV;
     e36:	2380      	movs	r3, #128	; 0x80
     e38:	02db      	lsls	r3, r3, #11
     e3a:	431d      	orrs	r5, r3
	}

	/* Configure if the clock output to I/O pin should be enabled. */
	if (config->output_enable) {
     e3c:	7a4b      	ldrb	r3, [r1, #9]
     e3e:	2b00      	cmp	r3, #0
     e40:	d002      	beq.n	e48 <system_gclk_gen_set_config+0x24>
		new_genctrl_config |= GCLK_GENCTRL_OE;
     e42:	2380      	movs	r3, #128	; 0x80
     e44:	031b      	lsls	r3, r3, #12
     e46:	431d      	orrs	r5, r3
	}

	/* Set division factor */
	if (config->division_factor > 1) {
     e48:	6848      	ldr	r0, [r1, #4]
     e4a:	2801      	cmp	r0, #1
     e4c:	d910      	bls.n	e70 <system_gclk_gen_set_config+0x4c>
		/* Check if division is a power of two */
		if (((config->division_factor & (config->division_factor - 1)) == 0)) {
     e4e:	1e43      	subs	r3, r0, #1
     e50:	4218      	tst	r0, r3
     e52:	d134      	bne.n	ebe <system_gclk_gen_set_config+0x9a>
			 * register */

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
     e54:	2802      	cmp	r0, #2
     e56:	d930      	bls.n	eba <system_gclk_gen_set_config+0x96>
     e58:	2302      	movs	r3, #2
     e5a:	2200      	movs	r2, #0
						mask <<= 1) {
				div2_count++;
     e5c:	3201      	adds	r2, #1
						mask <<= 1) {
     e5e:	005b      	lsls	r3, r3, #1
			for (mask = (1UL << 1); mask < config->division_factor;
     e60:	4298      	cmp	r0, r3
     e62:	d8fb      	bhi.n	e5c <system_gclk_gen_set_config+0x38>
			}

			/* Set binary divider power of 2 division factor */
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
     e64:	0212      	lsls	r2, r2, #8
     e66:	4332      	orrs	r2, r6
     e68:	0014      	movs	r4, r2
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
     e6a:	2380      	movs	r3, #128	; 0x80
     e6c:	035b      	lsls	r3, r3, #13
     e6e:	431d      	orrs	r5, r3
		}

	}

	/* Enable or disable the clock in standby mode */
	if (config->run_in_standby) {
     e70:	7a0b      	ldrb	r3, [r1, #8]
     e72:	2b00      	cmp	r3, #0
     e74:	d002      	beq.n	e7c <system_gclk_gen_set_config+0x58>
		new_genctrl_config |= GCLK_GENCTRL_RUNSTDBY;
     e76:	2380      	movs	r3, #128	; 0x80
     e78:	039b      	lsls	r3, r3, #14
     e7a:	431d      	orrs	r5, r3
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     e7c:	4a13      	ldr	r2, [pc, #76]	; (ecc <system_gclk_gen_set_config+0xa8>)
     e7e:	7853      	ldrb	r3, [r2, #1]
	}

	while (system_gclk_is_syncing()) {
     e80:	b25b      	sxtb	r3, r3
     e82:	2b00      	cmp	r3, #0
     e84:	dbfb      	blt.n	e7e <system_gclk_gen_set_config+0x5a>
	cpu_irq_enter_critical();
     e86:	4b12      	ldr	r3, [pc, #72]	; (ed0 <system_gclk_gen_set_config+0xac>)
     e88:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the correct generator */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
     e8a:	4b12      	ldr	r3, [pc, #72]	; (ed4 <system_gclk_gen_set_config+0xb0>)
     e8c:	701e      	strb	r6, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     e8e:	4a0f      	ldr	r2, [pc, #60]	; (ecc <system_gclk_gen_set_config+0xa8>)
     e90:	7853      	ldrb	r3, [r2, #1]

	/* Write the new generator configuration */
	while (system_gclk_is_syncing()) {
     e92:	b25b      	sxtb	r3, r3
     e94:	2b00      	cmp	r3, #0
     e96:	dbfb      	blt.n	e90 <system_gclk_gen_set_config+0x6c>
		/* Wait for synchronization */
	};
	GCLK->GENDIV.reg  = new_gendiv_config;
     e98:	4b0c      	ldr	r3, [pc, #48]	; (ecc <system_gclk_gen_set_config+0xa8>)
     e9a:	609c      	str	r4, [r3, #8]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     e9c:	001a      	movs	r2, r3
     e9e:	7853      	ldrb	r3, [r2, #1]

	while (system_gclk_is_syncing()) {
     ea0:	b25b      	sxtb	r3, r3
     ea2:	2b00      	cmp	r3, #0
     ea4:	dbfb      	blt.n	e9e <system_gclk_gen_set_config+0x7a>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = new_genctrl_config | (GCLK->GENCTRL.reg & GCLK_GENCTRL_GENEN);
     ea6:	4a09      	ldr	r2, [pc, #36]	; (ecc <system_gclk_gen_set_config+0xa8>)
     ea8:	6853      	ldr	r3, [r2, #4]
     eaa:	2180      	movs	r1, #128	; 0x80
     eac:	0249      	lsls	r1, r1, #9
     eae:	400b      	ands	r3, r1
     eb0:	431d      	orrs	r5, r3
     eb2:	6055      	str	r5, [r2, #4]
	cpu_irq_leave_critical();
     eb4:	4b08      	ldr	r3, [pc, #32]	; (ed8 <system_gclk_gen_set_config+0xb4>)
     eb6:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     eb8:	bd70      	pop	{r4, r5, r6, pc}
			for (mask = (1UL << 1); mask < config->division_factor;
     eba:	2200      	movs	r2, #0
     ebc:	e7d2      	b.n	e64 <system_gclk_gen_set_config+0x40>
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;
     ebe:	0204      	lsls	r4, r0, #8
			new_gendiv_config  |=
     ec0:	4334      	orrs	r4, r6
			new_genctrl_config |= GCLK_GENCTRL_IDC;
     ec2:	2380      	movs	r3, #128	; 0x80
     ec4:	029b      	lsls	r3, r3, #10
     ec6:	431d      	orrs	r5, r3
     ec8:	e7d2      	b.n	e70 <system_gclk_gen_set_config+0x4c>
     eca:	46c0      	nop			; (mov r8, r8)
     ecc:	40000c00 	.word	0x40000c00
     ed0:	00000b25 	.word	0x00000b25
     ed4:	40000c08 	.word	0x40000c08
     ed8:	00000b65 	.word	0x00000b65

00000edc <system_gclk_gen_enable>:
 *
 * \param[in] generator  Generic Clock Generator index to enable
 */
void system_gclk_gen_enable(
		const uint8_t generator)
{
     edc:	b510      	push	{r4, lr}
     ede:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     ee0:	4a0b      	ldr	r2, [pc, #44]	; (f10 <system_gclk_gen_enable+0x34>)
     ee2:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     ee4:	b25b      	sxtb	r3, r3
     ee6:	2b00      	cmp	r3, #0
     ee8:	dbfb      	blt.n	ee2 <system_gclk_gen_enable+0x6>
	cpu_irq_enter_critical();
     eea:	4b0a      	ldr	r3, [pc, #40]	; (f14 <system_gclk_gen_enable+0x38>)
     eec:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the requested generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     eee:	4b0a      	ldr	r3, [pc, #40]	; (f18 <system_gclk_gen_enable+0x3c>)
     ef0:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     ef2:	4a07      	ldr	r2, [pc, #28]	; (f10 <system_gclk_gen_enable+0x34>)
     ef4:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     ef6:	b25b      	sxtb	r3, r3
     ef8:	2b00      	cmp	r3, #0
     efa:	dbfb      	blt.n	ef4 <system_gclk_gen_enable+0x18>
		/* Wait for synchronization */
	};

	/* Enable generator */
	GCLK->GENCTRL.reg |= GCLK_GENCTRL_GENEN;
     efc:	4a04      	ldr	r2, [pc, #16]	; (f10 <system_gclk_gen_enable+0x34>)
     efe:	6851      	ldr	r1, [r2, #4]
     f00:	2380      	movs	r3, #128	; 0x80
     f02:	025b      	lsls	r3, r3, #9
     f04:	430b      	orrs	r3, r1
     f06:	6053      	str	r3, [r2, #4]
	cpu_irq_leave_critical();
     f08:	4b04      	ldr	r3, [pc, #16]	; (f1c <system_gclk_gen_enable+0x40>)
     f0a:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     f0c:	bd10      	pop	{r4, pc}
     f0e:	46c0      	nop			; (mov r8, r8)
     f10:	40000c00 	.word	0x40000c00
     f14:	00000b25 	.word	0x00000b25
     f18:	40000c04 	.word	0x40000c04
     f1c:	00000b65 	.word	0x00000b65

00000f20 <system_gclk_gen_get_hz>:
 *
 * \return The frequency of the generic clock generator, in Hz.
 */
uint32_t system_gclk_gen_get_hz(
		const uint8_t generator)
{
     f20:	b570      	push	{r4, r5, r6, lr}
     f22:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     f24:	4a1a      	ldr	r2, [pc, #104]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f26:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     f28:	b25b      	sxtb	r3, r3
     f2a:	2b00      	cmp	r3, #0
     f2c:	dbfb      	blt.n	f26 <system_gclk_gen_get_hz+0x6>
	cpu_irq_enter_critical();
     f2e:	4b19      	ldr	r3, [pc, #100]	; (f94 <system_gclk_gen_get_hz+0x74>)
     f30:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the appropriate generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     f32:	4b19      	ldr	r3, [pc, #100]	; (f98 <system_gclk_gen_get_hz+0x78>)
     f34:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     f36:	4a16      	ldr	r2, [pc, #88]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f38:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     f3a:	b25b      	sxtb	r3, r3
     f3c:	2b00      	cmp	r3, #0
     f3e:	dbfb      	blt.n	f38 <system_gclk_gen_get_hz+0x18>
		/* Wait for synchronization */
	};

	/* Get the frequency of the source connected to the GCLK generator */
	uint32_t gen_input_hz = system_clock_source_get_hz(
			(enum system_clock_source)GCLK->GENCTRL.bit.SRC);
     f40:	4e13      	ldr	r6, [pc, #76]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f42:	6870      	ldr	r0, [r6, #4]
     f44:	04c0      	lsls	r0, r0, #19
     f46:	0ec0      	lsrs	r0, r0, #27
	uint32_t gen_input_hz = system_clock_source_get_hz(
     f48:	4b14      	ldr	r3, [pc, #80]	; (f9c <system_gclk_gen_get_hz+0x7c>)
     f4a:	4798      	blx	r3
     f4c:	0005      	movs	r5, r0

	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     f4e:	4b12      	ldr	r3, [pc, #72]	; (f98 <system_gclk_gen_get_hz+0x78>)
     f50:	701c      	strb	r4, [r3, #0]

	uint8_t divsel = GCLK->GENCTRL.bit.DIVSEL;
     f52:	6876      	ldr	r6, [r6, #4]
     f54:	02f6      	lsls	r6, r6, #11
     f56:	0ff6      	lsrs	r6, r6, #31

	/* Select the appropriate generator division register */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
     f58:	4b11      	ldr	r3, [pc, #68]	; (fa0 <system_gclk_gen_get_hz+0x80>)
     f5a:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     f5c:	4a0c      	ldr	r2, [pc, #48]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f5e:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     f60:	b25b      	sxtb	r3, r3
     f62:	2b00      	cmp	r3, #0
     f64:	dbfb      	blt.n	f5e <system_gclk_gen_get_hz+0x3e>
		/* Wait for synchronization */
	};

	uint32_t divider = GCLK->GENDIV.bit.DIV;
     f66:	4b0a      	ldr	r3, [pc, #40]	; (f90 <system_gclk_gen_get_hz+0x70>)
     f68:	689c      	ldr	r4, [r3, #8]
     f6a:	0224      	lsls	r4, r4, #8
     f6c:	0c24      	lsrs	r4, r4, #16
	cpu_irq_leave_critical();
     f6e:	4b0d      	ldr	r3, [pc, #52]	; (fa4 <system_gclk_gen_get_hz+0x84>)
     f70:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Check if the generator is using fractional or binary division */
	if (!divsel && divider > 1) {
     f72:	2e00      	cmp	r6, #0
     f74:	d107      	bne.n	f86 <system_gclk_gen_get_hz+0x66>
     f76:	2c01      	cmp	r4, #1
     f78:	d907      	bls.n	f8a <system_gclk_gen_get_hz+0x6a>
		gen_input_hz /= divider;
     f7a:	0021      	movs	r1, r4
     f7c:	0028      	movs	r0, r5
     f7e:	4b0a      	ldr	r3, [pc, #40]	; (fa8 <system_gclk_gen_get_hz+0x88>)
     f80:	4798      	blx	r3
     f82:	0005      	movs	r5, r0
     f84:	e001      	b.n	f8a <system_gclk_gen_get_hz+0x6a>
	} else if (divsel) {
		gen_input_hz >>= (divider+1);
     f86:	3401      	adds	r4, #1
     f88:	40e5      	lsrs	r5, r4
	}

	return gen_input_hz;
}
     f8a:	0028      	movs	r0, r5
     f8c:	bd70      	pop	{r4, r5, r6, pc}
     f8e:	46c0      	nop			; (mov r8, r8)
     f90:	40000c00 	.word	0x40000c00
     f94:	00000b25 	.word	0x00000b25
     f98:	40000c04 	.word	0x40000c04
     f9c:	00000bf1 	.word	0x00000bf1
     fa0:	40000c08 	.word	0x40000c08
     fa4:	00000b65 	.word	0x00000b65
     fa8:	0000156d 	.word	0x0000156d

00000fac <system_gclk_chan_enable>:
 *
 * \param[in] channel   Generic Clock channel to enable
 */
void system_gclk_chan_enable(
		const uint8_t channel)
{
     fac:	b510      	push	{r4, lr}
     fae:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
     fb0:	4b06      	ldr	r3, [pc, #24]	; (fcc <system_gclk_chan_enable+0x20>)
     fb2:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
     fb4:	4b06      	ldr	r3, [pc, #24]	; (fd0 <system_gclk_chan_enable+0x24>)
     fb6:	701c      	strb	r4, [r3, #0]

	/* Enable the generic clock */
	GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_CLKEN;
     fb8:	4a06      	ldr	r2, [pc, #24]	; (fd4 <system_gclk_chan_enable+0x28>)
     fba:	8853      	ldrh	r3, [r2, #2]
     fbc:	2180      	movs	r1, #128	; 0x80
     fbe:	01c9      	lsls	r1, r1, #7
     fc0:	430b      	orrs	r3, r1
     fc2:	8053      	strh	r3, [r2, #2]
	cpu_irq_leave_critical();
     fc4:	4b04      	ldr	r3, [pc, #16]	; (fd8 <system_gclk_chan_enable+0x2c>)
     fc6:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     fc8:	bd10      	pop	{r4, pc}
     fca:	46c0      	nop			; (mov r8, r8)
     fcc:	00000b25 	.word	0x00000b25
     fd0:	40000c02 	.word	0x40000c02
     fd4:	40000c00 	.word	0x40000c00
     fd8:	00000b65 	.word	0x00000b65

00000fdc <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
     fdc:	b510      	push	{r4, lr}
     fde:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
     fe0:	4b0f      	ldr	r3, [pc, #60]	; (1020 <system_gclk_chan_disable+0x44>)
     fe2:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
     fe4:	4b0f      	ldr	r3, [pc, #60]	; (1024 <system_gclk_chan_disable+0x48>)
     fe6:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
     fe8:	4a0f      	ldr	r2, [pc, #60]	; (1028 <system_gclk_chan_disable+0x4c>)
     fea:	8853      	ldrh	r3, [r2, #2]
     fec:	051b      	lsls	r3, r3, #20
     fee:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
     ff0:	8853      	ldrh	r3, [r2, #2]
     ff2:	490e      	ldr	r1, [pc, #56]	; (102c <system_gclk_chan_disable+0x50>)
     ff4:	400b      	ands	r3, r1
     ff6:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
     ff8:	8853      	ldrh	r3, [r2, #2]
     ffa:	490d      	ldr	r1, [pc, #52]	; (1030 <system_gclk_chan_disable+0x54>)
     ffc:	400b      	ands	r3, r1
     ffe:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    1000:	0011      	movs	r1, r2
    1002:	2280      	movs	r2, #128	; 0x80
    1004:	01d2      	lsls	r2, r2, #7
    1006:	884b      	ldrh	r3, [r1, #2]
    1008:	4213      	tst	r3, r2
    100a:	d1fc      	bne.n	1006 <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    100c:	4906      	ldr	r1, [pc, #24]	; (1028 <system_gclk_chan_disable+0x4c>)
    100e:	884a      	ldrh	r2, [r1, #2]
    1010:	0203      	lsls	r3, r0, #8
    1012:	4806      	ldr	r0, [pc, #24]	; (102c <system_gclk_chan_disable+0x50>)
    1014:	4002      	ands	r2, r0
    1016:	4313      	orrs	r3, r2
    1018:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
    101a:	4b06      	ldr	r3, [pc, #24]	; (1034 <system_gclk_chan_disable+0x58>)
    101c:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    101e:	bd10      	pop	{r4, pc}
    1020:	00000b25 	.word	0x00000b25
    1024:	40000c02 	.word	0x40000c02
    1028:	40000c00 	.word	0x40000c00
    102c:	fffff0ff 	.word	0xfffff0ff
    1030:	ffffbfff 	.word	0xffffbfff
    1034:	00000b65 	.word	0x00000b65

00001038 <system_gclk_chan_set_config>:
{
    1038:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    103a:	780c      	ldrb	r4, [r1, #0]
    103c:	0224      	lsls	r4, r4, #8
    103e:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
    1040:	4b02      	ldr	r3, [pc, #8]	; (104c <system_gclk_chan_set_config+0x14>)
    1042:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    1044:	b2a4      	uxth	r4, r4
    1046:	4b02      	ldr	r3, [pc, #8]	; (1050 <system_gclk_chan_set_config+0x18>)
    1048:	805c      	strh	r4, [r3, #2]
}
    104a:	bd10      	pop	{r4, pc}
    104c:	00000fdd 	.word	0x00000fdd
    1050:	40000c00 	.word	0x40000c00

00001054 <system_gclk_chan_get_hz>:
 *
 * \return The frequency of the generic clock channel, in Hz.
 */
uint32_t system_gclk_chan_get_hz(
		const uint8_t channel)
{
    1054:	b510      	push	{r4, lr}
    1056:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1058:	4b06      	ldr	r3, [pc, #24]	; (1074 <system_gclk_chan_get_hz+0x20>)
    105a:	4798      	blx	r3
	uint8_t gen_id;

	system_interrupt_enter_critical_section();

	/* Select the requested generic clock channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    105c:	4b06      	ldr	r3, [pc, #24]	; (1078 <system_gclk_chan_get_hz+0x24>)
    105e:	701c      	strb	r4, [r3, #0]
	gen_id = GCLK->CLKCTRL.bit.GEN;
    1060:	4b06      	ldr	r3, [pc, #24]	; (107c <system_gclk_chan_get_hz+0x28>)
    1062:	885c      	ldrh	r4, [r3, #2]
    1064:	0524      	lsls	r4, r4, #20
    1066:	0f24      	lsrs	r4, r4, #28
	cpu_irq_leave_critical();
    1068:	4b05      	ldr	r3, [pc, #20]	; (1080 <system_gclk_chan_get_hz+0x2c>)
    106a:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Return the clock speed of the associated GCLK generator */
	return system_gclk_gen_get_hz(gen_id);
    106c:	0020      	movs	r0, r4
    106e:	4b05      	ldr	r3, [pc, #20]	; (1084 <system_gclk_chan_get_hz+0x30>)
    1070:	4798      	blx	r3
}
    1072:	bd10      	pop	{r4, pc}
    1074:	00000b25 	.word	0x00000b25
    1078:	40000c02 	.word	0x40000c02
    107c:	40000c00 	.word	0x40000c00
    1080:	00000b65 	.word	0x00000b65
    1084:	00000f21 	.word	0x00000f21

00001088 <_system_pinmux_config>:
 */
static void _system_pinmux_config(
		PortGroup *const port,
		const uint32_t pin_mask,
		const struct system_pinmux_config *const config)
{
    1088:	b530      	push	{r4, r5, lr}

	/* Track the configuration bits into a temporary variable before writing */
	uint32_t pin_cfg = 0;

	/* Enabled powersave mode, don't create configuration */
	if (!config->powersave) {
    108a:	78d3      	ldrb	r3, [r2, #3]
    108c:	2b00      	cmp	r3, #0
    108e:	d135      	bne.n	10fc <_system_pinmux_config+0x74>
		/* Enable the pin peripheral MUX flag if non-GPIO selected (pinmux will
		 * be written later) and store the new MUX mask */
		if (config->mux_position != SYSTEM_PINMUX_GPIO) {
    1090:	7813      	ldrb	r3, [r2, #0]
    1092:	2b80      	cmp	r3, #128	; 0x80
    1094:	d029      	beq.n	10ea <_system_pinmux_config+0x62>
			pin_cfg |= PORT_WRCONFIG_PMUXEN;
			pin_cfg |= (config->mux_position << PORT_WRCONFIG_PMUX_Pos);
    1096:	061b      	lsls	r3, r3, #24
    1098:	2480      	movs	r4, #128	; 0x80
    109a:	0264      	lsls	r4, r4, #9
    109c:	4323      	orrs	r3, r4
		}

		/* Check if the user has requested that the input buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_INPUT) ||
    109e:	7854      	ldrb	r4, [r2, #1]
    10a0:	2502      	movs	r5, #2
    10a2:	43ac      	bics	r4, r5
    10a4:	d106      	bne.n	10b4 <_system_pinmux_config+0x2c>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Enable input buffer flag */
			pin_cfg |= PORT_WRCONFIG_INEN;

			/* Enable pull-up/pull-down control flag if requested */
			if (config->input_pull != SYSTEM_PINMUX_PIN_PULL_NONE) {
    10a6:	7894      	ldrb	r4, [r2, #2]
    10a8:	2c00      	cmp	r4, #0
    10aa:	d120      	bne.n	10ee <_system_pinmux_config+0x66>
			pin_cfg |= PORT_WRCONFIG_INEN;
    10ac:	2480      	movs	r4, #128	; 0x80
    10ae:	02a4      	lsls	r4, r4, #10
    10b0:	4323      	orrs	r3, r4
				pin_cfg |= PORT_WRCONFIG_PULLEN;
			}

			/* Clear the port DIR bits to disable the output buffer */
			port->DIRCLR.reg = pin_mask;
    10b2:	6041      	str	r1, [r0, #4]
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    10b4:	7854      	ldrb	r4, [r2, #1]
    10b6:	3c01      	subs	r4, #1
    10b8:	2c01      	cmp	r4, #1
    10ba:	d91c      	bls.n	10f6 <_system_pinmux_config+0x6e>
		port->DIRCLR.reg = pin_mask;
	}

	/* The Write Configuration register (WRCONFIG) requires the
	 * pins to to grouped into two 16-bit half-words - split them out here */
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    10bc:	040d      	lsls	r5, r1, #16
    10be:	0c2d      	lsrs	r5, r5, #16

	/* Configure the lower 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    10c0:	24a0      	movs	r4, #160	; 0xa0
    10c2:	05e4      	lsls	r4, r4, #23
    10c4:	432c      	orrs	r4, r5
    10c6:	431c      	orrs	r4, r3
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    10c8:	6284      	str	r4, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    10ca:	0c0d      	lsrs	r5, r1, #16

	/* Configure the upper 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    10cc:	24d0      	movs	r4, #208	; 0xd0
    10ce:	0624      	lsls	r4, r4, #24
    10d0:	432c      	orrs	r4, r5
    10d2:	431c      	orrs	r4, r3
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    10d4:	6284      	str	r4, [r0, #40]	; 0x28
			PORT_WRCONFIG_HWSEL;

	if(!config->powersave) {
    10d6:	78d4      	ldrb	r4, [r2, #3]
    10d8:	2c00      	cmp	r4, #0
    10da:	d122      	bne.n	1122 <_system_pinmux_config+0x9a>
		/* Set the pull-up state once the port pins are configured if one was
		 * requested and it does not violate the valid set of port
		 * configurations */
		if (pin_cfg & PORT_WRCONFIG_PULLEN) {
    10dc:	035b      	lsls	r3, r3, #13
    10de:	d51c      	bpl.n	111a <_system_pinmux_config+0x92>
			/* Set the OUT register bits to enable the pull-up if requested,
			 * clear to enable pull-down */
			if (config->input_pull == SYSTEM_PINMUX_PIN_PULL_UP) {
    10e0:	7893      	ldrb	r3, [r2, #2]
    10e2:	2b01      	cmp	r3, #1
    10e4:	d01e      	beq.n	1124 <_system_pinmux_config+0x9c>
				port->OUTSET.reg = pin_mask;
			} else {
				port->OUTCLR.reg = pin_mask;
    10e6:	6141      	str	r1, [r0, #20]
    10e8:	e017      	b.n	111a <_system_pinmux_config+0x92>
	uint32_t pin_cfg = 0;
    10ea:	2300      	movs	r3, #0
    10ec:	e7d7      	b.n	109e <_system_pinmux_config+0x16>
				pin_cfg |= PORT_WRCONFIG_PULLEN;
    10ee:	24c0      	movs	r4, #192	; 0xc0
    10f0:	02e4      	lsls	r4, r4, #11
    10f2:	4323      	orrs	r3, r4
    10f4:	e7dd      	b.n	10b2 <_system_pinmux_config+0x2a>
			pin_cfg &= ~PORT_WRCONFIG_PULLEN;
    10f6:	4c0d      	ldr	r4, [pc, #52]	; (112c <_system_pinmux_config+0xa4>)
    10f8:	4023      	ands	r3, r4
    10fa:	e7df      	b.n	10bc <_system_pinmux_config+0x34>
		port->DIRCLR.reg = pin_mask;
    10fc:	6041      	str	r1, [r0, #4]
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    10fe:	040c      	lsls	r4, r1, #16
    1100:	0c24      	lsrs	r4, r4, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1102:	23a0      	movs	r3, #160	; 0xa0
    1104:	05db      	lsls	r3, r3, #23
    1106:	4323      	orrs	r3, r4
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1108:	6283      	str	r3, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    110a:	0c0c      	lsrs	r4, r1, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    110c:	23d0      	movs	r3, #208	; 0xd0
    110e:	061b      	lsls	r3, r3, #24
    1110:	4323      	orrs	r3, r4
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1112:	6283      	str	r3, [r0, #40]	; 0x28
	if(!config->powersave) {
    1114:	78d3      	ldrb	r3, [r2, #3]
    1116:	2b00      	cmp	r3, #0
    1118:	d103      	bne.n	1122 <_system_pinmux_config+0x9a>
			}
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    111a:	7853      	ldrb	r3, [r2, #1]
    111c:	3b01      	subs	r3, #1
    111e:	2b01      	cmp	r3, #1
    1120:	d902      	bls.n	1128 <_system_pinmux_config+0xa0>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Set the port DIR bits to enable the output buffer */
			port->DIRSET.reg = pin_mask;
		}
	}
}
    1122:	bd30      	pop	{r4, r5, pc}
				port->OUTSET.reg = pin_mask;
    1124:	6181      	str	r1, [r0, #24]
    1126:	e7f8      	b.n	111a <_system_pinmux_config+0x92>
			port->DIRSET.reg = pin_mask;
    1128:	6081      	str	r1, [r0, #8]
}
    112a:	e7fa      	b.n	1122 <_system_pinmux_config+0x9a>
    112c:	fffbffff 	.word	0xfffbffff

00001130 <system_pinmux_pin_set_config>:
 * \param[in] config    Configuration settings for the pin
 */
void system_pinmux_pin_set_config(
		const uint8_t gpio_pin,
		const struct system_pinmux_config *const config)
{
    1130:	b510      	push	{r4, lr}
    1132:	000a      	movs	r2, r1
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    1134:	09c1      	lsrs	r1, r0, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    1136:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
    1138:	2900      	cmp	r1, #0
    113a:	d104      	bne.n	1146 <system_pinmux_pin_set_config+0x16>
		return &(ports[port_index]->Group[group_index]);
    113c:	0943      	lsrs	r3, r0, #5
    113e:	01db      	lsls	r3, r3, #7
    1140:	4905      	ldr	r1, [pc, #20]	; (1158 <system_pinmux_pin_set_config+0x28>)
    1142:	468c      	mov	ip, r1
    1144:	4463      	add	r3, ip
	PortGroup *const port = system_pinmux_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask = (1UL << (gpio_pin % 32));
    1146:	241f      	movs	r4, #31
    1148:	4020      	ands	r0, r4
    114a:	2101      	movs	r1, #1
    114c:	4081      	lsls	r1, r0

	_system_pinmux_config(port, pin_mask, config);
    114e:	0018      	movs	r0, r3
    1150:	4b02      	ldr	r3, [pc, #8]	; (115c <system_pinmux_pin_set_config+0x2c>)
    1152:	4798      	blx	r3
}
    1154:	bd10      	pop	{r4, pc}
    1156:	46c0      	nop			; (mov r8, r8)
    1158:	41004400 	.word	0x41004400
    115c:	00001089 	.word	0x00001089

00001160 <_system_dummy_init>:
 */
void _system_dummy_init(void);
void _system_dummy_init(void)
{
	return;
}
    1160:	4770      	bx	lr
	...

00001164 <system_init>:
 *  - Board hardware initialization (via the Board module)
 *  - Event system driver initialization (via the EVSYS module)
 *  - External Interrupt driver initialization (via the EXTINT module)
 */
void system_init(void)
{
    1164:	b510      	push	{r4, lr}
	/* Configure GCLK and clock sources according to conf_clocks.h */
	system_clock_init();
    1166:	4b05      	ldr	r3, [pc, #20]	; (117c <system_init+0x18>)
    1168:	4798      	blx	r3

	/* Initialize board hardware */
	system_board_init();
    116a:	4b05      	ldr	r3, [pc, #20]	; (1180 <system_init+0x1c>)
    116c:	4798      	blx	r3

	/* Initialize EVSYS hardware */
	_system_events_init();
    116e:	4b05      	ldr	r3, [pc, #20]	; (1184 <system_init+0x20>)
    1170:	4798      	blx	r3

	/* Initialize External hardware */
	_system_extint_init();
    1172:	4b05      	ldr	r3, [pc, #20]	; (1188 <system_init+0x24>)
    1174:	4798      	blx	r3
	
	/* Initialize DIVAS hardware */
	_system_divas_init();
    1176:	4b05      	ldr	r3, [pc, #20]	; (118c <system_init+0x28>)
    1178:	4798      	blx	r3
}
    117a:	bd10      	pop	{r4, pc}
    117c:	00000d69 	.word	0x00000d69
    1180:	00000b95 	.word	0x00000b95
    1184:	00001161 	.word	0x00001161
    1188:	000001cd 	.word	0x000001cd
    118c:	00001161 	.word	0x00001161

00001190 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    1190:	e7fe      	b.n	1190 <Dummy_Handler>
	...

00001194 <Reset_Handler>:
{
    1194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
    1196:	4a2a      	ldr	r2, [pc, #168]	; (1240 <Reset_Handler+0xac>)
    1198:	4b2a      	ldr	r3, [pc, #168]	; (1244 <Reset_Handler+0xb0>)
    119a:	429a      	cmp	r2, r3
    119c:	d011      	beq.n	11c2 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
    119e:	001a      	movs	r2, r3
    11a0:	4b29      	ldr	r3, [pc, #164]	; (1248 <Reset_Handler+0xb4>)
    11a2:	429a      	cmp	r2, r3
    11a4:	d20d      	bcs.n	11c2 <Reset_Handler+0x2e>
    11a6:	4a29      	ldr	r2, [pc, #164]	; (124c <Reset_Handler+0xb8>)
    11a8:	3303      	adds	r3, #3
    11aa:	1a9b      	subs	r3, r3, r2
    11ac:	089b      	lsrs	r3, r3, #2
    11ae:	3301      	adds	r3, #1
    11b0:	009b      	lsls	r3, r3, #2
    11b2:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
    11b4:	4823      	ldr	r0, [pc, #140]	; (1244 <Reset_Handler+0xb0>)
    11b6:	4922      	ldr	r1, [pc, #136]	; (1240 <Reset_Handler+0xac>)
    11b8:	588c      	ldr	r4, [r1, r2]
    11ba:	5084      	str	r4, [r0, r2]
    11bc:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    11be:	429a      	cmp	r2, r3
    11c0:	d1fa      	bne.n	11b8 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
    11c2:	4a23      	ldr	r2, [pc, #140]	; (1250 <Reset_Handler+0xbc>)
    11c4:	4b23      	ldr	r3, [pc, #140]	; (1254 <Reset_Handler+0xc0>)
    11c6:	429a      	cmp	r2, r3
    11c8:	d20a      	bcs.n	11e0 <Reset_Handler+0x4c>
    11ca:	43d3      	mvns	r3, r2
    11cc:	4921      	ldr	r1, [pc, #132]	; (1254 <Reset_Handler+0xc0>)
    11ce:	185b      	adds	r3, r3, r1
    11d0:	2103      	movs	r1, #3
    11d2:	438b      	bics	r3, r1
    11d4:	3304      	adds	r3, #4
    11d6:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
    11d8:	2100      	movs	r1, #0
    11da:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
    11dc:	4293      	cmp	r3, r2
    11de:	d1fc      	bne.n	11da <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    11e0:	4a1d      	ldr	r2, [pc, #116]	; (1258 <Reset_Handler+0xc4>)
    11e2:	21ff      	movs	r1, #255	; 0xff
    11e4:	4b1d      	ldr	r3, [pc, #116]	; (125c <Reset_Handler+0xc8>)
    11e6:	438b      	bics	r3, r1
    11e8:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    11ea:	39fd      	subs	r1, #253	; 0xfd
    11ec:	2390      	movs	r3, #144	; 0x90
    11ee:	005b      	lsls	r3, r3, #1
    11f0:	4a1b      	ldr	r2, [pc, #108]	; (1260 <Reset_Handler+0xcc>)
    11f2:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
    11f4:	4a1b      	ldr	r2, [pc, #108]	; (1264 <Reset_Handler+0xd0>)
    11f6:	78d3      	ldrb	r3, [r2, #3]
    11f8:	2503      	movs	r5, #3
    11fa:	43ab      	bics	r3, r5
    11fc:	2402      	movs	r4, #2
    11fe:	4323      	orrs	r3, r4
    1200:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
    1202:	78d3      	ldrb	r3, [r2, #3]
    1204:	270c      	movs	r7, #12
    1206:	43bb      	bics	r3, r7
    1208:	2608      	movs	r6, #8
    120a:	4333      	orrs	r3, r6
    120c:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    120e:	4b16      	ldr	r3, [pc, #88]	; (1268 <Reset_Handler+0xd4>)
    1210:	7b98      	ldrb	r0, [r3, #14]
    1212:	2230      	movs	r2, #48	; 0x30
    1214:	4390      	bics	r0, r2
    1216:	2220      	movs	r2, #32
    1218:	4310      	orrs	r0, r2
    121a:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    121c:	7b99      	ldrb	r1, [r3, #14]
    121e:	43b9      	bics	r1, r7
    1220:	4331      	orrs	r1, r6
    1222:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    1224:	7b9a      	ldrb	r2, [r3, #14]
    1226:	43aa      	bics	r2, r5
    1228:	4322      	orrs	r2, r4
    122a:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    122c:	4a0f      	ldr	r2, [pc, #60]	; (126c <Reset_Handler+0xd8>)
    122e:	6853      	ldr	r3, [r2, #4]
    1230:	2180      	movs	r1, #128	; 0x80
    1232:	430b      	orrs	r3, r1
    1234:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    1236:	4b0e      	ldr	r3, [pc, #56]	; (1270 <Reset_Handler+0xdc>)
    1238:	4798      	blx	r3
        main();
    123a:	4b0e      	ldr	r3, [pc, #56]	; (1274 <Reset_Handler+0xe0>)
    123c:	4798      	blx	r3
    123e:	e7fe      	b.n	123e <Reset_Handler+0xaa>
    1240:	0000512c 	.word	0x0000512c
    1244:	20000000 	.word	0x20000000
    1248:	2000006c 	.word	0x2000006c
    124c:	20000004 	.word	0x20000004
    1250:	2000006c 	.word	0x2000006c
    1254:	2000026c 	.word	0x2000026c
    1258:	e000ed00 	.word	0xe000ed00
    125c:	00000000 	.word	0x00000000
    1260:	41007000 	.word	0x41007000
    1264:	41005000 	.word	0x41005000
    1268:	41004800 	.word	0x41004800
    126c:	41004000 	.word	0x41004000
    1270:	00002c41 	.word	0x00002c41
    1274:	000013c5 	.word	0x000013c5

00001278 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    1278:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    127a:	4a06      	ldr	r2, [pc, #24]	; (1294 <_sbrk+0x1c>)
    127c:	6812      	ldr	r2, [r2, #0]
    127e:	2a00      	cmp	r2, #0
    1280:	d004      	beq.n	128c <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1282:	4a04      	ldr	r2, [pc, #16]	; (1294 <_sbrk+0x1c>)
    1284:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    1286:	18c3      	adds	r3, r0, r3
    1288:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    128a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    128c:	4902      	ldr	r1, [pc, #8]	; (1298 <_sbrk+0x20>)
    128e:	4a01      	ldr	r2, [pc, #4]	; (1294 <_sbrk+0x1c>)
    1290:	6011      	str	r1, [r2, #0]
    1292:	e7f6      	b.n	1282 <_sbrk+0xa>
    1294:	200000ac 	.word	0x200000ac
    1298:	20002270 	.word	0x20002270

0000129c <extint_detection_callback>:
	return (port_base->IN.reg & pin_mask);
    129c:	4b09      	ldr	r3, [pc, #36]	; (12c4 <extint_detection_callback+0x28>)
    129e:	6a1b      	ldr	r3, [r3, #32]
	if (level) {
    12a0:	061b      	lsls	r3, r3, #24
    12a2:	d409      	bmi.n	12b8 <extint_detection_callback+0x1c>
	} else {
		port_base->OUTCLR.reg = pin_mask;
    12a4:	2280      	movs	r2, #128	; 0x80
    12a6:	05d2      	lsls	r2, r2, #23
    12a8:	4b07      	ldr	r3, [pc, #28]	; (12c8 <extint_detection_callback+0x2c>)
    12aa:	615a      	str	r2, [r3, #20]
void extint_detection_callback(void)
{
	bool pin_state = port_pin_get_input_level(PIN_PA07);
    port_pin_set_output_level(LED_0_PIN, pin_state);
	
	pulse++;
    12ac:	4a07      	ldr	r2, [pc, #28]	; (12cc <extint_detection_callback+0x30>)
    12ae:	7813      	ldrb	r3, [r2, #0]
    12b0:	3301      	adds	r3, #1
    12b2:	b2db      	uxtb	r3, r3
    12b4:	7013      	strb	r3, [r2, #0]
}
    12b6:	4770      	bx	lr
		port_base->OUTSET.reg = pin_mask;
    12b8:	2280      	movs	r2, #128	; 0x80
    12ba:	05d2      	lsls	r2, r2, #23
    12bc:	4b02      	ldr	r3, [pc, #8]	; (12c8 <extint_detection_callback+0x2c>)
    12be:	619a      	str	r2, [r3, #24]
    12c0:	e7f4      	b.n	12ac <extint_detection_callback+0x10>
    12c2:	46c0      	nop			; (mov r8, r8)
    12c4:	41004400 	.word	0x41004400
    12c8:	41004480 	.word	0x41004480
    12cc:	200000b4 	.word	0x200000b4

000012d0 <configure_extint_channel>:
{
    12d0:	b510      	push	{r4, lr}
    12d2:	b084      	sub	sp, #16
	extint_chan_get_config_defaults(&config_extint_chan);
    12d4:	ac01      	add	r4, sp, #4
    12d6:	0020      	movs	r0, r4
    12d8:	4b07      	ldr	r3, [pc, #28]	; (12f8 <configure_extint_channel+0x28>)
    12da:	4798      	blx	r3
	config_extint_chan.gpio_pin           = PIN_PA07A_EIC_EXTINT7;
    12dc:	2307      	movs	r3, #7
    12de:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux       = MUX_PA07A_EIC_EXTINT7;
    12e0:	2300      	movs	r3, #0
    12e2:	6063      	str	r3, [r4, #4]
	config_extint_chan.gpio_pin_pull      = EXTINT_PULL_UP;
    12e4:	3301      	adds	r3, #1
    12e6:	7223      	strb	r3, [r4, #8]
	config_extint_chan.detection_criteria = EXTINT_DETECT_RISING;
    12e8:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(7, &config_extint_chan);
    12ea:	0021      	movs	r1, r4
    12ec:	2007      	movs	r0, #7
    12ee:	4b03      	ldr	r3, [pc, #12]	; (12fc <configure_extint_channel+0x2c>)
    12f0:	4798      	blx	r3
}
    12f2:	b004      	add	sp, #16
    12f4:	bd10      	pop	{r4, pc}
    12f6:	46c0      	nop			; (mov r8, r8)
    12f8:	00000239 	.word	0x00000239
    12fc:	0000024d 	.word	0x0000024d

00001300 <configure_extint_callbacks>:
{
    1300:	b510      	push	{r4, lr}
extint_register_callback(extint_detection_callback,7,EXTINT_CALLBACK_TYPE_DETECT);
    1302:	2200      	movs	r2, #0
    1304:	2107      	movs	r1, #7
    1306:	4804      	ldr	r0, [pc, #16]	; (1318 <configure_extint_callbacks+0x18>)
    1308:	4b04      	ldr	r3, [pc, #16]	; (131c <configure_extint_callbacks+0x1c>)
    130a:	4798      	blx	r3
extint_chan_enable_callback(7,EXTINT_CALLBACK_TYPE_DETECT);
    130c:	2100      	movs	r1, #0
    130e:	2007      	movs	r0, #7
    1310:	4b03      	ldr	r3, [pc, #12]	; (1320 <configure_extint_callbacks+0x20>)
    1312:	4798      	blx	r3
}
    1314:	bd10      	pop	{r4, pc}
    1316:	46c0      	nop			; (mov r8, r8)
    1318:	0000129d 	.word	0x0000129d
    131c:	00000115 	.word	0x00000115
    1320:	00000141 	.word	0x00000141

00001324 <configure_usart>:
void configure_usart(void);
struct usart_module usart_instance;


void configure_usart(void)
{
    1324:	b530      	push	{r4, r5, lr}
    1326:	b091      	sub	sp, #68	; 0x44
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    1328:	2380      	movs	r3, #128	; 0x80
    132a:	05db      	lsls	r3, r3, #23
    132c:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    132e:	2300      	movs	r3, #0
    1330:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    1332:	22ff      	movs	r2, #255	; 0xff
    1334:	4669      	mov	r1, sp
    1336:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    1338:	2200      	movs	r2, #0
    133a:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    133c:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
    133e:	2101      	movs	r1, #1
    1340:	2024      	movs	r0, #36	; 0x24
    1342:	466c      	mov	r4, sp
    1344:	5421      	strb	r1, [r4, r0]
	config->transmitter_enable = true;
    1346:	3001      	adds	r0, #1
    1348:	5421      	strb	r1, [r4, r0]
	config->clock_polarity_inverted = false;
    134a:	3125      	adds	r1, #37	; 0x25
    134c:	5463      	strb	r3, [r4, r1]
	config->use_external_clock = false;
    134e:	3101      	adds	r1, #1
    1350:	5463      	strb	r3, [r4, r1]
	config->ext_clock_freq   = 0;
    1352:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    1354:	3105      	adds	r1, #5
    1356:	5463      	strb	r3, [r4, r1]
	config->generator_source = GCLK_GENERATOR_0;
    1358:	3101      	adds	r1, #1
    135a:	5463      	strb	r3, [r4, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    135c:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    135e:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    1360:	76e3      	strb	r3, [r4, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    1362:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    1364:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    1366:	7662      	strb	r2, [r4, #25]
	config->receive_pulse_length                    = 19;
    1368:	2313      	movs	r3, #19
    136a:	76a3      	strb	r3, [r4, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    136c:	7762      	strb	r2, [r4, #29]

	usart_get_config_defaults(&config_usart);
	


		config_usart.baudrate    = 115200;
    136e:	23e1      	movs	r3, #225	; 0xe1
    1370:	025b      	lsls	r3, r3, #9
    1372:	9308      	str	r3, [sp, #32]
		config_usart.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
    1374:	2380      	movs	r3, #128	; 0x80
    1376:	035b      	lsls	r3, r3, #13
    1378:	9303      	str	r3, [sp, #12]
		config_usart.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
    137a:	4b0d      	ldr	r3, [pc, #52]	; (13b0 <configure_usart+0x8c>)
    137c:	930c      	str	r3, [sp, #48]	; 0x30
		config_usart.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
    137e:	4b0d      	ldr	r3, [pc, #52]	; (13b4 <configure_usart+0x90>)
    1380:	930d      	str	r3, [sp, #52]	; 0x34
		config_usart.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
    1382:	2301      	movs	r3, #1
    1384:	425b      	negs	r3, r3
    1386:	930e      	str	r3, [sp, #56]	; 0x38
		config_usart.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
    1388:	930f      	str	r3, [sp, #60]	; 0x3c

		while (usart_init(&usart_instance,
    138a:	4d0b      	ldr	r5, [pc, #44]	; (13b8 <configure_usart+0x94>)
    138c:	4c0b      	ldr	r4, [pc, #44]	; (13bc <configure_usart+0x98>)
    138e:	466a      	mov	r2, sp
    1390:	490b      	ldr	r1, [pc, #44]	; (13c0 <configure_usart+0x9c>)
    1392:	0028      	movs	r0, r5
    1394:	47a0      	blx	r4
    1396:	2800      	cmp	r0, #0
    1398:	d1f9      	bne.n	138e <configure_usart+0x6a>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    139a:	4b07      	ldr	r3, [pc, #28]	; (13b8 <configure_usart+0x94>)
    139c:	681a      	ldr	r2, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
    139e:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    13a0:	2b00      	cmp	r3, #0
    13a2:	d1fc      	bne.n	139e <configure_usart+0x7a>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    13a4:	6813      	ldr	r3, [r2, #0]
    13a6:	2102      	movs	r1, #2
    13a8:	430b      	orrs	r3, r1
    13aa:	6013      	str	r3, [r2, #0]
		EDBG_CDC_MODULE, &config_usart) != STATUS_OK) {
		}

	usart_enable(&usart_instance);
	
}
    13ac:	b011      	add	sp, #68	; 0x44
    13ae:	bd30      	pop	{r4, r5, pc}
    13b0:	00160002 	.word	0x00160002
    13b4:	00170002 	.word	0x00170002
    13b8:	20000118 	.word	0x20000118
    13bc:	000006ed 	.word	0x000006ed
    13c0:	42001400 	.word	0x42001400

000013c4 <main>:

int main(void)
{
    13c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    13c6:	46de      	mov	lr, fp
    13c8:	4657      	mov	r7, sl
    13ca:	464e      	mov	r6, r9
    13cc:	4645      	mov	r5, r8
    13ce:	b5e0      	push	{r5, r6, r7, lr}
    13d0:	b08b      	sub	sp, #44	; 0x2c
	system_init();
    13d2:	4b48      	ldr	r3, [pc, #288]	; (14f4 <main+0x130>)
    13d4:	4798      	blx	r3
	configure_usart();
    13d6:	4b48      	ldr	r3, [pc, #288]	; (14f8 <main+0x134>)
    13d8:	4798      	blx	r3
	
    configure_extint_channel();
    13da:	4b48      	ldr	r3, [pc, #288]	; (14fc <main+0x138>)
    13dc:	4798      	blx	r3
	configure_extint_callbacks();
    13de:	4b48      	ldr	r3, [pc, #288]	; (1500 <main+0x13c>)
    13e0:	4798      	blx	r3
	cpu_irq_enable();
    13e2:	2201      	movs	r2, #1
    13e4:	4b47      	ldr	r3, [pc, #284]	; (1504 <main+0x140>)
    13e6:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
    13e8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    13ec:	b662      	cpsie	i
	

	uint16_t temp;

	while (true) {
		pulse = 0;
    13ee:	4b46      	ldr	r3, [pc, #280]	; (1508 <main+0x144>)
    13f0:	469a      	mov	sl, r3
    13f2:	2300      	movs	r3, #0
    13f4:	466a      	mov	r2, sp
    13f6:	71d3      	strb	r3, [r2, #7]
    13f8:	4b42      	ldr	r3, [pc, #264]	; (1504 <main+0x140>)
    13fa:	469b      	mov	fp, r3
	cpu_irq_disable();
    13fc:	4699      	mov	r9, r3
    13fe:	4653      	mov	r3, sl
    1400:	466a      	mov	r2, sp
    1402:	79d2      	ldrb	r2, [r2, #7]
    1404:	701a      	strb	r2, [r3, #0]
	cpu_irq_enable();
    1406:	465b      	mov	r3, fp
    1408:	2201      	movs	r2, #1
    140a:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
    140c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    1410:	b662      	cpsie	i
		system_interrupt_enable_global();
		DelayMs(1000);
    1412:	4b3e      	ldr	r3, [pc, #248]	; (150c <main+0x148>)
    1414:	9302      	str	r3, [sp, #8]
    1416:	9b02      	ldr	r3, [sp, #8]
    1418:	1e5a      	subs	r2, r3, #1
    141a:	9202      	str	r2, [sp, #8]
    141c:	2b00      	cmp	r3, #0
    141e:	d1fa      	bne.n	1416 <main+0x52>
  __ASM volatile ("cpsid i" : : : "memory");
    1420:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
    1422:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    1426:	464b      	mov	r3, r9
    1428:	2200      	movs	r2, #0
    142a:	701a      	strb	r2, [r3, #0]
		system_interrupt_disable_global();
		
		flowRate = 33.83 * pulse/kFactor;
    142c:	4b36      	ldr	r3, [pc, #216]	; (1508 <main+0x144>)
    142e:	7818      	ldrb	r0, [r3, #0]
    1430:	b2c0      	uxtb	r0, r0
    1432:	4b37      	ldr	r3, [pc, #220]	; (1510 <main+0x14c>)
    1434:	4698      	mov	r8, r3
    1436:	4b37      	ldr	r3, [pc, #220]	; (1514 <main+0x150>)
    1438:	4798      	blx	r3
    143a:	4a37      	ldr	r2, [pc, #220]	; (1518 <main+0x154>)
    143c:	4b37      	ldr	r3, [pc, #220]	; (151c <main+0x158>)
    143e:	4c38      	ldr	r4, [pc, #224]	; (1520 <main+0x15c>)
    1440:	47a0      	blx	r4
    1442:	0004      	movs	r4, r0
    1444:	000d      	movs	r5, r1
    1446:	4e37      	ldr	r6, [pc, #220]	; (1524 <main+0x160>)
    1448:	4b37      	ldr	r3, [pc, #220]	; (1528 <main+0x164>)
    144a:	6818      	ldr	r0, [r3, #0]
    144c:	47b0      	blx	r6
    144e:	0002      	movs	r2, r0
    1450:	000b      	movs	r3, r1
    1452:	0020      	movs	r0, r4
    1454:	0029      	movs	r1, r5
    1456:	4c35      	ldr	r4, [pc, #212]	; (152c <main+0x168>)
    1458:	47a0      	blx	r4
    145a:	4b35      	ldr	r3, [pc, #212]	; (1530 <main+0x16c>)
    145c:	4798      	blx	r3
    145e:	4643      	mov	r3, r8
    1460:	6018      	str	r0, [r3, #0]
		
		itoa(pulse, buff1, 10);
    1462:	4b29      	ldr	r3, [pc, #164]	; (1508 <main+0x144>)
    1464:	7818      	ldrb	r0, [r3, #0]
    1466:	b2c0      	uxtb	r0, r0
    1468:	4d32      	ldr	r5, [pc, #200]	; (1534 <main+0x170>)
    146a:	220a      	movs	r2, #10
    146c:	0029      	movs	r1, r5
    146e:	4b32      	ldr	r3, [pc, #200]	; (1538 <main+0x174>)
    1470:	4798      	blx	r3
		
		char *gcvtf(float flowRate, int ndigit, char *buff2);		
		      gcvtf((int)(flowRate+0.75),2,buff2);
    1472:	4f32      	ldr	r7, [pc, #200]	; (153c <main+0x178>)
    1474:	4643      	mov	r3, r8
    1476:	6818      	ldr	r0, [r3, #0]
    1478:	47b0      	blx	r6
    147a:	2200      	movs	r2, #0
    147c:	4b30      	ldr	r3, [pc, #192]	; (1540 <main+0x17c>)
    147e:	4e31      	ldr	r6, [pc, #196]	; (1544 <main+0x180>)
    1480:	47b0      	blx	r6
    1482:	4b31      	ldr	r3, [pc, #196]	; (1548 <main+0x184>)
    1484:	4798      	blx	r3
    1486:	4b31      	ldr	r3, [pc, #196]	; (154c <main+0x188>)
    1488:	4798      	blx	r3
    148a:	003a      	movs	r2, r7
    148c:	2102      	movs	r1, #2
    148e:	4b30      	ldr	r3, [pc, #192]	; (1550 <main+0x18c>)
    1490:	4798      	blx	r3
			  
		
		usart_write_buffer_wait(&usart_instance, buff1, sizeof(buff1));
    1492:	4e30      	ldr	r6, [pc, #192]	; (1554 <main+0x190>)
    1494:	2278      	movs	r2, #120	; 0x78
    1496:	0029      	movs	r1, r5
    1498:	0030      	movs	r0, r6
    149a:	4d2f      	ldr	r5, [pc, #188]	; (1558 <main+0x194>)
    149c:	47a8      	blx	r5
		uint8_t string1[] = "  pulse \t";
    149e:	a903      	add	r1, sp, #12
    14a0:	4b2e      	ldr	r3, [pc, #184]	; (155c <main+0x198>)
    14a2:	000a      	movs	r2, r1
    14a4:	cb11      	ldmia	r3!, {r0, r4}
    14a6:	c211      	stmia	r2!, {r0, r4}
    14a8:	881b      	ldrh	r3, [r3, #0]
    14aa:	8013      	strh	r3, [r2, #0]
		usart_write_buffer_wait(&usart_instance, string1, sizeof(string1));
    14ac:	220a      	movs	r2, #10
    14ae:	0030      	movs	r0, r6
    14b0:	47a8      	blx	r5
		
		usart_write_buffer_wait(&usart_instance, buff2, sizeof(buff2));
    14b2:	22c8      	movs	r2, #200	; 0xc8
    14b4:	0039      	movs	r1, r7
    14b6:	0030      	movs	r0, r6
    14b8:	47a8      	blx	r5
		uint8_t string2[] = "  Oz/min \r\n";
    14ba:	a906      	add	r1, sp, #24
    14bc:	4b28      	ldr	r3, [pc, #160]	; (1560 <main+0x19c>)
    14be:	000a      	movs	r2, r1
    14c0:	cb91      	ldmia	r3!, {r0, r4, r7}
    14c2:	c291      	stmia	r2!, {r0, r4, r7}
		usart_write_buffer_wait(&usart_instance, string2, sizeof(string2));
    14c4:	220c      	movs	r2, #12
    14c6:	0030      	movs	r0, r6
    14c8:	47a8      	blx	r5
		
		
		if (usart_read_wait(&usart_instance, &temp) == STATUS_OK) {
    14ca:	211e      	movs	r1, #30
    14cc:	ab02      	add	r3, sp, #8
    14ce:	469c      	mov	ip, r3
    14d0:	4461      	add	r1, ip
    14d2:	0030      	movs	r0, r6
    14d4:	4b23      	ldr	r3, [pc, #140]	; (1564 <main+0x1a0>)
    14d6:	4798      	blx	r3
    14d8:	2800      	cmp	r0, #0
    14da:	d190      	bne.n	13fe <main+0x3a>
			while (usart_write_wait(&usart_instance, temp) != STATUS_OK) {
    14dc:	251e      	movs	r5, #30
    14de:	ab02      	add	r3, sp, #8
    14e0:	469c      	mov	ip, r3
    14e2:	4465      	add	r5, ip
    14e4:	4c1b      	ldr	r4, [pc, #108]	; (1554 <main+0x190>)
    14e6:	4e20      	ldr	r6, [pc, #128]	; (1568 <main+0x1a4>)
    14e8:	8829      	ldrh	r1, [r5, #0]
    14ea:	0020      	movs	r0, r4
    14ec:	47b0      	blx	r6
    14ee:	2800      	cmp	r0, #0
    14f0:	d1fa      	bne.n	14e8 <main+0x124>
    14f2:	e784      	b.n	13fe <main+0x3a>
    14f4:	00001165 	.word	0x00001165
    14f8:	00001325 	.word	0x00001325
    14fc:	000012d1 	.word	0x000012d1
    1500:	00001301 	.word	0x00001301
    1504:	20000000 	.word	0x20000000
    1508:	200000b4 	.word	0x200000b4
    150c:	000f4240 	.word	0x000f4240
    1510:	200000b0 	.word	0x200000b0
    1514:	00002969 	.word	0x00002969
    1518:	70a3d70a 	.word	0x70a3d70a
    151c:	4040ea3d 	.word	0x4040ea3d
    1520:	00002401 	.word	0x00002401
    1524:	000029ed 	.word	0x000029ed
    1528:	20000004 	.word	0x20000004
    152c:	00001d99 	.word	0x00001d99
    1530:	00002a91 	.word	0x00002a91
    1534:	20000124 	.word	0x20000124
    1538:	00002cb9 	.word	0x00002cb9
    153c:	2000019c 	.word	0x2000019c
    1540:	3fe80000 	.word	0x3fe80000
    1544:	00001779 	.word	0x00001779
    1548:	00002901 	.word	0x00002901
    154c:	000016d9 	.word	0x000016d9
    1550:	00002c2d 	.word	0x00002c2d
    1554:	20000118 	.word	0x20000118
    1558:	00000a69 	.word	0x00000a69
    155c:	00004f3c 	.word	0x00004f3c
    1560:	00004f48 	.word	0x00004f48
    1564:	00000a05 	.word	0x00000a05
    1568:	000009e1 	.word	0x000009e1

0000156c <__udivsi3>:
    156c:	2200      	movs	r2, #0
    156e:	0843      	lsrs	r3, r0, #1
    1570:	428b      	cmp	r3, r1
    1572:	d374      	bcc.n	165e <__udivsi3+0xf2>
    1574:	0903      	lsrs	r3, r0, #4
    1576:	428b      	cmp	r3, r1
    1578:	d35f      	bcc.n	163a <__udivsi3+0xce>
    157a:	0a03      	lsrs	r3, r0, #8
    157c:	428b      	cmp	r3, r1
    157e:	d344      	bcc.n	160a <__udivsi3+0x9e>
    1580:	0b03      	lsrs	r3, r0, #12
    1582:	428b      	cmp	r3, r1
    1584:	d328      	bcc.n	15d8 <__udivsi3+0x6c>
    1586:	0c03      	lsrs	r3, r0, #16
    1588:	428b      	cmp	r3, r1
    158a:	d30d      	bcc.n	15a8 <__udivsi3+0x3c>
    158c:	22ff      	movs	r2, #255	; 0xff
    158e:	0209      	lsls	r1, r1, #8
    1590:	ba12      	rev	r2, r2
    1592:	0c03      	lsrs	r3, r0, #16
    1594:	428b      	cmp	r3, r1
    1596:	d302      	bcc.n	159e <__udivsi3+0x32>
    1598:	1212      	asrs	r2, r2, #8
    159a:	0209      	lsls	r1, r1, #8
    159c:	d065      	beq.n	166a <__udivsi3+0xfe>
    159e:	0b03      	lsrs	r3, r0, #12
    15a0:	428b      	cmp	r3, r1
    15a2:	d319      	bcc.n	15d8 <__udivsi3+0x6c>
    15a4:	e000      	b.n	15a8 <__udivsi3+0x3c>
    15a6:	0a09      	lsrs	r1, r1, #8
    15a8:	0bc3      	lsrs	r3, r0, #15
    15aa:	428b      	cmp	r3, r1
    15ac:	d301      	bcc.n	15b2 <__udivsi3+0x46>
    15ae:	03cb      	lsls	r3, r1, #15
    15b0:	1ac0      	subs	r0, r0, r3
    15b2:	4152      	adcs	r2, r2
    15b4:	0b83      	lsrs	r3, r0, #14
    15b6:	428b      	cmp	r3, r1
    15b8:	d301      	bcc.n	15be <__udivsi3+0x52>
    15ba:	038b      	lsls	r3, r1, #14
    15bc:	1ac0      	subs	r0, r0, r3
    15be:	4152      	adcs	r2, r2
    15c0:	0b43      	lsrs	r3, r0, #13
    15c2:	428b      	cmp	r3, r1
    15c4:	d301      	bcc.n	15ca <__udivsi3+0x5e>
    15c6:	034b      	lsls	r3, r1, #13
    15c8:	1ac0      	subs	r0, r0, r3
    15ca:	4152      	adcs	r2, r2
    15cc:	0b03      	lsrs	r3, r0, #12
    15ce:	428b      	cmp	r3, r1
    15d0:	d301      	bcc.n	15d6 <__udivsi3+0x6a>
    15d2:	030b      	lsls	r3, r1, #12
    15d4:	1ac0      	subs	r0, r0, r3
    15d6:	4152      	adcs	r2, r2
    15d8:	0ac3      	lsrs	r3, r0, #11
    15da:	428b      	cmp	r3, r1
    15dc:	d301      	bcc.n	15e2 <__udivsi3+0x76>
    15de:	02cb      	lsls	r3, r1, #11
    15e0:	1ac0      	subs	r0, r0, r3
    15e2:	4152      	adcs	r2, r2
    15e4:	0a83      	lsrs	r3, r0, #10
    15e6:	428b      	cmp	r3, r1
    15e8:	d301      	bcc.n	15ee <__udivsi3+0x82>
    15ea:	028b      	lsls	r3, r1, #10
    15ec:	1ac0      	subs	r0, r0, r3
    15ee:	4152      	adcs	r2, r2
    15f0:	0a43      	lsrs	r3, r0, #9
    15f2:	428b      	cmp	r3, r1
    15f4:	d301      	bcc.n	15fa <__udivsi3+0x8e>
    15f6:	024b      	lsls	r3, r1, #9
    15f8:	1ac0      	subs	r0, r0, r3
    15fa:	4152      	adcs	r2, r2
    15fc:	0a03      	lsrs	r3, r0, #8
    15fe:	428b      	cmp	r3, r1
    1600:	d301      	bcc.n	1606 <__udivsi3+0x9a>
    1602:	020b      	lsls	r3, r1, #8
    1604:	1ac0      	subs	r0, r0, r3
    1606:	4152      	adcs	r2, r2
    1608:	d2cd      	bcs.n	15a6 <__udivsi3+0x3a>
    160a:	09c3      	lsrs	r3, r0, #7
    160c:	428b      	cmp	r3, r1
    160e:	d301      	bcc.n	1614 <__udivsi3+0xa8>
    1610:	01cb      	lsls	r3, r1, #7
    1612:	1ac0      	subs	r0, r0, r3
    1614:	4152      	adcs	r2, r2
    1616:	0983      	lsrs	r3, r0, #6
    1618:	428b      	cmp	r3, r1
    161a:	d301      	bcc.n	1620 <__udivsi3+0xb4>
    161c:	018b      	lsls	r3, r1, #6
    161e:	1ac0      	subs	r0, r0, r3
    1620:	4152      	adcs	r2, r2
    1622:	0943      	lsrs	r3, r0, #5
    1624:	428b      	cmp	r3, r1
    1626:	d301      	bcc.n	162c <__udivsi3+0xc0>
    1628:	014b      	lsls	r3, r1, #5
    162a:	1ac0      	subs	r0, r0, r3
    162c:	4152      	adcs	r2, r2
    162e:	0903      	lsrs	r3, r0, #4
    1630:	428b      	cmp	r3, r1
    1632:	d301      	bcc.n	1638 <__udivsi3+0xcc>
    1634:	010b      	lsls	r3, r1, #4
    1636:	1ac0      	subs	r0, r0, r3
    1638:	4152      	adcs	r2, r2
    163a:	08c3      	lsrs	r3, r0, #3
    163c:	428b      	cmp	r3, r1
    163e:	d301      	bcc.n	1644 <__udivsi3+0xd8>
    1640:	00cb      	lsls	r3, r1, #3
    1642:	1ac0      	subs	r0, r0, r3
    1644:	4152      	adcs	r2, r2
    1646:	0883      	lsrs	r3, r0, #2
    1648:	428b      	cmp	r3, r1
    164a:	d301      	bcc.n	1650 <__udivsi3+0xe4>
    164c:	008b      	lsls	r3, r1, #2
    164e:	1ac0      	subs	r0, r0, r3
    1650:	4152      	adcs	r2, r2
    1652:	0843      	lsrs	r3, r0, #1
    1654:	428b      	cmp	r3, r1
    1656:	d301      	bcc.n	165c <__udivsi3+0xf0>
    1658:	004b      	lsls	r3, r1, #1
    165a:	1ac0      	subs	r0, r0, r3
    165c:	4152      	adcs	r2, r2
    165e:	1a41      	subs	r1, r0, r1
    1660:	d200      	bcs.n	1664 <__udivsi3+0xf8>
    1662:	4601      	mov	r1, r0
    1664:	4152      	adcs	r2, r2
    1666:	4610      	mov	r0, r2
    1668:	4770      	bx	lr
    166a:	e7ff      	b.n	166c <__udivsi3+0x100>
    166c:	b501      	push	{r0, lr}
    166e:	2000      	movs	r0, #0
    1670:	f000 f806 	bl	1680 <__aeabi_idiv0>
    1674:	bd02      	pop	{r1, pc}
    1676:	46c0      	nop			; (mov r8, r8)

00001678 <__aeabi_uidivmod>:
    1678:	2900      	cmp	r1, #0
    167a:	d0f7      	beq.n	166c <__udivsi3+0x100>
    167c:	e776      	b.n	156c <__udivsi3>
    167e:	4770      	bx	lr

00001680 <__aeabi_idiv0>:
    1680:	4770      	bx	lr
    1682:	46c0      	nop			; (mov r8, r8)

00001684 <__aeabi_lmul>:
    1684:	b5f0      	push	{r4, r5, r6, r7, lr}
    1686:	46ce      	mov	lr, r9
    1688:	4647      	mov	r7, r8
    168a:	0415      	lsls	r5, r2, #16
    168c:	0c2d      	lsrs	r5, r5, #16
    168e:	002e      	movs	r6, r5
    1690:	b580      	push	{r7, lr}
    1692:	0407      	lsls	r7, r0, #16
    1694:	0c14      	lsrs	r4, r2, #16
    1696:	0c3f      	lsrs	r7, r7, #16
    1698:	4699      	mov	r9, r3
    169a:	0c03      	lsrs	r3, r0, #16
    169c:	437e      	muls	r6, r7
    169e:	435d      	muls	r5, r3
    16a0:	4367      	muls	r7, r4
    16a2:	4363      	muls	r3, r4
    16a4:	197f      	adds	r7, r7, r5
    16a6:	0c34      	lsrs	r4, r6, #16
    16a8:	19e4      	adds	r4, r4, r7
    16aa:	469c      	mov	ip, r3
    16ac:	42a5      	cmp	r5, r4
    16ae:	d903      	bls.n	16b8 <__aeabi_lmul+0x34>
    16b0:	2380      	movs	r3, #128	; 0x80
    16b2:	025b      	lsls	r3, r3, #9
    16b4:	4698      	mov	r8, r3
    16b6:	44c4      	add	ip, r8
    16b8:	464b      	mov	r3, r9
    16ba:	4351      	muls	r1, r2
    16bc:	4343      	muls	r3, r0
    16be:	0436      	lsls	r6, r6, #16
    16c0:	0c36      	lsrs	r6, r6, #16
    16c2:	0c25      	lsrs	r5, r4, #16
    16c4:	0424      	lsls	r4, r4, #16
    16c6:	4465      	add	r5, ip
    16c8:	19a4      	adds	r4, r4, r6
    16ca:	1859      	adds	r1, r3, r1
    16cc:	1949      	adds	r1, r1, r5
    16ce:	0020      	movs	r0, r4
    16d0:	bc0c      	pop	{r2, r3}
    16d2:	4690      	mov	r8, r2
    16d4:	4699      	mov	r9, r3
    16d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

000016d8 <__aeabi_i2f>:
    16d8:	b570      	push	{r4, r5, r6, lr}
    16da:	2800      	cmp	r0, #0
    16dc:	d030      	beq.n	1740 <__aeabi_i2f+0x68>
    16de:	17c3      	asrs	r3, r0, #31
    16e0:	18c4      	adds	r4, r0, r3
    16e2:	405c      	eors	r4, r3
    16e4:	0fc5      	lsrs	r5, r0, #31
    16e6:	0020      	movs	r0, r4
    16e8:	f001 fa5c 	bl	2ba4 <__clzsi2>
    16ec:	239e      	movs	r3, #158	; 0x9e
    16ee:	1a1b      	subs	r3, r3, r0
    16f0:	2b96      	cmp	r3, #150	; 0x96
    16f2:	dc0d      	bgt.n	1710 <__aeabi_i2f+0x38>
    16f4:	2296      	movs	r2, #150	; 0x96
    16f6:	1ad2      	subs	r2, r2, r3
    16f8:	4094      	lsls	r4, r2
    16fa:	002a      	movs	r2, r5
    16fc:	0264      	lsls	r4, r4, #9
    16fe:	0a64      	lsrs	r4, r4, #9
    1700:	b2db      	uxtb	r3, r3
    1702:	0264      	lsls	r4, r4, #9
    1704:	05db      	lsls	r3, r3, #23
    1706:	0a60      	lsrs	r0, r4, #9
    1708:	07d2      	lsls	r2, r2, #31
    170a:	4318      	orrs	r0, r3
    170c:	4310      	orrs	r0, r2
    170e:	bd70      	pop	{r4, r5, r6, pc}
    1710:	2b99      	cmp	r3, #153	; 0x99
    1712:	dc19      	bgt.n	1748 <__aeabi_i2f+0x70>
    1714:	2299      	movs	r2, #153	; 0x99
    1716:	1ad2      	subs	r2, r2, r3
    1718:	2a00      	cmp	r2, #0
    171a:	dd29      	ble.n	1770 <__aeabi_i2f+0x98>
    171c:	4094      	lsls	r4, r2
    171e:	0022      	movs	r2, r4
    1720:	4c14      	ldr	r4, [pc, #80]	; (1774 <__aeabi_i2f+0x9c>)
    1722:	4014      	ands	r4, r2
    1724:	0751      	lsls	r1, r2, #29
    1726:	d004      	beq.n	1732 <__aeabi_i2f+0x5a>
    1728:	210f      	movs	r1, #15
    172a:	400a      	ands	r2, r1
    172c:	2a04      	cmp	r2, #4
    172e:	d000      	beq.n	1732 <__aeabi_i2f+0x5a>
    1730:	3404      	adds	r4, #4
    1732:	0162      	lsls	r2, r4, #5
    1734:	d413      	bmi.n	175e <__aeabi_i2f+0x86>
    1736:	01a4      	lsls	r4, r4, #6
    1738:	0a64      	lsrs	r4, r4, #9
    173a:	b2db      	uxtb	r3, r3
    173c:	002a      	movs	r2, r5
    173e:	e7e0      	b.n	1702 <__aeabi_i2f+0x2a>
    1740:	2200      	movs	r2, #0
    1742:	2300      	movs	r3, #0
    1744:	2400      	movs	r4, #0
    1746:	e7dc      	b.n	1702 <__aeabi_i2f+0x2a>
    1748:	2205      	movs	r2, #5
    174a:	0021      	movs	r1, r4
    174c:	1a12      	subs	r2, r2, r0
    174e:	40d1      	lsrs	r1, r2
    1750:	22b9      	movs	r2, #185	; 0xb9
    1752:	1ad2      	subs	r2, r2, r3
    1754:	4094      	lsls	r4, r2
    1756:	1e62      	subs	r2, r4, #1
    1758:	4194      	sbcs	r4, r2
    175a:	430c      	orrs	r4, r1
    175c:	e7da      	b.n	1714 <__aeabi_i2f+0x3c>
    175e:	4b05      	ldr	r3, [pc, #20]	; (1774 <__aeabi_i2f+0x9c>)
    1760:	002a      	movs	r2, r5
    1762:	401c      	ands	r4, r3
    1764:	239f      	movs	r3, #159	; 0x9f
    1766:	01a4      	lsls	r4, r4, #6
    1768:	1a1b      	subs	r3, r3, r0
    176a:	0a64      	lsrs	r4, r4, #9
    176c:	b2db      	uxtb	r3, r3
    176e:	e7c8      	b.n	1702 <__aeabi_i2f+0x2a>
    1770:	0022      	movs	r2, r4
    1772:	e7d5      	b.n	1720 <__aeabi_i2f+0x48>
    1774:	fbffffff 	.word	0xfbffffff

00001778 <__aeabi_dadd>:
    1778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    177a:	4645      	mov	r5, r8
    177c:	46de      	mov	lr, fp
    177e:	4657      	mov	r7, sl
    1780:	464e      	mov	r6, r9
    1782:	030c      	lsls	r4, r1, #12
    1784:	b5e0      	push	{r5, r6, r7, lr}
    1786:	004e      	lsls	r6, r1, #1
    1788:	0fc9      	lsrs	r1, r1, #31
    178a:	4688      	mov	r8, r1
    178c:	000d      	movs	r5, r1
    178e:	0a61      	lsrs	r1, r4, #9
    1790:	0f44      	lsrs	r4, r0, #29
    1792:	430c      	orrs	r4, r1
    1794:	00c7      	lsls	r7, r0, #3
    1796:	0319      	lsls	r1, r3, #12
    1798:	0058      	lsls	r0, r3, #1
    179a:	0fdb      	lsrs	r3, r3, #31
    179c:	469b      	mov	fp, r3
    179e:	0a4b      	lsrs	r3, r1, #9
    17a0:	0f51      	lsrs	r1, r2, #29
    17a2:	430b      	orrs	r3, r1
    17a4:	0d76      	lsrs	r6, r6, #21
    17a6:	0d40      	lsrs	r0, r0, #21
    17a8:	0019      	movs	r1, r3
    17aa:	00d2      	lsls	r2, r2, #3
    17ac:	45d8      	cmp	r8, fp
    17ae:	d100      	bne.n	17b2 <__aeabi_dadd+0x3a>
    17b0:	e0ae      	b.n	1910 <__aeabi_dadd+0x198>
    17b2:	1a35      	subs	r5, r6, r0
    17b4:	2d00      	cmp	r5, #0
    17b6:	dc00      	bgt.n	17ba <__aeabi_dadd+0x42>
    17b8:	e0f6      	b.n	19a8 <__aeabi_dadd+0x230>
    17ba:	2800      	cmp	r0, #0
    17bc:	d10f      	bne.n	17de <__aeabi_dadd+0x66>
    17be:	4313      	orrs	r3, r2
    17c0:	d100      	bne.n	17c4 <__aeabi_dadd+0x4c>
    17c2:	e0db      	b.n	197c <__aeabi_dadd+0x204>
    17c4:	1e6b      	subs	r3, r5, #1
    17c6:	2b00      	cmp	r3, #0
    17c8:	d000      	beq.n	17cc <__aeabi_dadd+0x54>
    17ca:	e137      	b.n	1a3c <__aeabi_dadd+0x2c4>
    17cc:	1aba      	subs	r2, r7, r2
    17ce:	4297      	cmp	r7, r2
    17d0:	41bf      	sbcs	r7, r7
    17d2:	1a64      	subs	r4, r4, r1
    17d4:	427f      	negs	r7, r7
    17d6:	1be4      	subs	r4, r4, r7
    17d8:	2601      	movs	r6, #1
    17da:	0017      	movs	r7, r2
    17dc:	e024      	b.n	1828 <__aeabi_dadd+0xb0>
    17de:	4bc6      	ldr	r3, [pc, #792]	; (1af8 <__aeabi_dadd+0x380>)
    17e0:	429e      	cmp	r6, r3
    17e2:	d04d      	beq.n	1880 <__aeabi_dadd+0x108>
    17e4:	2380      	movs	r3, #128	; 0x80
    17e6:	041b      	lsls	r3, r3, #16
    17e8:	4319      	orrs	r1, r3
    17ea:	2d38      	cmp	r5, #56	; 0x38
    17ec:	dd00      	ble.n	17f0 <__aeabi_dadd+0x78>
    17ee:	e107      	b.n	1a00 <__aeabi_dadd+0x288>
    17f0:	2d1f      	cmp	r5, #31
    17f2:	dd00      	ble.n	17f6 <__aeabi_dadd+0x7e>
    17f4:	e138      	b.n	1a68 <__aeabi_dadd+0x2f0>
    17f6:	2020      	movs	r0, #32
    17f8:	1b43      	subs	r3, r0, r5
    17fa:	469a      	mov	sl, r3
    17fc:	000b      	movs	r3, r1
    17fe:	4650      	mov	r0, sl
    1800:	4083      	lsls	r3, r0
    1802:	4699      	mov	r9, r3
    1804:	0013      	movs	r3, r2
    1806:	4648      	mov	r0, r9
    1808:	40eb      	lsrs	r3, r5
    180a:	4318      	orrs	r0, r3
    180c:	0003      	movs	r3, r0
    180e:	4650      	mov	r0, sl
    1810:	4082      	lsls	r2, r0
    1812:	1e50      	subs	r0, r2, #1
    1814:	4182      	sbcs	r2, r0
    1816:	40e9      	lsrs	r1, r5
    1818:	431a      	orrs	r2, r3
    181a:	1aba      	subs	r2, r7, r2
    181c:	1a61      	subs	r1, r4, r1
    181e:	4297      	cmp	r7, r2
    1820:	41a4      	sbcs	r4, r4
    1822:	0017      	movs	r7, r2
    1824:	4264      	negs	r4, r4
    1826:	1b0c      	subs	r4, r1, r4
    1828:	0223      	lsls	r3, r4, #8
    182a:	d562      	bpl.n	18f2 <__aeabi_dadd+0x17a>
    182c:	0264      	lsls	r4, r4, #9
    182e:	0a65      	lsrs	r5, r4, #9
    1830:	2d00      	cmp	r5, #0
    1832:	d100      	bne.n	1836 <__aeabi_dadd+0xbe>
    1834:	e0df      	b.n	19f6 <__aeabi_dadd+0x27e>
    1836:	0028      	movs	r0, r5
    1838:	f001 f9b4 	bl	2ba4 <__clzsi2>
    183c:	0003      	movs	r3, r0
    183e:	3b08      	subs	r3, #8
    1840:	2b1f      	cmp	r3, #31
    1842:	dd00      	ble.n	1846 <__aeabi_dadd+0xce>
    1844:	e0d2      	b.n	19ec <__aeabi_dadd+0x274>
    1846:	2220      	movs	r2, #32
    1848:	003c      	movs	r4, r7
    184a:	1ad2      	subs	r2, r2, r3
    184c:	409d      	lsls	r5, r3
    184e:	40d4      	lsrs	r4, r2
    1850:	409f      	lsls	r7, r3
    1852:	4325      	orrs	r5, r4
    1854:	429e      	cmp	r6, r3
    1856:	dd00      	ble.n	185a <__aeabi_dadd+0xe2>
    1858:	e0c4      	b.n	19e4 <__aeabi_dadd+0x26c>
    185a:	1b9e      	subs	r6, r3, r6
    185c:	1c73      	adds	r3, r6, #1
    185e:	2b1f      	cmp	r3, #31
    1860:	dd00      	ble.n	1864 <__aeabi_dadd+0xec>
    1862:	e0f1      	b.n	1a48 <__aeabi_dadd+0x2d0>
    1864:	2220      	movs	r2, #32
    1866:	0038      	movs	r0, r7
    1868:	0029      	movs	r1, r5
    186a:	1ad2      	subs	r2, r2, r3
    186c:	40d8      	lsrs	r0, r3
    186e:	4091      	lsls	r1, r2
    1870:	4097      	lsls	r7, r2
    1872:	002c      	movs	r4, r5
    1874:	4301      	orrs	r1, r0
    1876:	1e78      	subs	r0, r7, #1
    1878:	4187      	sbcs	r7, r0
    187a:	40dc      	lsrs	r4, r3
    187c:	2600      	movs	r6, #0
    187e:	430f      	orrs	r7, r1
    1880:	077b      	lsls	r3, r7, #29
    1882:	d009      	beq.n	1898 <__aeabi_dadd+0x120>
    1884:	230f      	movs	r3, #15
    1886:	403b      	ands	r3, r7
    1888:	2b04      	cmp	r3, #4
    188a:	d005      	beq.n	1898 <__aeabi_dadd+0x120>
    188c:	1d3b      	adds	r3, r7, #4
    188e:	42bb      	cmp	r3, r7
    1890:	41bf      	sbcs	r7, r7
    1892:	427f      	negs	r7, r7
    1894:	19e4      	adds	r4, r4, r7
    1896:	001f      	movs	r7, r3
    1898:	0223      	lsls	r3, r4, #8
    189a:	d52c      	bpl.n	18f6 <__aeabi_dadd+0x17e>
    189c:	4b96      	ldr	r3, [pc, #600]	; (1af8 <__aeabi_dadd+0x380>)
    189e:	3601      	adds	r6, #1
    18a0:	429e      	cmp	r6, r3
    18a2:	d100      	bne.n	18a6 <__aeabi_dadd+0x12e>
    18a4:	e09a      	b.n	19dc <__aeabi_dadd+0x264>
    18a6:	4645      	mov	r5, r8
    18a8:	4b94      	ldr	r3, [pc, #592]	; (1afc <__aeabi_dadd+0x384>)
    18aa:	08ff      	lsrs	r7, r7, #3
    18ac:	401c      	ands	r4, r3
    18ae:	0760      	lsls	r0, r4, #29
    18b0:	0576      	lsls	r6, r6, #21
    18b2:	0264      	lsls	r4, r4, #9
    18b4:	4307      	orrs	r7, r0
    18b6:	0b24      	lsrs	r4, r4, #12
    18b8:	0d76      	lsrs	r6, r6, #21
    18ba:	2100      	movs	r1, #0
    18bc:	0324      	lsls	r4, r4, #12
    18be:	0b23      	lsrs	r3, r4, #12
    18c0:	0d0c      	lsrs	r4, r1, #20
    18c2:	4a8f      	ldr	r2, [pc, #572]	; (1b00 <__aeabi_dadd+0x388>)
    18c4:	0524      	lsls	r4, r4, #20
    18c6:	431c      	orrs	r4, r3
    18c8:	4014      	ands	r4, r2
    18ca:	0533      	lsls	r3, r6, #20
    18cc:	4323      	orrs	r3, r4
    18ce:	005b      	lsls	r3, r3, #1
    18d0:	07ed      	lsls	r5, r5, #31
    18d2:	085b      	lsrs	r3, r3, #1
    18d4:	432b      	orrs	r3, r5
    18d6:	0038      	movs	r0, r7
    18d8:	0019      	movs	r1, r3
    18da:	bc3c      	pop	{r2, r3, r4, r5}
    18dc:	4690      	mov	r8, r2
    18de:	4699      	mov	r9, r3
    18e0:	46a2      	mov	sl, r4
    18e2:	46ab      	mov	fp, r5
    18e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    18e6:	4664      	mov	r4, ip
    18e8:	4304      	orrs	r4, r0
    18ea:	d100      	bne.n	18ee <__aeabi_dadd+0x176>
    18ec:	e211      	b.n	1d12 <__aeabi_dadd+0x59a>
    18ee:	0004      	movs	r4, r0
    18f0:	4667      	mov	r7, ip
    18f2:	077b      	lsls	r3, r7, #29
    18f4:	d1c6      	bne.n	1884 <__aeabi_dadd+0x10c>
    18f6:	4645      	mov	r5, r8
    18f8:	0760      	lsls	r0, r4, #29
    18fa:	08ff      	lsrs	r7, r7, #3
    18fc:	4307      	orrs	r7, r0
    18fe:	08e4      	lsrs	r4, r4, #3
    1900:	4b7d      	ldr	r3, [pc, #500]	; (1af8 <__aeabi_dadd+0x380>)
    1902:	429e      	cmp	r6, r3
    1904:	d030      	beq.n	1968 <__aeabi_dadd+0x1f0>
    1906:	0324      	lsls	r4, r4, #12
    1908:	0576      	lsls	r6, r6, #21
    190a:	0b24      	lsrs	r4, r4, #12
    190c:	0d76      	lsrs	r6, r6, #21
    190e:	e7d4      	b.n	18ba <__aeabi_dadd+0x142>
    1910:	1a33      	subs	r3, r6, r0
    1912:	469a      	mov	sl, r3
    1914:	2b00      	cmp	r3, #0
    1916:	dd78      	ble.n	1a0a <__aeabi_dadd+0x292>
    1918:	2800      	cmp	r0, #0
    191a:	d031      	beq.n	1980 <__aeabi_dadd+0x208>
    191c:	4876      	ldr	r0, [pc, #472]	; (1af8 <__aeabi_dadd+0x380>)
    191e:	4286      	cmp	r6, r0
    1920:	d0ae      	beq.n	1880 <__aeabi_dadd+0x108>
    1922:	2080      	movs	r0, #128	; 0x80
    1924:	0400      	lsls	r0, r0, #16
    1926:	4301      	orrs	r1, r0
    1928:	4653      	mov	r3, sl
    192a:	2b38      	cmp	r3, #56	; 0x38
    192c:	dc00      	bgt.n	1930 <__aeabi_dadd+0x1b8>
    192e:	e0e9      	b.n	1b04 <__aeabi_dadd+0x38c>
    1930:	430a      	orrs	r2, r1
    1932:	1e51      	subs	r1, r2, #1
    1934:	418a      	sbcs	r2, r1
    1936:	2100      	movs	r1, #0
    1938:	19d2      	adds	r2, r2, r7
    193a:	42ba      	cmp	r2, r7
    193c:	41bf      	sbcs	r7, r7
    193e:	1909      	adds	r1, r1, r4
    1940:	427c      	negs	r4, r7
    1942:	0017      	movs	r7, r2
    1944:	190c      	adds	r4, r1, r4
    1946:	0223      	lsls	r3, r4, #8
    1948:	d5d3      	bpl.n	18f2 <__aeabi_dadd+0x17a>
    194a:	4b6b      	ldr	r3, [pc, #428]	; (1af8 <__aeabi_dadd+0x380>)
    194c:	3601      	adds	r6, #1
    194e:	429e      	cmp	r6, r3
    1950:	d100      	bne.n	1954 <__aeabi_dadd+0x1dc>
    1952:	e13a      	b.n	1bca <__aeabi_dadd+0x452>
    1954:	2001      	movs	r0, #1
    1956:	4b69      	ldr	r3, [pc, #420]	; (1afc <__aeabi_dadd+0x384>)
    1958:	401c      	ands	r4, r3
    195a:	087b      	lsrs	r3, r7, #1
    195c:	4007      	ands	r7, r0
    195e:	431f      	orrs	r7, r3
    1960:	07e0      	lsls	r0, r4, #31
    1962:	4307      	orrs	r7, r0
    1964:	0864      	lsrs	r4, r4, #1
    1966:	e78b      	b.n	1880 <__aeabi_dadd+0x108>
    1968:	0023      	movs	r3, r4
    196a:	433b      	orrs	r3, r7
    196c:	d100      	bne.n	1970 <__aeabi_dadd+0x1f8>
    196e:	e1cb      	b.n	1d08 <__aeabi_dadd+0x590>
    1970:	2280      	movs	r2, #128	; 0x80
    1972:	0312      	lsls	r2, r2, #12
    1974:	4314      	orrs	r4, r2
    1976:	0324      	lsls	r4, r4, #12
    1978:	0b24      	lsrs	r4, r4, #12
    197a:	e79e      	b.n	18ba <__aeabi_dadd+0x142>
    197c:	002e      	movs	r6, r5
    197e:	e77f      	b.n	1880 <__aeabi_dadd+0x108>
    1980:	0008      	movs	r0, r1
    1982:	4310      	orrs	r0, r2
    1984:	d100      	bne.n	1988 <__aeabi_dadd+0x210>
    1986:	e0b4      	b.n	1af2 <__aeabi_dadd+0x37a>
    1988:	1e58      	subs	r0, r3, #1
    198a:	2800      	cmp	r0, #0
    198c:	d000      	beq.n	1990 <__aeabi_dadd+0x218>
    198e:	e0de      	b.n	1b4e <__aeabi_dadd+0x3d6>
    1990:	18ba      	adds	r2, r7, r2
    1992:	42ba      	cmp	r2, r7
    1994:	419b      	sbcs	r3, r3
    1996:	1864      	adds	r4, r4, r1
    1998:	425b      	negs	r3, r3
    199a:	18e4      	adds	r4, r4, r3
    199c:	0017      	movs	r7, r2
    199e:	2601      	movs	r6, #1
    19a0:	0223      	lsls	r3, r4, #8
    19a2:	d5a6      	bpl.n	18f2 <__aeabi_dadd+0x17a>
    19a4:	2602      	movs	r6, #2
    19a6:	e7d5      	b.n	1954 <__aeabi_dadd+0x1dc>
    19a8:	2d00      	cmp	r5, #0
    19aa:	d16e      	bne.n	1a8a <__aeabi_dadd+0x312>
    19ac:	1c70      	adds	r0, r6, #1
    19ae:	0540      	lsls	r0, r0, #21
    19b0:	0d40      	lsrs	r0, r0, #21
    19b2:	2801      	cmp	r0, #1
    19b4:	dc00      	bgt.n	19b8 <__aeabi_dadd+0x240>
    19b6:	e0f9      	b.n	1bac <__aeabi_dadd+0x434>
    19b8:	1ab8      	subs	r0, r7, r2
    19ba:	4684      	mov	ip, r0
    19bc:	4287      	cmp	r7, r0
    19be:	4180      	sbcs	r0, r0
    19c0:	1ae5      	subs	r5, r4, r3
    19c2:	4240      	negs	r0, r0
    19c4:	1a2d      	subs	r5, r5, r0
    19c6:	0228      	lsls	r0, r5, #8
    19c8:	d400      	bmi.n	19cc <__aeabi_dadd+0x254>
    19ca:	e089      	b.n	1ae0 <__aeabi_dadd+0x368>
    19cc:	1bd7      	subs	r7, r2, r7
    19ce:	42ba      	cmp	r2, r7
    19d0:	4192      	sbcs	r2, r2
    19d2:	1b1c      	subs	r4, r3, r4
    19d4:	4252      	negs	r2, r2
    19d6:	1aa5      	subs	r5, r4, r2
    19d8:	46d8      	mov	r8, fp
    19da:	e729      	b.n	1830 <__aeabi_dadd+0xb8>
    19dc:	4645      	mov	r5, r8
    19de:	2400      	movs	r4, #0
    19e0:	2700      	movs	r7, #0
    19e2:	e76a      	b.n	18ba <__aeabi_dadd+0x142>
    19e4:	4c45      	ldr	r4, [pc, #276]	; (1afc <__aeabi_dadd+0x384>)
    19e6:	1af6      	subs	r6, r6, r3
    19e8:	402c      	ands	r4, r5
    19ea:	e749      	b.n	1880 <__aeabi_dadd+0x108>
    19ec:	003d      	movs	r5, r7
    19ee:	3828      	subs	r0, #40	; 0x28
    19f0:	4085      	lsls	r5, r0
    19f2:	2700      	movs	r7, #0
    19f4:	e72e      	b.n	1854 <__aeabi_dadd+0xdc>
    19f6:	0038      	movs	r0, r7
    19f8:	f001 f8d4 	bl	2ba4 <__clzsi2>
    19fc:	3020      	adds	r0, #32
    19fe:	e71d      	b.n	183c <__aeabi_dadd+0xc4>
    1a00:	430a      	orrs	r2, r1
    1a02:	1e51      	subs	r1, r2, #1
    1a04:	418a      	sbcs	r2, r1
    1a06:	2100      	movs	r1, #0
    1a08:	e707      	b.n	181a <__aeabi_dadd+0xa2>
    1a0a:	2b00      	cmp	r3, #0
    1a0c:	d000      	beq.n	1a10 <__aeabi_dadd+0x298>
    1a0e:	e0f3      	b.n	1bf8 <__aeabi_dadd+0x480>
    1a10:	1c70      	adds	r0, r6, #1
    1a12:	0543      	lsls	r3, r0, #21
    1a14:	0d5b      	lsrs	r3, r3, #21
    1a16:	2b01      	cmp	r3, #1
    1a18:	dc00      	bgt.n	1a1c <__aeabi_dadd+0x2a4>
    1a1a:	e0ad      	b.n	1b78 <__aeabi_dadd+0x400>
    1a1c:	4b36      	ldr	r3, [pc, #216]	; (1af8 <__aeabi_dadd+0x380>)
    1a1e:	4298      	cmp	r0, r3
    1a20:	d100      	bne.n	1a24 <__aeabi_dadd+0x2ac>
    1a22:	e0d1      	b.n	1bc8 <__aeabi_dadd+0x450>
    1a24:	18ba      	adds	r2, r7, r2
    1a26:	42ba      	cmp	r2, r7
    1a28:	41bf      	sbcs	r7, r7
    1a2a:	1864      	adds	r4, r4, r1
    1a2c:	427f      	negs	r7, r7
    1a2e:	19e4      	adds	r4, r4, r7
    1a30:	07e7      	lsls	r7, r4, #31
    1a32:	0852      	lsrs	r2, r2, #1
    1a34:	4317      	orrs	r7, r2
    1a36:	0864      	lsrs	r4, r4, #1
    1a38:	0006      	movs	r6, r0
    1a3a:	e721      	b.n	1880 <__aeabi_dadd+0x108>
    1a3c:	482e      	ldr	r0, [pc, #184]	; (1af8 <__aeabi_dadd+0x380>)
    1a3e:	4285      	cmp	r5, r0
    1a40:	d100      	bne.n	1a44 <__aeabi_dadd+0x2cc>
    1a42:	e093      	b.n	1b6c <__aeabi_dadd+0x3f4>
    1a44:	001d      	movs	r5, r3
    1a46:	e6d0      	b.n	17ea <__aeabi_dadd+0x72>
    1a48:	0029      	movs	r1, r5
    1a4a:	3e1f      	subs	r6, #31
    1a4c:	40f1      	lsrs	r1, r6
    1a4e:	2b20      	cmp	r3, #32
    1a50:	d100      	bne.n	1a54 <__aeabi_dadd+0x2dc>
    1a52:	e08d      	b.n	1b70 <__aeabi_dadd+0x3f8>
    1a54:	2240      	movs	r2, #64	; 0x40
    1a56:	1ad3      	subs	r3, r2, r3
    1a58:	409d      	lsls	r5, r3
    1a5a:	432f      	orrs	r7, r5
    1a5c:	1e7d      	subs	r5, r7, #1
    1a5e:	41af      	sbcs	r7, r5
    1a60:	2400      	movs	r4, #0
    1a62:	430f      	orrs	r7, r1
    1a64:	2600      	movs	r6, #0
    1a66:	e744      	b.n	18f2 <__aeabi_dadd+0x17a>
    1a68:	002b      	movs	r3, r5
    1a6a:	0008      	movs	r0, r1
    1a6c:	3b20      	subs	r3, #32
    1a6e:	40d8      	lsrs	r0, r3
    1a70:	0003      	movs	r3, r0
    1a72:	2d20      	cmp	r5, #32
    1a74:	d100      	bne.n	1a78 <__aeabi_dadd+0x300>
    1a76:	e07d      	b.n	1b74 <__aeabi_dadd+0x3fc>
    1a78:	2040      	movs	r0, #64	; 0x40
    1a7a:	1b45      	subs	r5, r0, r5
    1a7c:	40a9      	lsls	r1, r5
    1a7e:	430a      	orrs	r2, r1
    1a80:	1e51      	subs	r1, r2, #1
    1a82:	418a      	sbcs	r2, r1
    1a84:	2100      	movs	r1, #0
    1a86:	431a      	orrs	r2, r3
    1a88:	e6c7      	b.n	181a <__aeabi_dadd+0xa2>
    1a8a:	2e00      	cmp	r6, #0
    1a8c:	d050      	beq.n	1b30 <__aeabi_dadd+0x3b8>
    1a8e:	4e1a      	ldr	r6, [pc, #104]	; (1af8 <__aeabi_dadd+0x380>)
    1a90:	42b0      	cmp	r0, r6
    1a92:	d057      	beq.n	1b44 <__aeabi_dadd+0x3cc>
    1a94:	2680      	movs	r6, #128	; 0x80
    1a96:	426b      	negs	r3, r5
    1a98:	4699      	mov	r9, r3
    1a9a:	0436      	lsls	r6, r6, #16
    1a9c:	4334      	orrs	r4, r6
    1a9e:	464b      	mov	r3, r9
    1aa0:	2b38      	cmp	r3, #56	; 0x38
    1aa2:	dd00      	ble.n	1aa6 <__aeabi_dadd+0x32e>
    1aa4:	e0d6      	b.n	1c54 <__aeabi_dadd+0x4dc>
    1aa6:	2b1f      	cmp	r3, #31
    1aa8:	dd00      	ble.n	1aac <__aeabi_dadd+0x334>
    1aaa:	e135      	b.n	1d18 <__aeabi_dadd+0x5a0>
    1aac:	2620      	movs	r6, #32
    1aae:	1af5      	subs	r5, r6, r3
    1ab0:	0026      	movs	r6, r4
    1ab2:	40ae      	lsls	r6, r5
    1ab4:	46b2      	mov	sl, r6
    1ab6:	003e      	movs	r6, r7
    1ab8:	40de      	lsrs	r6, r3
    1aba:	46ac      	mov	ip, r5
    1abc:	0035      	movs	r5, r6
    1abe:	4656      	mov	r6, sl
    1ac0:	432e      	orrs	r6, r5
    1ac2:	4665      	mov	r5, ip
    1ac4:	40af      	lsls	r7, r5
    1ac6:	1e7d      	subs	r5, r7, #1
    1ac8:	41af      	sbcs	r7, r5
    1aca:	40dc      	lsrs	r4, r3
    1acc:	4337      	orrs	r7, r6
    1ace:	1bd7      	subs	r7, r2, r7
    1ad0:	42ba      	cmp	r2, r7
    1ad2:	4192      	sbcs	r2, r2
    1ad4:	1b0c      	subs	r4, r1, r4
    1ad6:	4252      	negs	r2, r2
    1ad8:	1aa4      	subs	r4, r4, r2
    1ada:	0006      	movs	r6, r0
    1adc:	46d8      	mov	r8, fp
    1ade:	e6a3      	b.n	1828 <__aeabi_dadd+0xb0>
    1ae0:	4664      	mov	r4, ip
    1ae2:	4667      	mov	r7, ip
    1ae4:	432c      	orrs	r4, r5
    1ae6:	d000      	beq.n	1aea <__aeabi_dadd+0x372>
    1ae8:	e6a2      	b.n	1830 <__aeabi_dadd+0xb8>
    1aea:	2500      	movs	r5, #0
    1aec:	2600      	movs	r6, #0
    1aee:	2700      	movs	r7, #0
    1af0:	e706      	b.n	1900 <__aeabi_dadd+0x188>
    1af2:	001e      	movs	r6, r3
    1af4:	e6c4      	b.n	1880 <__aeabi_dadd+0x108>
    1af6:	46c0      	nop			; (mov r8, r8)
    1af8:	000007ff 	.word	0x000007ff
    1afc:	ff7fffff 	.word	0xff7fffff
    1b00:	800fffff 	.word	0x800fffff
    1b04:	2b1f      	cmp	r3, #31
    1b06:	dc63      	bgt.n	1bd0 <__aeabi_dadd+0x458>
    1b08:	2020      	movs	r0, #32
    1b0a:	1ac3      	subs	r3, r0, r3
    1b0c:	0008      	movs	r0, r1
    1b0e:	4098      	lsls	r0, r3
    1b10:	469c      	mov	ip, r3
    1b12:	4683      	mov	fp, r0
    1b14:	4653      	mov	r3, sl
    1b16:	0010      	movs	r0, r2
    1b18:	40d8      	lsrs	r0, r3
    1b1a:	0003      	movs	r3, r0
    1b1c:	4658      	mov	r0, fp
    1b1e:	4318      	orrs	r0, r3
    1b20:	4663      	mov	r3, ip
    1b22:	409a      	lsls	r2, r3
    1b24:	1e53      	subs	r3, r2, #1
    1b26:	419a      	sbcs	r2, r3
    1b28:	4653      	mov	r3, sl
    1b2a:	4302      	orrs	r2, r0
    1b2c:	40d9      	lsrs	r1, r3
    1b2e:	e703      	b.n	1938 <__aeabi_dadd+0x1c0>
    1b30:	0026      	movs	r6, r4
    1b32:	433e      	orrs	r6, r7
    1b34:	d006      	beq.n	1b44 <__aeabi_dadd+0x3cc>
    1b36:	43eb      	mvns	r3, r5
    1b38:	4699      	mov	r9, r3
    1b3a:	2b00      	cmp	r3, #0
    1b3c:	d0c7      	beq.n	1ace <__aeabi_dadd+0x356>
    1b3e:	4e94      	ldr	r6, [pc, #592]	; (1d90 <__aeabi_dadd+0x618>)
    1b40:	42b0      	cmp	r0, r6
    1b42:	d1ac      	bne.n	1a9e <__aeabi_dadd+0x326>
    1b44:	000c      	movs	r4, r1
    1b46:	0017      	movs	r7, r2
    1b48:	0006      	movs	r6, r0
    1b4a:	46d8      	mov	r8, fp
    1b4c:	e698      	b.n	1880 <__aeabi_dadd+0x108>
    1b4e:	4b90      	ldr	r3, [pc, #576]	; (1d90 <__aeabi_dadd+0x618>)
    1b50:	459a      	cmp	sl, r3
    1b52:	d00b      	beq.n	1b6c <__aeabi_dadd+0x3f4>
    1b54:	4682      	mov	sl, r0
    1b56:	e6e7      	b.n	1928 <__aeabi_dadd+0x1b0>
    1b58:	2800      	cmp	r0, #0
    1b5a:	d000      	beq.n	1b5e <__aeabi_dadd+0x3e6>
    1b5c:	e09e      	b.n	1c9c <__aeabi_dadd+0x524>
    1b5e:	0018      	movs	r0, r3
    1b60:	4310      	orrs	r0, r2
    1b62:	d100      	bne.n	1b66 <__aeabi_dadd+0x3ee>
    1b64:	e0e9      	b.n	1d3a <__aeabi_dadd+0x5c2>
    1b66:	001c      	movs	r4, r3
    1b68:	0017      	movs	r7, r2
    1b6a:	46d8      	mov	r8, fp
    1b6c:	4e88      	ldr	r6, [pc, #544]	; (1d90 <__aeabi_dadd+0x618>)
    1b6e:	e687      	b.n	1880 <__aeabi_dadd+0x108>
    1b70:	2500      	movs	r5, #0
    1b72:	e772      	b.n	1a5a <__aeabi_dadd+0x2e2>
    1b74:	2100      	movs	r1, #0
    1b76:	e782      	b.n	1a7e <__aeabi_dadd+0x306>
    1b78:	0023      	movs	r3, r4
    1b7a:	433b      	orrs	r3, r7
    1b7c:	2e00      	cmp	r6, #0
    1b7e:	d000      	beq.n	1b82 <__aeabi_dadd+0x40a>
    1b80:	e0ab      	b.n	1cda <__aeabi_dadd+0x562>
    1b82:	2b00      	cmp	r3, #0
    1b84:	d100      	bne.n	1b88 <__aeabi_dadd+0x410>
    1b86:	e0e7      	b.n	1d58 <__aeabi_dadd+0x5e0>
    1b88:	000b      	movs	r3, r1
    1b8a:	4313      	orrs	r3, r2
    1b8c:	d100      	bne.n	1b90 <__aeabi_dadd+0x418>
    1b8e:	e677      	b.n	1880 <__aeabi_dadd+0x108>
    1b90:	18ba      	adds	r2, r7, r2
    1b92:	42ba      	cmp	r2, r7
    1b94:	41bf      	sbcs	r7, r7
    1b96:	1864      	adds	r4, r4, r1
    1b98:	427f      	negs	r7, r7
    1b9a:	19e4      	adds	r4, r4, r7
    1b9c:	0223      	lsls	r3, r4, #8
    1b9e:	d400      	bmi.n	1ba2 <__aeabi_dadd+0x42a>
    1ba0:	e0f2      	b.n	1d88 <__aeabi_dadd+0x610>
    1ba2:	4b7c      	ldr	r3, [pc, #496]	; (1d94 <__aeabi_dadd+0x61c>)
    1ba4:	0017      	movs	r7, r2
    1ba6:	401c      	ands	r4, r3
    1ba8:	0006      	movs	r6, r0
    1baa:	e669      	b.n	1880 <__aeabi_dadd+0x108>
    1bac:	0020      	movs	r0, r4
    1bae:	4338      	orrs	r0, r7
    1bb0:	2e00      	cmp	r6, #0
    1bb2:	d1d1      	bne.n	1b58 <__aeabi_dadd+0x3e0>
    1bb4:	2800      	cmp	r0, #0
    1bb6:	d15b      	bne.n	1c70 <__aeabi_dadd+0x4f8>
    1bb8:	001c      	movs	r4, r3
    1bba:	4314      	orrs	r4, r2
    1bbc:	d100      	bne.n	1bc0 <__aeabi_dadd+0x448>
    1bbe:	e0a8      	b.n	1d12 <__aeabi_dadd+0x59a>
    1bc0:	001c      	movs	r4, r3
    1bc2:	0017      	movs	r7, r2
    1bc4:	46d8      	mov	r8, fp
    1bc6:	e65b      	b.n	1880 <__aeabi_dadd+0x108>
    1bc8:	0006      	movs	r6, r0
    1bca:	2400      	movs	r4, #0
    1bcc:	2700      	movs	r7, #0
    1bce:	e697      	b.n	1900 <__aeabi_dadd+0x188>
    1bd0:	4650      	mov	r0, sl
    1bd2:	000b      	movs	r3, r1
    1bd4:	3820      	subs	r0, #32
    1bd6:	40c3      	lsrs	r3, r0
    1bd8:	4699      	mov	r9, r3
    1bda:	4653      	mov	r3, sl
    1bdc:	2b20      	cmp	r3, #32
    1bde:	d100      	bne.n	1be2 <__aeabi_dadd+0x46a>
    1be0:	e095      	b.n	1d0e <__aeabi_dadd+0x596>
    1be2:	2340      	movs	r3, #64	; 0x40
    1be4:	4650      	mov	r0, sl
    1be6:	1a1b      	subs	r3, r3, r0
    1be8:	4099      	lsls	r1, r3
    1bea:	430a      	orrs	r2, r1
    1bec:	1e51      	subs	r1, r2, #1
    1bee:	418a      	sbcs	r2, r1
    1bf0:	464b      	mov	r3, r9
    1bf2:	2100      	movs	r1, #0
    1bf4:	431a      	orrs	r2, r3
    1bf6:	e69f      	b.n	1938 <__aeabi_dadd+0x1c0>
    1bf8:	2e00      	cmp	r6, #0
    1bfa:	d130      	bne.n	1c5e <__aeabi_dadd+0x4e6>
    1bfc:	0026      	movs	r6, r4
    1bfe:	433e      	orrs	r6, r7
    1c00:	d067      	beq.n	1cd2 <__aeabi_dadd+0x55a>
    1c02:	43db      	mvns	r3, r3
    1c04:	469a      	mov	sl, r3
    1c06:	2b00      	cmp	r3, #0
    1c08:	d01c      	beq.n	1c44 <__aeabi_dadd+0x4cc>
    1c0a:	4e61      	ldr	r6, [pc, #388]	; (1d90 <__aeabi_dadd+0x618>)
    1c0c:	42b0      	cmp	r0, r6
    1c0e:	d060      	beq.n	1cd2 <__aeabi_dadd+0x55a>
    1c10:	4653      	mov	r3, sl
    1c12:	2b38      	cmp	r3, #56	; 0x38
    1c14:	dd00      	ble.n	1c18 <__aeabi_dadd+0x4a0>
    1c16:	e096      	b.n	1d46 <__aeabi_dadd+0x5ce>
    1c18:	2b1f      	cmp	r3, #31
    1c1a:	dd00      	ble.n	1c1e <__aeabi_dadd+0x4a6>
    1c1c:	e09f      	b.n	1d5e <__aeabi_dadd+0x5e6>
    1c1e:	2620      	movs	r6, #32
    1c20:	1af3      	subs	r3, r6, r3
    1c22:	0026      	movs	r6, r4
    1c24:	409e      	lsls	r6, r3
    1c26:	469c      	mov	ip, r3
    1c28:	46b3      	mov	fp, r6
    1c2a:	4653      	mov	r3, sl
    1c2c:	003e      	movs	r6, r7
    1c2e:	40de      	lsrs	r6, r3
    1c30:	0033      	movs	r3, r6
    1c32:	465e      	mov	r6, fp
    1c34:	431e      	orrs	r6, r3
    1c36:	4663      	mov	r3, ip
    1c38:	409f      	lsls	r7, r3
    1c3a:	1e7b      	subs	r3, r7, #1
    1c3c:	419f      	sbcs	r7, r3
    1c3e:	4653      	mov	r3, sl
    1c40:	40dc      	lsrs	r4, r3
    1c42:	4337      	orrs	r7, r6
    1c44:	18bf      	adds	r7, r7, r2
    1c46:	4297      	cmp	r7, r2
    1c48:	4192      	sbcs	r2, r2
    1c4a:	1864      	adds	r4, r4, r1
    1c4c:	4252      	negs	r2, r2
    1c4e:	18a4      	adds	r4, r4, r2
    1c50:	0006      	movs	r6, r0
    1c52:	e678      	b.n	1946 <__aeabi_dadd+0x1ce>
    1c54:	4327      	orrs	r7, r4
    1c56:	1e7c      	subs	r4, r7, #1
    1c58:	41a7      	sbcs	r7, r4
    1c5a:	2400      	movs	r4, #0
    1c5c:	e737      	b.n	1ace <__aeabi_dadd+0x356>
    1c5e:	4e4c      	ldr	r6, [pc, #304]	; (1d90 <__aeabi_dadd+0x618>)
    1c60:	42b0      	cmp	r0, r6
    1c62:	d036      	beq.n	1cd2 <__aeabi_dadd+0x55a>
    1c64:	2680      	movs	r6, #128	; 0x80
    1c66:	425b      	negs	r3, r3
    1c68:	0436      	lsls	r6, r6, #16
    1c6a:	469a      	mov	sl, r3
    1c6c:	4334      	orrs	r4, r6
    1c6e:	e7cf      	b.n	1c10 <__aeabi_dadd+0x498>
    1c70:	0018      	movs	r0, r3
    1c72:	4310      	orrs	r0, r2
    1c74:	d100      	bne.n	1c78 <__aeabi_dadd+0x500>
    1c76:	e603      	b.n	1880 <__aeabi_dadd+0x108>
    1c78:	1ab8      	subs	r0, r7, r2
    1c7a:	4684      	mov	ip, r0
    1c7c:	4567      	cmp	r7, ip
    1c7e:	41ad      	sbcs	r5, r5
    1c80:	1ae0      	subs	r0, r4, r3
    1c82:	426d      	negs	r5, r5
    1c84:	1b40      	subs	r0, r0, r5
    1c86:	0205      	lsls	r5, r0, #8
    1c88:	d400      	bmi.n	1c8c <__aeabi_dadd+0x514>
    1c8a:	e62c      	b.n	18e6 <__aeabi_dadd+0x16e>
    1c8c:	1bd7      	subs	r7, r2, r7
    1c8e:	42ba      	cmp	r2, r7
    1c90:	4192      	sbcs	r2, r2
    1c92:	1b1c      	subs	r4, r3, r4
    1c94:	4252      	negs	r2, r2
    1c96:	1aa4      	subs	r4, r4, r2
    1c98:	46d8      	mov	r8, fp
    1c9a:	e5f1      	b.n	1880 <__aeabi_dadd+0x108>
    1c9c:	0018      	movs	r0, r3
    1c9e:	4310      	orrs	r0, r2
    1ca0:	d100      	bne.n	1ca4 <__aeabi_dadd+0x52c>
    1ca2:	e763      	b.n	1b6c <__aeabi_dadd+0x3f4>
    1ca4:	08f8      	lsrs	r0, r7, #3
    1ca6:	0767      	lsls	r7, r4, #29
    1ca8:	4307      	orrs	r7, r0
    1caa:	2080      	movs	r0, #128	; 0x80
    1cac:	08e4      	lsrs	r4, r4, #3
    1cae:	0300      	lsls	r0, r0, #12
    1cb0:	4204      	tst	r4, r0
    1cb2:	d008      	beq.n	1cc6 <__aeabi_dadd+0x54e>
    1cb4:	08dd      	lsrs	r5, r3, #3
    1cb6:	4205      	tst	r5, r0
    1cb8:	d105      	bne.n	1cc6 <__aeabi_dadd+0x54e>
    1cba:	08d2      	lsrs	r2, r2, #3
    1cbc:	0759      	lsls	r1, r3, #29
    1cbe:	4311      	orrs	r1, r2
    1cc0:	000f      	movs	r7, r1
    1cc2:	002c      	movs	r4, r5
    1cc4:	46d8      	mov	r8, fp
    1cc6:	0f7b      	lsrs	r3, r7, #29
    1cc8:	00e4      	lsls	r4, r4, #3
    1cca:	431c      	orrs	r4, r3
    1ccc:	00ff      	lsls	r7, r7, #3
    1cce:	4e30      	ldr	r6, [pc, #192]	; (1d90 <__aeabi_dadd+0x618>)
    1cd0:	e5d6      	b.n	1880 <__aeabi_dadd+0x108>
    1cd2:	000c      	movs	r4, r1
    1cd4:	0017      	movs	r7, r2
    1cd6:	0006      	movs	r6, r0
    1cd8:	e5d2      	b.n	1880 <__aeabi_dadd+0x108>
    1cda:	2b00      	cmp	r3, #0
    1cdc:	d038      	beq.n	1d50 <__aeabi_dadd+0x5d8>
    1cde:	000b      	movs	r3, r1
    1ce0:	4313      	orrs	r3, r2
    1ce2:	d100      	bne.n	1ce6 <__aeabi_dadd+0x56e>
    1ce4:	e742      	b.n	1b6c <__aeabi_dadd+0x3f4>
    1ce6:	08f8      	lsrs	r0, r7, #3
    1ce8:	0767      	lsls	r7, r4, #29
    1cea:	4307      	orrs	r7, r0
    1cec:	2080      	movs	r0, #128	; 0x80
    1cee:	08e4      	lsrs	r4, r4, #3
    1cf0:	0300      	lsls	r0, r0, #12
    1cf2:	4204      	tst	r4, r0
    1cf4:	d0e7      	beq.n	1cc6 <__aeabi_dadd+0x54e>
    1cf6:	08cb      	lsrs	r3, r1, #3
    1cf8:	4203      	tst	r3, r0
    1cfa:	d1e4      	bne.n	1cc6 <__aeabi_dadd+0x54e>
    1cfc:	08d2      	lsrs	r2, r2, #3
    1cfe:	0749      	lsls	r1, r1, #29
    1d00:	4311      	orrs	r1, r2
    1d02:	000f      	movs	r7, r1
    1d04:	001c      	movs	r4, r3
    1d06:	e7de      	b.n	1cc6 <__aeabi_dadd+0x54e>
    1d08:	2700      	movs	r7, #0
    1d0a:	2400      	movs	r4, #0
    1d0c:	e5d5      	b.n	18ba <__aeabi_dadd+0x142>
    1d0e:	2100      	movs	r1, #0
    1d10:	e76b      	b.n	1bea <__aeabi_dadd+0x472>
    1d12:	2500      	movs	r5, #0
    1d14:	2700      	movs	r7, #0
    1d16:	e5f3      	b.n	1900 <__aeabi_dadd+0x188>
    1d18:	464e      	mov	r6, r9
    1d1a:	0025      	movs	r5, r4
    1d1c:	3e20      	subs	r6, #32
    1d1e:	40f5      	lsrs	r5, r6
    1d20:	464b      	mov	r3, r9
    1d22:	002e      	movs	r6, r5
    1d24:	2b20      	cmp	r3, #32
    1d26:	d02d      	beq.n	1d84 <__aeabi_dadd+0x60c>
    1d28:	2540      	movs	r5, #64	; 0x40
    1d2a:	1aed      	subs	r5, r5, r3
    1d2c:	40ac      	lsls	r4, r5
    1d2e:	4327      	orrs	r7, r4
    1d30:	1e7c      	subs	r4, r7, #1
    1d32:	41a7      	sbcs	r7, r4
    1d34:	2400      	movs	r4, #0
    1d36:	4337      	orrs	r7, r6
    1d38:	e6c9      	b.n	1ace <__aeabi_dadd+0x356>
    1d3a:	2480      	movs	r4, #128	; 0x80
    1d3c:	2500      	movs	r5, #0
    1d3e:	0324      	lsls	r4, r4, #12
    1d40:	4e13      	ldr	r6, [pc, #76]	; (1d90 <__aeabi_dadd+0x618>)
    1d42:	2700      	movs	r7, #0
    1d44:	e5dc      	b.n	1900 <__aeabi_dadd+0x188>
    1d46:	4327      	orrs	r7, r4
    1d48:	1e7c      	subs	r4, r7, #1
    1d4a:	41a7      	sbcs	r7, r4
    1d4c:	2400      	movs	r4, #0
    1d4e:	e779      	b.n	1c44 <__aeabi_dadd+0x4cc>
    1d50:	000c      	movs	r4, r1
    1d52:	0017      	movs	r7, r2
    1d54:	4e0e      	ldr	r6, [pc, #56]	; (1d90 <__aeabi_dadd+0x618>)
    1d56:	e593      	b.n	1880 <__aeabi_dadd+0x108>
    1d58:	000c      	movs	r4, r1
    1d5a:	0017      	movs	r7, r2
    1d5c:	e590      	b.n	1880 <__aeabi_dadd+0x108>
    1d5e:	4656      	mov	r6, sl
    1d60:	0023      	movs	r3, r4
    1d62:	3e20      	subs	r6, #32
    1d64:	40f3      	lsrs	r3, r6
    1d66:	4699      	mov	r9, r3
    1d68:	4653      	mov	r3, sl
    1d6a:	2b20      	cmp	r3, #32
    1d6c:	d00e      	beq.n	1d8c <__aeabi_dadd+0x614>
    1d6e:	2340      	movs	r3, #64	; 0x40
    1d70:	4656      	mov	r6, sl
    1d72:	1b9b      	subs	r3, r3, r6
    1d74:	409c      	lsls	r4, r3
    1d76:	4327      	orrs	r7, r4
    1d78:	1e7c      	subs	r4, r7, #1
    1d7a:	41a7      	sbcs	r7, r4
    1d7c:	464b      	mov	r3, r9
    1d7e:	2400      	movs	r4, #0
    1d80:	431f      	orrs	r7, r3
    1d82:	e75f      	b.n	1c44 <__aeabi_dadd+0x4cc>
    1d84:	2400      	movs	r4, #0
    1d86:	e7d2      	b.n	1d2e <__aeabi_dadd+0x5b6>
    1d88:	0017      	movs	r7, r2
    1d8a:	e5b2      	b.n	18f2 <__aeabi_dadd+0x17a>
    1d8c:	2400      	movs	r4, #0
    1d8e:	e7f2      	b.n	1d76 <__aeabi_dadd+0x5fe>
    1d90:	000007ff 	.word	0x000007ff
    1d94:	ff7fffff 	.word	0xff7fffff

00001d98 <__aeabi_ddiv>:
    1d98:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d9a:	4657      	mov	r7, sl
    1d9c:	4645      	mov	r5, r8
    1d9e:	46de      	mov	lr, fp
    1da0:	464e      	mov	r6, r9
    1da2:	b5e0      	push	{r5, r6, r7, lr}
    1da4:	004c      	lsls	r4, r1, #1
    1da6:	030e      	lsls	r6, r1, #12
    1da8:	b087      	sub	sp, #28
    1daa:	4683      	mov	fp, r0
    1dac:	4692      	mov	sl, r2
    1dae:	001d      	movs	r5, r3
    1db0:	4680      	mov	r8, r0
    1db2:	0b36      	lsrs	r6, r6, #12
    1db4:	0d64      	lsrs	r4, r4, #21
    1db6:	0fcf      	lsrs	r7, r1, #31
    1db8:	2c00      	cmp	r4, #0
    1dba:	d04f      	beq.n	1e5c <__aeabi_ddiv+0xc4>
    1dbc:	4b6f      	ldr	r3, [pc, #444]	; (1f7c <__aeabi_ddiv+0x1e4>)
    1dbe:	429c      	cmp	r4, r3
    1dc0:	d035      	beq.n	1e2e <__aeabi_ddiv+0x96>
    1dc2:	2380      	movs	r3, #128	; 0x80
    1dc4:	0f42      	lsrs	r2, r0, #29
    1dc6:	041b      	lsls	r3, r3, #16
    1dc8:	00f6      	lsls	r6, r6, #3
    1dca:	4313      	orrs	r3, r2
    1dcc:	4333      	orrs	r3, r6
    1dce:	4699      	mov	r9, r3
    1dd0:	00c3      	lsls	r3, r0, #3
    1dd2:	4698      	mov	r8, r3
    1dd4:	4b6a      	ldr	r3, [pc, #424]	; (1f80 <__aeabi_ddiv+0x1e8>)
    1dd6:	2600      	movs	r6, #0
    1dd8:	469c      	mov	ip, r3
    1dda:	2300      	movs	r3, #0
    1ddc:	4464      	add	r4, ip
    1dde:	9303      	str	r3, [sp, #12]
    1de0:	032b      	lsls	r3, r5, #12
    1de2:	0b1b      	lsrs	r3, r3, #12
    1de4:	469b      	mov	fp, r3
    1de6:	006b      	lsls	r3, r5, #1
    1de8:	0fed      	lsrs	r5, r5, #31
    1dea:	4650      	mov	r0, sl
    1dec:	0d5b      	lsrs	r3, r3, #21
    1dee:	9501      	str	r5, [sp, #4]
    1df0:	d05e      	beq.n	1eb0 <__aeabi_ddiv+0x118>
    1df2:	4a62      	ldr	r2, [pc, #392]	; (1f7c <__aeabi_ddiv+0x1e4>)
    1df4:	4293      	cmp	r3, r2
    1df6:	d053      	beq.n	1ea0 <__aeabi_ddiv+0x108>
    1df8:	465a      	mov	r2, fp
    1dfa:	00d1      	lsls	r1, r2, #3
    1dfc:	2280      	movs	r2, #128	; 0x80
    1dfe:	0f40      	lsrs	r0, r0, #29
    1e00:	0412      	lsls	r2, r2, #16
    1e02:	4302      	orrs	r2, r0
    1e04:	430a      	orrs	r2, r1
    1e06:	4693      	mov	fp, r2
    1e08:	4652      	mov	r2, sl
    1e0a:	00d1      	lsls	r1, r2, #3
    1e0c:	4a5c      	ldr	r2, [pc, #368]	; (1f80 <__aeabi_ddiv+0x1e8>)
    1e0e:	4694      	mov	ip, r2
    1e10:	2200      	movs	r2, #0
    1e12:	4463      	add	r3, ip
    1e14:	0038      	movs	r0, r7
    1e16:	4068      	eors	r0, r5
    1e18:	4684      	mov	ip, r0
    1e1a:	9002      	str	r0, [sp, #8]
    1e1c:	1ae4      	subs	r4, r4, r3
    1e1e:	4316      	orrs	r6, r2
    1e20:	2e0f      	cmp	r6, #15
    1e22:	d900      	bls.n	1e26 <__aeabi_ddiv+0x8e>
    1e24:	e0b4      	b.n	1f90 <__aeabi_ddiv+0x1f8>
    1e26:	4b57      	ldr	r3, [pc, #348]	; (1f84 <__aeabi_ddiv+0x1ec>)
    1e28:	00b6      	lsls	r6, r6, #2
    1e2a:	599b      	ldr	r3, [r3, r6]
    1e2c:	469f      	mov	pc, r3
    1e2e:	0003      	movs	r3, r0
    1e30:	4333      	orrs	r3, r6
    1e32:	4699      	mov	r9, r3
    1e34:	d16c      	bne.n	1f10 <__aeabi_ddiv+0x178>
    1e36:	2300      	movs	r3, #0
    1e38:	4698      	mov	r8, r3
    1e3a:	3302      	adds	r3, #2
    1e3c:	2608      	movs	r6, #8
    1e3e:	9303      	str	r3, [sp, #12]
    1e40:	e7ce      	b.n	1de0 <__aeabi_ddiv+0x48>
    1e42:	46cb      	mov	fp, r9
    1e44:	4641      	mov	r1, r8
    1e46:	9a03      	ldr	r2, [sp, #12]
    1e48:	9701      	str	r7, [sp, #4]
    1e4a:	2a02      	cmp	r2, #2
    1e4c:	d165      	bne.n	1f1a <__aeabi_ddiv+0x182>
    1e4e:	9b01      	ldr	r3, [sp, #4]
    1e50:	4c4a      	ldr	r4, [pc, #296]	; (1f7c <__aeabi_ddiv+0x1e4>)
    1e52:	469c      	mov	ip, r3
    1e54:	2300      	movs	r3, #0
    1e56:	2200      	movs	r2, #0
    1e58:	4698      	mov	r8, r3
    1e5a:	e06b      	b.n	1f34 <__aeabi_ddiv+0x19c>
    1e5c:	0003      	movs	r3, r0
    1e5e:	4333      	orrs	r3, r6
    1e60:	4699      	mov	r9, r3
    1e62:	d04e      	beq.n	1f02 <__aeabi_ddiv+0x16a>
    1e64:	2e00      	cmp	r6, #0
    1e66:	d100      	bne.n	1e6a <__aeabi_ddiv+0xd2>
    1e68:	e1bc      	b.n	21e4 <STACK_SIZE+0x1e4>
    1e6a:	0030      	movs	r0, r6
    1e6c:	f000 fe9a 	bl	2ba4 <__clzsi2>
    1e70:	0003      	movs	r3, r0
    1e72:	3b0b      	subs	r3, #11
    1e74:	2b1c      	cmp	r3, #28
    1e76:	dd00      	ble.n	1e7a <__aeabi_ddiv+0xe2>
    1e78:	e1ac      	b.n	21d4 <STACK_SIZE+0x1d4>
    1e7a:	221d      	movs	r2, #29
    1e7c:	1ad3      	subs	r3, r2, r3
    1e7e:	465a      	mov	r2, fp
    1e80:	0001      	movs	r1, r0
    1e82:	40da      	lsrs	r2, r3
    1e84:	3908      	subs	r1, #8
    1e86:	408e      	lsls	r6, r1
    1e88:	0013      	movs	r3, r2
    1e8a:	4333      	orrs	r3, r6
    1e8c:	4699      	mov	r9, r3
    1e8e:	465b      	mov	r3, fp
    1e90:	408b      	lsls	r3, r1
    1e92:	4698      	mov	r8, r3
    1e94:	2300      	movs	r3, #0
    1e96:	4c3c      	ldr	r4, [pc, #240]	; (1f88 <__aeabi_ddiv+0x1f0>)
    1e98:	2600      	movs	r6, #0
    1e9a:	1a24      	subs	r4, r4, r0
    1e9c:	9303      	str	r3, [sp, #12]
    1e9e:	e79f      	b.n	1de0 <__aeabi_ddiv+0x48>
    1ea0:	4651      	mov	r1, sl
    1ea2:	465a      	mov	r2, fp
    1ea4:	4311      	orrs	r1, r2
    1ea6:	d129      	bne.n	1efc <__aeabi_ddiv+0x164>
    1ea8:	2200      	movs	r2, #0
    1eaa:	4693      	mov	fp, r2
    1eac:	3202      	adds	r2, #2
    1eae:	e7b1      	b.n	1e14 <__aeabi_ddiv+0x7c>
    1eb0:	4659      	mov	r1, fp
    1eb2:	4301      	orrs	r1, r0
    1eb4:	d01e      	beq.n	1ef4 <__aeabi_ddiv+0x15c>
    1eb6:	465b      	mov	r3, fp
    1eb8:	2b00      	cmp	r3, #0
    1eba:	d100      	bne.n	1ebe <__aeabi_ddiv+0x126>
    1ebc:	e19e      	b.n	21fc <STACK_SIZE+0x1fc>
    1ebe:	4658      	mov	r0, fp
    1ec0:	f000 fe70 	bl	2ba4 <__clzsi2>
    1ec4:	0003      	movs	r3, r0
    1ec6:	3b0b      	subs	r3, #11
    1ec8:	2b1c      	cmp	r3, #28
    1eca:	dd00      	ble.n	1ece <__aeabi_ddiv+0x136>
    1ecc:	e18f      	b.n	21ee <STACK_SIZE+0x1ee>
    1ece:	0002      	movs	r2, r0
    1ed0:	4659      	mov	r1, fp
    1ed2:	3a08      	subs	r2, #8
    1ed4:	4091      	lsls	r1, r2
    1ed6:	468b      	mov	fp, r1
    1ed8:	211d      	movs	r1, #29
    1eda:	1acb      	subs	r3, r1, r3
    1edc:	4651      	mov	r1, sl
    1ede:	40d9      	lsrs	r1, r3
    1ee0:	000b      	movs	r3, r1
    1ee2:	4659      	mov	r1, fp
    1ee4:	430b      	orrs	r3, r1
    1ee6:	4651      	mov	r1, sl
    1ee8:	469b      	mov	fp, r3
    1eea:	4091      	lsls	r1, r2
    1eec:	4b26      	ldr	r3, [pc, #152]	; (1f88 <__aeabi_ddiv+0x1f0>)
    1eee:	2200      	movs	r2, #0
    1ef0:	1a1b      	subs	r3, r3, r0
    1ef2:	e78f      	b.n	1e14 <__aeabi_ddiv+0x7c>
    1ef4:	2300      	movs	r3, #0
    1ef6:	2201      	movs	r2, #1
    1ef8:	469b      	mov	fp, r3
    1efa:	e78b      	b.n	1e14 <__aeabi_ddiv+0x7c>
    1efc:	4651      	mov	r1, sl
    1efe:	2203      	movs	r2, #3
    1f00:	e788      	b.n	1e14 <__aeabi_ddiv+0x7c>
    1f02:	2300      	movs	r3, #0
    1f04:	4698      	mov	r8, r3
    1f06:	3301      	adds	r3, #1
    1f08:	2604      	movs	r6, #4
    1f0a:	2400      	movs	r4, #0
    1f0c:	9303      	str	r3, [sp, #12]
    1f0e:	e767      	b.n	1de0 <__aeabi_ddiv+0x48>
    1f10:	2303      	movs	r3, #3
    1f12:	46b1      	mov	r9, r6
    1f14:	9303      	str	r3, [sp, #12]
    1f16:	260c      	movs	r6, #12
    1f18:	e762      	b.n	1de0 <__aeabi_ddiv+0x48>
    1f1a:	2a03      	cmp	r2, #3
    1f1c:	d100      	bne.n	1f20 <__aeabi_ddiv+0x188>
    1f1e:	e25c      	b.n	23da <STACK_SIZE+0x3da>
    1f20:	9b01      	ldr	r3, [sp, #4]
    1f22:	2a01      	cmp	r2, #1
    1f24:	d000      	beq.n	1f28 <__aeabi_ddiv+0x190>
    1f26:	e1e4      	b.n	22f2 <STACK_SIZE+0x2f2>
    1f28:	4013      	ands	r3, r2
    1f2a:	469c      	mov	ip, r3
    1f2c:	2300      	movs	r3, #0
    1f2e:	2400      	movs	r4, #0
    1f30:	2200      	movs	r2, #0
    1f32:	4698      	mov	r8, r3
    1f34:	2100      	movs	r1, #0
    1f36:	0312      	lsls	r2, r2, #12
    1f38:	0b13      	lsrs	r3, r2, #12
    1f3a:	0d0a      	lsrs	r2, r1, #20
    1f3c:	0512      	lsls	r2, r2, #20
    1f3e:	431a      	orrs	r2, r3
    1f40:	0523      	lsls	r3, r4, #20
    1f42:	4c12      	ldr	r4, [pc, #72]	; (1f8c <__aeabi_ddiv+0x1f4>)
    1f44:	4640      	mov	r0, r8
    1f46:	4022      	ands	r2, r4
    1f48:	4313      	orrs	r3, r2
    1f4a:	4662      	mov	r2, ip
    1f4c:	005b      	lsls	r3, r3, #1
    1f4e:	07d2      	lsls	r2, r2, #31
    1f50:	085b      	lsrs	r3, r3, #1
    1f52:	4313      	orrs	r3, r2
    1f54:	0019      	movs	r1, r3
    1f56:	b007      	add	sp, #28
    1f58:	bc3c      	pop	{r2, r3, r4, r5}
    1f5a:	4690      	mov	r8, r2
    1f5c:	4699      	mov	r9, r3
    1f5e:	46a2      	mov	sl, r4
    1f60:	46ab      	mov	fp, r5
    1f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f64:	2300      	movs	r3, #0
    1f66:	2280      	movs	r2, #128	; 0x80
    1f68:	469c      	mov	ip, r3
    1f6a:	0312      	lsls	r2, r2, #12
    1f6c:	4698      	mov	r8, r3
    1f6e:	4c03      	ldr	r4, [pc, #12]	; (1f7c <__aeabi_ddiv+0x1e4>)
    1f70:	e7e0      	b.n	1f34 <__aeabi_ddiv+0x19c>
    1f72:	2300      	movs	r3, #0
    1f74:	4c01      	ldr	r4, [pc, #4]	; (1f7c <__aeabi_ddiv+0x1e4>)
    1f76:	2200      	movs	r2, #0
    1f78:	4698      	mov	r8, r3
    1f7a:	e7db      	b.n	1f34 <__aeabi_ddiv+0x19c>
    1f7c:	000007ff 	.word	0x000007ff
    1f80:	fffffc01 	.word	0xfffffc01
    1f84:	00004f54 	.word	0x00004f54
    1f88:	fffffc0d 	.word	0xfffffc0d
    1f8c:	800fffff 	.word	0x800fffff
    1f90:	45d9      	cmp	r9, fp
    1f92:	d900      	bls.n	1f96 <__aeabi_ddiv+0x1fe>
    1f94:	e139      	b.n	220a <STACK_SIZE+0x20a>
    1f96:	d100      	bne.n	1f9a <__aeabi_ddiv+0x202>
    1f98:	e134      	b.n	2204 <STACK_SIZE+0x204>
    1f9a:	2300      	movs	r3, #0
    1f9c:	4646      	mov	r6, r8
    1f9e:	464d      	mov	r5, r9
    1fa0:	469a      	mov	sl, r3
    1fa2:	3c01      	subs	r4, #1
    1fa4:	465b      	mov	r3, fp
    1fa6:	0e0a      	lsrs	r2, r1, #24
    1fa8:	021b      	lsls	r3, r3, #8
    1faa:	431a      	orrs	r2, r3
    1fac:	020b      	lsls	r3, r1, #8
    1fae:	0c17      	lsrs	r7, r2, #16
    1fb0:	9303      	str	r3, [sp, #12]
    1fb2:	0413      	lsls	r3, r2, #16
    1fb4:	0c1b      	lsrs	r3, r3, #16
    1fb6:	0039      	movs	r1, r7
    1fb8:	0028      	movs	r0, r5
    1fba:	4690      	mov	r8, r2
    1fbc:	9301      	str	r3, [sp, #4]
    1fbe:	f7ff fad5 	bl	156c <__udivsi3>
    1fc2:	0002      	movs	r2, r0
    1fc4:	9b01      	ldr	r3, [sp, #4]
    1fc6:	4683      	mov	fp, r0
    1fc8:	435a      	muls	r2, r3
    1fca:	0028      	movs	r0, r5
    1fcc:	0039      	movs	r1, r7
    1fce:	4691      	mov	r9, r2
    1fd0:	f7ff fb52 	bl	1678 <__aeabi_uidivmod>
    1fd4:	0c35      	lsrs	r5, r6, #16
    1fd6:	0409      	lsls	r1, r1, #16
    1fd8:	430d      	orrs	r5, r1
    1fda:	45a9      	cmp	r9, r5
    1fdc:	d90d      	bls.n	1ffa <__aeabi_ddiv+0x262>
    1fde:	465b      	mov	r3, fp
    1fe0:	4445      	add	r5, r8
    1fe2:	3b01      	subs	r3, #1
    1fe4:	45a8      	cmp	r8, r5
    1fe6:	d900      	bls.n	1fea <__aeabi_ddiv+0x252>
    1fe8:	e13a      	b.n	2260 <STACK_SIZE+0x260>
    1fea:	45a9      	cmp	r9, r5
    1fec:	d800      	bhi.n	1ff0 <__aeabi_ddiv+0x258>
    1fee:	e137      	b.n	2260 <STACK_SIZE+0x260>
    1ff0:	2302      	movs	r3, #2
    1ff2:	425b      	negs	r3, r3
    1ff4:	469c      	mov	ip, r3
    1ff6:	4445      	add	r5, r8
    1ff8:	44e3      	add	fp, ip
    1ffa:	464b      	mov	r3, r9
    1ffc:	1aeb      	subs	r3, r5, r3
    1ffe:	0039      	movs	r1, r7
    2000:	0018      	movs	r0, r3
    2002:	9304      	str	r3, [sp, #16]
    2004:	f7ff fab2 	bl	156c <__udivsi3>
    2008:	9b01      	ldr	r3, [sp, #4]
    200a:	0005      	movs	r5, r0
    200c:	4343      	muls	r3, r0
    200e:	0039      	movs	r1, r7
    2010:	9804      	ldr	r0, [sp, #16]
    2012:	4699      	mov	r9, r3
    2014:	f7ff fb30 	bl	1678 <__aeabi_uidivmod>
    2018:	0433      	lsls	r3, r6, #16
    201a:	0409      	lsls	r1, r1, #16
    201c:	0c1b      	lsrs	r3, r3, #16
    201e:	430b      	orrs	r3, r1
    2020:	4599      	cmp	r9, r3
    2022:	d909      	bls.n	2038 <STACK_SIZE+0x38>
    2024:	4443      	add	r3, r8
    2026:	1e6a      	subs	r2, r5, #1
    2028:	4598      	cmp	r8, r3
    202a:	d900      	bls.n	202e <STACK_SIZE+0x2e>
    202c:	e11a      	b.n	2264 <STACK_SIZE+0x264>
    202e:	4599      	cmp	r9, r3
    2030:	d800      	bhi.n	2034 <STACK_SIZE+0x34>
    2032:	e117      	b.n	2264 <STACK_SIZE+0x264>
    2034:	3d02      	subs	r5, #2
    2036:	4443      	add	r3, r8
    2038:	464a      	mov	r2, r9
    203a:	1a9b      	subs	r3, r3, r2
    203c:	465a      	mov	r2, fp
    203e:	0412      	lsls	r2, r2, #16
    2040:	432a      	orrs	r2, r5
    2042:	9903      	ldr	r1, [sp, #12]
    2044:	4693      	mov	fp, r2
    2046:	0c10      	lsrs	r0, r2, #16
    2048:	0c0a      	lsrs	r2, r1, #16
    204a:	4691      	mov	r9, r2
    204c:	0409      	lsls	r1, r1, #16
    204e:	465a      	mov	r2, fp
    2050:	0c09      	lsrs	r1, r1, #16
    2052:	464e      	mov	r6, r9
    2054:	000d      	movs	r5, r1
    2056:	0412      	lsls	r2, r2, #16
    2058:	0c12      	lsrs	r2, r2, #16
    205a:	4345      	muls	r5, r0
    205c:	9105      	str	r1, [sp, #20]
    205e:	4351      	muls	r1, r2
    2060:	4372      	muls	r2, r6
    2062:	4370      	muls	r0, r6
    2064:	1952      	adds	r2, r2, r5
    2066:	0c0e      	lsrs	r6, r1, #16
    2068:	18b2      	adds	r2, r6, r2
    206a:	4295      	cmp	r5, r2
    206c:	d903      	bls.n	2076 <STACK_SIZE+0x76>
    206e:	2580      	movs	r5, #128	; 0x80
    2070:	026d      	lsls	r5, r5, #9
    2072:	46ac      	mov	ip, r5
    2074:	4460      	add	r0, ip
    2076:	0c15      	lsrs	r5, r2, #16
    2078:	0409      	lsls	r1, r1, #16
    207a:	0412      	lsls	r2, r2, #16
    207c:	0c09      	lsrs	r1, r1, #16
    207e:	1828      	adds	r0, r5, r0
    2080:	1852      	adds	r2, r2, r1
    2082:	4283      	cmp	r3, r0
    2084:	d200      	bcs.n	2088 <STACK_SIZE+0x88>
    2086:	e0ce      	b.n	2226 <STACK_SIZE+0x226>
    2088:	d100      	bne.n	208c <STACK_SIZE+0x8c>
    208a:	e0c8      	b.n	221e <STACK_SIZE+0x21e>
    208c:	1a1d      	subs	r5, r3, r0
    208e:	4653      	mov	r3, sl
    2090:	1a9e      	subs	r6, r3, r2
    2092:	45b2      	cmp	sl, r6
    2094:	4192      	sbcs	r2, r2
    2096:	4252      	negs	r2, r2
    2098:	1aab      	subs	r3, r5, r2
    209a:	469a      	mov	sl, r3
    209c:	4598      	cmp	r8, r3
    209e:	d100      	bne.n	20a2 <STACK_SIZE+0xa2>
    20a0:	e117      	b.n	22d2 <STACK_SIZE+0x2d2>
    20a2:	0039      	movs	r1, r7
    20a4:	0018      	movs	r0, r3
    20a6:	f7ff fa61 	bl	156c <__udivsi3>
    20aa:	9b01      	ldr	r3, [sp, #4]
    20ac:	0005      	movs	r5, r0
    20ae:	4343      	muls	r3, r0
    20b0:	0039      	movs	r1, r7
    20b2:	4650      	mov	r0, sl
    20b4:	9304      	str	r3, [sp, #16]
    20b6:	f7ff fadf 	bl	1678 <__aeabi_uidivmod>
    20ba:	9804      	ldr	r0, [sp, #16]
    20bc:	040b      	lsls	r3, r1, #16
    20be:	0c31      	lsrs	r1, r6, #16
    20c0:	4319      	orrs	r1, r3
    20c2:	4288      	cmp	r0, r1
    20c4:	d909      	bls.n	20da <STACK_SIZE+0xda>
    20c6:	4441      	add	r1, r8
    20c8:	1e6b      	subs	r3, r5, #1
    20ca:	4588      	cmp	r8, r1
    20cc:	d900      	bls.n	20d0 <STACK_SIZE+0xd0>
    20ce:	e107      	b.n	22e0 <STACK_SIZE+0x2e0>
    20d0:	4288      	cmp	r0, r1
    20d2:	d800      	bhi.n	20d6 <STACK_SIZE+0xd6>
    20d4:	e104      	b.n	22e0 <STACK_SIZE+0x2e0>
    20d6:	3d02      	subs	r5, #2
    20d8:	4441      	add	r1, r8
    20da:	9b04      	ldr	r3, [sp, #16]
    20dc:	1acb      	subs	r3, r1, r3
    20de:	0018      	movs	r0, r3
    20e0:	0039      	movs	r1, r7
    20e2:	9304      	str	r3, [sp, #16]
    20e4:	f7ff fa42 	bl	156c <__udivsi3>
    20e8:	9b01      	ldr	r3, [sp, #4]
    20ea:	4682      	mov	sl, r0
    20ec:	4343      	muls	r3, r0
    20ee:	0039      	movs	r1, r7
    20f0:	9804      	ldr	r0, [sp, #16]
    20f2:	9301      	str	r3, [sp, #4]
    20f4:	f7ff fac0 	bl	1678 <__aeabi_uidivmod>
    20f8:	9801      	ldr	r0, [sp, #4]
    20fa:	040b      	lsls	r3, r1, #16
    20fc:	0431      	lsls	r1, r6, #16
    20fe:	0c09      	lsrs	r1, r1, #16
    2100:	4319      	orrs	r1, r3
    2102:	4288      	cmp	r0, r1
    2104:	d90d      	bls.n	2122 <STACK_SIZE+0x122>
    2106:	4653      	mov	r3, sl
    2108:	4441      	add	r1, r8
    210a:	3b01      	subs	r3, #1
    210c:	4588      	cmp	r8, r1
    210e:	d900      	bls.n	2112 <STACK_SIZE+0x112>
    2110:	e0e8      	b.n	22e4 <STACK_SIZE+0x2e4>
    2112:	4288      	cmp	r0, r1
    2114:	d800      	bhi.n	2118 <STACK_SIZE+0x118>
    2116:	e0e5      	b.n	22e4 <STACK_SIZE+0x2e4>
    2118:	2302      	movs	r3, #2
    211a:	425b      	negs	r3, r3
    211c:	469c      	mov	ip, r3
    211e:	4441      	add	r1, r8
    2120:	44e2      	add	sl, ip
    2122:	9b01      	ldr	r3, [sp, #4]
    2124:	042d      	lsls	r5, r5, #16
    2126:	1ace      	subs	r6, r1, r3
    2128:	4651      	mov	r1, sl
    212a:	4329      	orrs	r1, r5
    212c:	9d05      	ldr	r5, [sp, #20]
    212e:	464f      	mov	r7, r9
    2130:	002a      	movs	r2, r5
    2132:	040b      	lsls	r3, r1, #16
    2134:	0c08      	lsrs	r0, r1, #16
    2136:	0c1b      	lsrs	r3, r3, #16
    2138:	435a      	muls	r2, r3
    213a:	4345      	muls	r5, r0
    213c:	437b      	muls	r3, r7
    213e:	4378      	muls	r0, r7
    2140:	195b      	adds	r3, r3, r5
    2142:	0c17      	lsrs	r7, r2, #16
    2144:	18fb      	adds	r3, r7, r3
    2146:	429d      	cmp	r5, r3
    2148:	d903      	bls.n	2152 <STACK_SIZE+0x152>
    214a:	2580      	movs	r5, #128	; 0x80
    214c:	026d      	lsls	r5, r5, #9
    214e:	46ac      	mov	ip, r5
    2150:	4460      	add	r0, ip
    2152:	0c1d      	lsrs	r5, r3, #16
    2154:	0412      	lsls	r2, r2, #16
    2156:	041b      	lsls	r3, r3, #16
    2158:	0c12      	lsrs	r2, r2, #16
    215a:	1828      	adds	r0, r5, r0
    215c:	189b      	adds	r3, r3, r2
    215e:	4286      	cmp	r6, r0
    2160:	d200      	bcs.n	2164 <STACK_SIZE+0x164>
    2162:	e093      	b.n	228c <STACK_SIZE+0x28c>
    2164:	d100      	bne.n	2168 <STACK_SIZE+0x168>
    2166:	e08e      	b.n	2286 <STACK_SIZE+0x286>
    2168:	2301      	movs	r3, #1
    216a:	4319      	orrs	r1, r3
    216c:	4ba0      	ldr	r3, [pc, #640]	; (23f0 <STACK_SIZE+0x3f0>)
    216e:	18e3      	adds	r3, r4, r3
    2170:	2b00      	cmp	r3, #0
    2172:	dc00      	bgt.n	2176 <STACK_SIZE+0x176>
    2174:	e099      	b.n	22aa <STACK_SIZE+0x2aa>
    2176:	074a      	lsls	r2, r1, #29
    2178:	d000      	beq.n	217c <STACK_SIZE+0x17c>
    217a:	e09e      	b.n	22ba <STACK_SIZE+0x2ba>
    217c:	465a      	mov	r2, fp
    217e:	01d2      	lsls	r2, r2, #7
    2180:	d506      	bpl.n	2190 <STACK_SIZE+0x190>
    2182:	465a      	mov	r2, fp
    2184:	4b9b      	ldr	r3, [pc, #620]	; (23f4 <STACK_SIZE+0x3f4>)
    2186:	401a      	ands	r2, r3
    2188:	2380      	movs	r3, #128	; 0x80
    218a:	4693      	mov	fp, r2
    218c:	00db      	lsls	r3, r3, #3
    218e:	18e3      	adds	r3, r4, r3
    2190:	4a99      	ldr	r2, [pc, #612]	; (23f8 <STACK_SIZE+0x3f8>)
    2192:	4293      	cmp	r3, r2
    2194:	dd68      	ble.n	2268 <STACK_SIZE+0x268>
    2196:	2301      	movs	r3, #1
    2198:	9a02      	ldr	r2, [sp, #8]
    219a:	4c98      	ldr	r4, [pc, #608]	; (23fc <STACK_SIZE+0x3fc>)
    219c:	401a      	ands	r2, r3
    219e:	2300      	movs	r3, #0
    21a0:	4694      	mov	ip, r2
    21a2:	4698      	mov	r8, r3
    21a4:	2200      	movs	r2, #0
    21a6:	e6c5      	b.n	1f34 <__aeabi_ddiv+0x19c>
    21a8:	2280      	movs	r2, #128	; 0x80
    21aa:	464b      	mov	r3, r9
    21ac:	0312      	lsls	r2, r2, #12
    21ae:	4213      	tst	r3, r2
    21b0:	d00a      	beq.n	21c8 <STACK_SIZE+0x1c8>
    21b2:	465b      	mov	r3, fp
    21b4:	4213      	tst	r3, r2
    21b6:	d106      	bne.n	21c6 <STACK_SIZE+0x1c6>
    21b8:	431a      	orrs	r2, r3
    21ba:	0312      	lsls	r2, r2, #12
    21bc:	0b12      	lsrs	r2, r2, #12
    21be:	46ac      	mov	ip, r5
    21c0:	4688      	mov	r8, r1
    21c2:	4c8e      	ldr	r4, [pc, #568]	; (23fc <STACK_SIZE+0x3fc>)
    21c4:	e6b6      	b.n	1f34 <__aeabi_ddiv+0x19c>
    21c6:	464b      	mov	r3, r9
    21c8:	431a      	orrs	r2, r3
    21ca:	0312      	lsls	r2, r2, #12
    21cc:	0b12      	lsrs	r2, r2, #12
    21ce:	46bc      	mov	ip, r7
    21d0:	4c8a      	ldr	r4, [pc, #552]	; (23fc <STACK_SIZE+0x3fc>)
    21d2:	e6af      	b.n	1f34 <__aeabi_ddiv+0x19c>
    21d4:	0003      	movs	r3, r0
    21d6:	465a      	mov	r2, fp
    21d8:	3b28      	subs	r3, #40	; 0x28
    21da:	409a      	lsls	r2, r3
    21dc:	2300      	movs	r3, #0
    21de:	4691      	mov	r9, r2
    21e0:	4698      	mov	r8, r3
    21e2:	e657      	b.n	1e94 <__aeabi_ddiv+0xfc>
    21e4:	4658      	mov	r0, fp
    21e6:	f000 fcdd 	bl	2ba4 <__clzsi2>
    21ea:	3020      	adds	r0, #32
    21ec:	e640      	b.n	1e70 <__aeabi_ddiv+0xd8>
    21ee:	0003      	movs	r3, r0
    21f0:	4652      	mov	r2, sl
    21f2:	3b28      	subs	r3, #40	; 0x28
    21f4:	409a      	lsls	r2, r3
    21f6:	2100      	movs	r1, #0
    21f8:	4693      	mov	fp, r2
    21fa:	e677      	b.n	1eec <__aeabi_ddiv+0x154>
    21fc:	f000 fcd2 	bl	2ba4 <__clzsi2>
    2200:	3020      	adds	r0, #32
    2202:	e65f      	b.n	1ec4 <__aeabi_ddiv+0x12c>
    2204:	4588      	cmp	r8, r1
    2206:	d200      	bcs.n	220a <STACK_SIZE+0x20a>
    2208:	e6c7      	b.n	1f9a <__aeabi_ddiv+0x202>
    220a:	464b      	mov	r3, r9
    220c:	07de      	lsls	r6, r3, #31
    220e:	085d      	lsrs	r5, r3, #1
    2210:	4643      	mov	r3, r8
    2212:	085b      	lsrs	r3, r3, #1
    2214:	431e      	orrs	r6, r3
    2216:	4643      	mov	r3, r8
    2218:	07db      	lsls	r3, r3, #31
    221a:	469a      	mov	sl, r3
    221c:	e6c2      	b.n	1fa4 <__aeabi_ddiv+0x20c>
    221e:	2500      	movs	r5, #0
    2220:	4592      	cmp	sl, r2
    2222:	d300      	bcc.n	2226 <STACK_SIZE+0x226>
    2224:	e733      	b.n	208e <STACK_SIZE+0x8e>
    2226:	9e03      	ldr	r6, [sp, #12]
    2228:	4659      	mov	r1, fp
    222a:	46b4      	mov	ip, r6
    222c:	44e2      	add	sl, ip
    222e:	45b2      	cmp	sl, r6
    2230:	41ad      	sbcs	r5, r5
    2232:	426d      	negs	r5, r5
    2234:	4445      	add	r5, r8
    2236:	18eb      	adds	r3, r5, r3
    2238:	3901      	subs	r1, #1
    223a:	4598      	cmp	r8, r3
    223c:	d207      	bcs.n	224e <STACK_SIZE+0x24e>
    223e:	4298      	cmp	r0, r3
    2240:	d900      	bls.n	2244 <STACK_SIZE+0x244>
    2242:	e07f      	b.n	2344 <STACK_SIZE+0x344>
    2244:	d100      	bne.n	2248 <STACK_SIZE+0x248>
    2246:	e0bc      	b.n	23c2 <STACK_SIZE+0x3c2>
    2248:	1a1d      	subs	r5, r3, r0
    224a:	468b      	mov	fp, r1
    224c:	e71f      	b.n	208e <STACK_SIZE+0x8e>
    224e:	4598      	cmp	r8, r3
    2250:	d1fa      	bne.n	2248 <STACK_SIZE+0x248>
    2252:	9d03      	ldr	r5, [sp, #12]
    2254:	4555      	cmp	r5, sl
    2256:	d9f2      	bls.n	223e <STACK_SIZE+0x23e>
    2258:	4643      	mov	r3, r8
    225a:	468b      	mov	fp, r1
    225c:	1a1d      	subs	r5, r3, r0
    225e:	e716      	b.n	208e <STACK_SIZE+0x8e>
    2260:	469b      	mov	fp, r3
    2262:	e6ca      	b.n	1ffa <__aeabi_ddiv+0x262>
    2264:	0015      	movs	r5, r2
    2266:	e6e7      	b.n	2038 <STACK_SIZE+0x38>
    2268:	465a      	mov	r2, fp
    226a:	08c9      	lsrs	r1, r1, #3
    226c:	0752      	lsls	r2, r2, #29
    226e:	430a      	orrs	r2, r1
    2270:	055b      	lsls	r3, r3, #21
    2272:	4690      	mov	r8, r2
    2274:	0d5c      	lsrs	r4, r3, #21
    2276:	465a      	mov	r2, fp
    2278:	2301      	movs	r3, #1
    227a:	9902      	ldr	r1, [sp, #8]
    227c:	0252      	lsls	r2, r2, #9
    227e:	4019      	ands	r1, r3
    2280:	0b12      	lsrs	r2, r2, #12
    2282:	468c      	mov	ip, r1
    2284:	e656      	b.n	1f34 <__aeabi_ddiv+0x19c>
    2286:	2b00      	cmp	r3, #0
    2288:	d100      	bne.n	228c <STACK_SIZE+0x28c>
    228a:	e76f      	b.n	216c <STACK_SIZE+0x16c>
    228c:	4446      	add	r6, r8
    228e:	1e4a      	subs	r2, r1, #1
    2290:	45b0      	cmp	r8, r6
    2292:	d929      	bls.n	22e8 <STACK_SIZE+0x2e8>
    2294:	0011      	movs	r1, r2
    2296:	4286      	cmp	r6, r0
    2298:	d000      	beq.n	229c <STACK_SIZE+0x29c>
    229a:	e765      	b.n	2168 <STACK_SIZE+0x168>
    229c:	9a03      	ldr	r2, [sp, #12]
    229e:	4293      	cmp	r3, r2
    22a0:	d000      	beq.n	22a4 <STACK_SIZE+0x2a4>
    22a2:	e761      	b.n	2168 <STACK_SIZE+0x168>
    22a4:	e762      	b.n	216c <STACK_SIZE+0x16c>
    22a6:	2101      	movs	r1, #1
    22a8:	4249      	negs	r1, r1
    22aa:	2001      	movs	r0, #1
    22ac:	1ac2      	subs	r2, r0, r3
    22ae:	2a38      	cmp	r2, #56	; 0x38
    22b0:	dd21      	ble.n	22f6 <STACK_SIZE+0x2f6>
    22b2:	9b02      	ldr	r3, [sp, #8]
    22b4:	4003      	ands	r3, r0
    22b6:	469c      	mov	ip, r3
    22b8:	e638      	b.n	1f2c <__aeabi_ddiv+0x194>
    22ba:	220f      	movs	r2, #15
    22bc:	400a      	ands	r2, r1
    22be:	2a04      	cmp	r2, #4
    22c0:	d100      	bne.n	22c4 <STACK_SIZE+0x2c4>
    22c2:	e75b      	b.n	217c <STACK_SIZE+0x17c>
    22c4:	000a      	movs	r2, r1
    22c6:	1d11      	adds	r1, r2, #4
    22c8:	4291      	cmp	r1, r2
    22ca:	4192      	sbcs	r2, r2
    22cc:	4252      	negs	r2, r2
    22ce:	4493      	add	fp, r2
    22d0:	e754      	b.n	217c <STACK_SIZE+0x17c>
    22d2:	4b47      	ldr	r3, [pc, #284]	; (23f0 <STACK_SIZE+0x3f0>)
    22d4:	18e3      	adds	r3, r4, r3
    22d6:	2b00      	cmp	r3, #0
    22d8:	dde5      	ble.n	22a6 <STACK_SIZE+0x2a6>
    22da:	2201      	movs	r2, #1
    22dc:	4252      	negs	r2, r2
    22de:	e7f2      	b.n	22c6 <STACK_SIZE+0x2c6>
    22e0:	001d      	movs	r5, r3
    22e2:	e6fa      	b.n	20da <STACK_SIZE+0xda>
    22e4:	469a      	mov	sl, r3
    22e6:	e71c      	b.n	2122 <STACK_SIZE+0x122>
    22e8:	42b0      	cmp	r0, r6
    22ea:	d839      	bhi.n	2360 <STACK_SIZE+0x360>
    22ec:	d06e      	beq.n	23cc <STACK_SIZE+0x3cc>
    22ee:	0011      	movs	r1, r2
    22f0:	e73a      	b.n	2168 <STACK_SIZE+0x168>
    22f2:	9302      	str	r3, [sp, #8]
    22f4:	e73a      	b.n	216c <STACK_SIZE+0x16c>
    22f6:	2a1f      	cmp	r2, #31
    22f8:	dc3c      	bgt.n	2374 <STACK_SIZE+0x374>
    22fa:	2320      	movs	r3, #32
    22fc:	1a9b      	subs	r3, r3, r2
    22fe:	000c      	movs	r4, r1
    2300:	4658      	mov	r0, fp
    2302:	4099      	lsls	r1, r3
    2304:	4098      	lsls	r0, r3
    2306:	1e4b      	subs	r3, r1, #1
    2308:	4199      	sbcs	r1, r3
    230a:	465b      	mov	r3, fp
    230c:	40d4      	lsrs	r4, r2
    230e:	40d3      	lsrs	r3, r2
    2310:	4320      	orrs	r0, r4
    2312:	4308      	orrs	r0, r1
    2314:	001a      	movs	r2, r3
    2316:	0743      	lsls	r3, r0, #29
    2318:	d009      	beq.n	232e <STACK_SIZE+0x32e>
    231a:	230f      	movs	r3, #15
    231c:	4003      	ands	r3, r0
    231e:	2b04      	cmp	r3, #4
    2320:	d005      	beq.n	232e <STACK_SIZE+0x32e>
    2322:	0001      	movs	r1, r0
    2324:	1d08      	adds	r0, r1, #4
    2326:	4288      	cmp	r0, r1
    2328:	419b      	sbcs	r3, r3
    232a:	425b      	negs	r3, r3
    232c:	18d2      	adds	r2, r2, r3
    232e:	0213      	lsls	r3, r2, #8
    2330:	d53a      	bpl.n	23a8 <STACK_SIZE+0x3a8>
    2332:	2301      	movs	r3, #1
    2334:	9a02      	ldr	r2, [sp, #8]
    2336:	2401      	movs	r4, #1
    2338:	401a      	ands	r2, r3
    233a:	2300      	movs	r3, #0
    233c:	4694      	mov	ip, r2
    233e:	4698      	mov	r8, r3
    2340:	2200      	movs	r2, #0
    2342:	e5f7      	b.n	1f34 <__aeabi_ddiv+0x19c>
    2344:	2102      	movs	r1, #2
    2346:	4249      	negs	r1, r1
    2348:	468c      	mov	ip, r1
    234a:	9d03      	ldr	r5, [sp, #12]
    234c:	44e3      	add	fp, ip
    234e:	46ac      	mov	ip, r5
    2350:	44e2      	add	sl, ip
    2352:	45aa      	cmp	sl, r5
    2354:	41ad      	sbcs	r5, r5
    2356:	426d      	negs	r5, r5
    2358:	4445      	add	r5, r8
    235a:	18ed      	adds	r5, r5, r3
    235c:	1a2d      	subs	r5, r5, r0
    235e:	e696      	b.n	208e <STACK_SIZE+0x8e>
    2360:	1e8a      	subs	r2, r1, #2
    2362:	9903      	ldr	r1, [sp, #12]
    2364:	004d      	lsls	r5, r1, #1
    2366:	428d      	cmp	r5, r1
    2368:	4189      	sbcs	r1, r1
    236a:	4249      	negs	r1, r1
    236c:	4441      	add	r1, r8
    236e:	1876      	adds	r6, r6, r1
    2370:	9503      	str	r5, [sp, #12]
    2372:	e78f      	b.n	2294 <STACK_SIZE+0x294>
    2374:	201f      	movs	r0, #31
    2376:	4240      	negs	r0, r0
    2378:	1ac3      	subs	r3, r0, r3
    237a:	4658      	mov	r0, fp
    237c:	40d8      	lsrs	r0, r3
    237e:	0003      	movs	r3, r0
    2380:	2a20      	cmp	r2, #32
    2382:	d028      	beq.n	23d6 <STACK_SIZE+0x3d6>
    2384:	2040      	movs	r0, #64	; 0x40
    2386:	465d      	mov	r5, fp
    2388:	1a82      	subs	r2, r0, r2
    238a:	4095      	lsls	r5, r2
    238c:	4329      	orrs	r1, r5
    238e:	1e4a      	subs	r2, r1, #1
    2390:	4191      	sbcs	r1, r2
    2392:	4319      	orrs	r1, r3
    2394:	2307      	movs	r3, #7
    2396:	2200      	movs	r2, #0
    2398:	400b      	ands	r3, r1
    239a:	d009      	beq.n	23b0 <STACK_SIZE+0x3b0>
    239c:	230f      	movs	r3, #15
    239e:	2200      	movs	r2, #0
    23a0:	400b      	ands	r3, r1
    23a2:	0008      	movs	r0, r1
    23a4:	2b04      	cmp	r3, #4
    23a6:	d1bd      	bne.n	2324 <STACK_SIZE+0x324>
    23a8:	0001      	movs	r1, r0
    23aa:	0753      	lsls	r3, r2, #29
    23ac:	0252      	lsls	r2, r2, #9
    23ae:	0b12      	lsrs	r2, r2, #12
    23b0:	08c9      	lsrs	r1, r1, #3
    23b2:	4319      	orrs	r1, r3
    23b4:	2301      	movs	r3, #1
    23b6:	4688      	mov	r8, r1
    23b8:	9902      	ldr	r1, [sp, #8]
    23ba:	2400      	movs	r4, #0
    23bc:	4019      	ands	r1, r3
    23be:	468c      	mov	ip, r1
    23c0:	e5b8      	b.n	1f34 <__aeabi_ddiv+0x19c>
    23c2:	4552      	cmp	r2, sl
    23c4:	d8be      	bhi.n	2344 <STACK_SIZE+0x344>
    23c6:	468b      	mov	fp, r1
    23c8:	2500      	movs	r5, #0
    23ca:	e660      	b.n	208e <STACK_SIZE+0x8e>
    23cc:	9d03      	ldr	r5, [sp, #12]
    23ce:	429d      	cmp	r5, r3
    23d0:	d3c6      	bcc.n	2360 <STACK_SIZE+0x360>
    23d2:	0011      	movs	r1, r2
    23d4:	e762      	b.n	229c <STACK_SIZE+0x29c>
    23d6:	2500      	movs	r5, #0
    23d8:	e7d8      	b.n	238c <STACK_SIZE+0x38c>
    23da:	2280      	movs	r2, #128	; 0x80
    23dc:	465b      	mov	r3, fp
    23de:	0312      	lsls	r2, r2, #12
    23e0:	431a      	orrs	r2, r3
    23e2:	9b01      	ldr	r3, [sp, #4]
    23e4:	0312      	lsls	r2, r2, #12
    23e6:	0b12      	lsrs	r2, r2, #12
    23e8:	469c      	mov	ip, r3
    23ea:	4688      	mov	r8, r1
    23ec:	4c03      	ldr	r4, [pc, #12]	; (23fc <STACK_SIZE+0x3fc>)
    23ee:	e5a1      	b.n	1f34 <__aeabi_ddiv+0x19c>
    23f0:	000003ff 	.word	0x000003ff
    23f4:	feffffff 	.word	0xfeffffff
    23f8:	000007fe 	.word	0x000007fe
    23fc:	000007ff 	.word	0x000007ff

00002400 <__aeabi_dmul>:
    2400:	b5f0      	push	{r4, r5, r6, r7, lr}
    2402:	4657      	mov	r7, sl
    2404:	4645      	mov	r5, r8
    2406:	46de      	mov	lr, fp
    2408:	464e      	mov	r6, r9
    240a:	b5e0      	push	{r5, r6, r7, lr}
    240c:	030c      	lsls	r4, r1, #12
    240e:	4698      	mov	r8, r3
    2410:	004e      	lsls	r6, r1, #1
    2412:	0b23      	lsrs	r3, r4, #12
    2414:	b087      	sub	sp, #28
    2416:	0007      	movs	r7, r0
    2418:	4692      	mov	sl, r2
    241a:	469b      	mov	fp, r3
    241c:	0d76      	lsrs	r6, r6, #21
    241e:	0fcd      	lsrs	r5, r1, #31
    2420:	2e00      	cmp	r6, #0
    2422:	d06b      	beq.n	24fc <__aeabi_dmul+0xfc>
    2424:	4b6d      	ldr	r3, [pc, #436]	; (25dc <__aeabi_dmul+0x1dc>)
    2426:	429e      	cmp	r6, r3
    2428:	d035      	beq.n	2496 <__aeabi_dmul+0x96>
    242a:	2480      	movs	r4, #128	; 0x80
    242c:	465b      	mov	r3, fp
    242e:	0f42      	lsrs	r2, r0, #29
    2430:	0424      	lsls	r4, r4, #16
    2432:	00db      	lsls	r3, r3, #3
    2434:	4314      	orrs	r4, r2
    2436:	431c      	orrs	r4, r3
    2438:	00c3      	lsls	r3, r0, #3
    243a:	4699      	mov	r9, r3
    243c:	4b68      	ldr	r3, [pc, #416]	; (25e0 <__aeabi_dmul+0x1e0>)
    243e:	46a3      	mov	fp, r4
    2440:	469c      	mov	ip, r3
    2442:	2300      	movs	r3, #0
    2444:	2700      	movs	r7, #0
    2446:	4466      	add	r6, ip
    2448:	9302      	str	r3, [sp, #8]
    244a:	4643      	mov	r3, r8
    244c:	031c      	lsls	r4, r3, #12
    244e:	005a      	lsls	r2, r3, #1
    2450:	0fdb      	lsrs	r3, r3, #31
    2452:	4650      	mov	r0, sl
    2454:	0b24      	lsrs	r4, r4, #12
    2456:	0d52      	lsrs	r2, r2, #21
    2458:	4698      	mov	r8, r3
    245a:	d100      	bne.n	245e <__aeabi_dmul+0x5e>
    245c:	e076      	b.n	254c <__aeabi_dmul+0x14c>
    245e:	4b5f      	ldr	r3, [pc, #380]	; (25dc <__aeabi_dmul+0x1dc>)
    2460:	429a      	cmp	r2, r3
    2462:	d06d      	beq.n	2540 <__aeabi_dmul+0x140>
    2464:	2380      	movs	r3, #128	; 0x80
    2466:	0f41      	lsrs	r1, r0, #29
    2468:	041b      	lsls	r3, r3, #16
    246a:	430b      	orrs	r3, r1
    246c:	495c      	ldr	r1, [pc, #368]	; (25e0 <__aeabi_dmul+0x1e0>)
    246e:	00e4      	lsls	r4, r4, #3
    2470:	468c      	mov	ip, r1
    2472:	431c      	orrs	r4, r3
    2474:	00c3      	lsls	r3, r0, #3
    2476:	2000      	movs	r0, #0
    2478:	4462      	add	r2, ip
    247a:	4641      	mov	r1, r8
    247c:	18b6      	adds	r6, r6, r2
    247e:	4069      	eors	r1, r5
    2480:	1c72      	adds	r2, r6, #1
    2482:	9101      	str	r1, [sp, #4]
    2484:	4694      	mov	ip, r2
    2486:	4307      	orrs	r7, r0
    2488:	2f0f      	cmp	r7, #15
    248a:	d900      	bls.n	248e <__aeabi_dmul+0x8e>
    248c:	e0b0      	b.n	25f0 <__aeabi_dmul+0x1f0>
    248e:	4a55      	ldr	r2, [pc, #340]	; (25e4 <__aeabi_dmul+0x1e4>)
    2490:	00bf      	lsls	r7, r7, #2
    2492:	59d2      	ldr	r2, [r2, r7]
    2494:	4697      	mov	pc, r2
    2496:	465b      	mov	r3, fp
    2498:	4303      	orrs	r3, r0
    249a:	4699      	mov	r9, r3
    249c:	d000      	beq.n	24a0 <__aeabi_dmul+0xa0>
    249e:	e087      	b.n	25b0 <__aeabi_dmul+0x1b0>
    24a0:	2300      	movs	r3, #0
    24a2:	469b      	mov	fp, r3
    24a4:	3302      	adds	r3, #2
    24a6:	2708      	movs	r7, #8
    24a8:	9302      	str	r3, [sp, #8]
    24aa:	e7ce      	b.n	244a <__aeabi_dmul+0x4a>
    24ac:	4642      	mov	r2, r8
    24ae:	9201      	str	r2, [sp, #4]
    24b0:	2802      	cmp	r0, #2
    24b2:	d067      	beq.n	2584 <__aeabi_dmul+0x184>
    24b4:	2803      	cmp	r0, #3
    24b6:	d100      	bne.n	24ba <__aeabi_dmul+0xba>
    24b8:	e20e      	b.n	28d8 <__aeabi_dmul+0x4d8>
    24ba:	2801      	cmp	r0, #1
    24bc:	d000      	beq.n	24c0 <__aeabi_dmul+0xc0>
    24be:	e162      	b.n	2786 <__aeabi_dmul+0x386>
    24c0:	2300      	movs	r3, #0
    24c2:	2400      	movs	r4, #0
    24c4:	2200      	movs	r2, #0
    24c6:	4699      	mov	r9, r3
    24c8:	9901      	ldr	r1, [sp, #4]
    24ca:	4001      	ands	r1, r0
    24cc:	b2cd      	uxtb	r5, r1
    24ce:	2100      	movs	r1, #0
    24d0:	0312      	lsls	r2, r2, #12
    24d2:	0d0b      	lsrs	r3, r1, #20
    24d4:	0b12      	lsrs	r2, r2, #12
    24d6:	051b      	lsls	r3, r3, #20
    24d8:	4313      	orrs	r3, r2
    24da:	4a43      	ldr	r2, [pc, #268]	; (25e8 <__aeabi_dmul+0x1e8>)
    24dc:	0524      	lsls	r4, r4, #20
    24de:	4013      	ands	r3, r2
    24e0:	431c      	orrs	r4, r3
    24e2:	0064      	lsls	r4, r4, #1
    24e4:	07ed      	lsls	r5, r5, #31
    24e6:	0864      	lsrs	r4, r4, #1
    24e8:	432c      	orrs	r4, r5
    24ea:	4648      	mov	r0, r9
    24ec:	0021      	movs	r1, r4
    24ee:	b007      	add	sp, #28
    24f0:	bc3c      	pop	{r2, r3, r4, r5}
    24f2:	4690      	mov	r8, r2
    24f4:	4699      	mov	r9, r3
    24f6:	46a2      	mov	sl, r4
    24f8:	46ab      	mov	fp, r5
    24fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24fc:	4303      	orrs	r3, r0
    24fe:	4699      	mov	r9, r3
    2500:	d04f      	beq.n	25a2 <__aeabi_dmul+0x1a2>
    2502:	465b      	mov	r3, fp
    2504:	2b00      	cmp	r3, #0
    2506:	d100      	bne.n	250a <__aeabi_dmul+0x10a>
    2508:	e189      	b.n	281e <__aeabi_dmul+0x41e>
    250a:	4658      	mov	r0, fp
    250c:	f000 fb4a 	bl	2ba4 <__clzsi2>
    2510:	0003      	movs	r3, r0
    2512:	3b0b      	subs	r3, #11
    2514:	2b1c      	cmp	r3, #28
    2516:	dd00      	ble.n	251a <__aeabi_dmul+0x11a>
    2518:	e17a      	b.n	2810 <__aeabi_dmul+0x410>
    251a:	221d      	movs	r2, #29
    251c:	1ad3      	subs	r3, r2, r3
    251e:	003a      	movs	r2, r7
    2520:	0001      	movs	r1, r0
    2522:	465c      	mov	r4, fp
    2524:	40da      	lsrs	r2, r3
    2526:	3908      	subs	r1, #8
    2528:	408c      	lsls	r4, r1
    252a:	0013      	movs	r3, r2
    252c:	408f      	lsls	r7, r1
    252e:	4323      	orrs	r3, r4
    2530:	469b      	mov	fp, r3
    2532:	46b9      	mov	r9, r7
    2534:	2300      	movs	r3, #0
    2536:	4e2d      	ldr	r6, [pc, #180]	; (25ec <__aeabi_dmul+0x1ec>)
    2538:	2700      	movs	r7, #0
    253a:	1a36      	subs	r6, r6, r0
    253c:	9302      	str	r3, [sp, #8]
    253e:	e784      	b.n	244a <__aeabi_dmul+0x4a>
    2540:	4653      	mov	r3, sl
    2542:	4323      	orrs	r3, r4
    2544:	d12a      	bne.n	259c <__aeabi_dmul+0x19c>
    2546:	2400      	movs	r4, #0
    2548:	2002      	movs	r0, #2
    254a:	e796      	b.n	247a <__aeabi_dmul+0x7a>
    254c:	4653      	mov	r3, sl
    254e:	4323      	orrs	r3, r4
    2550:	d020      	beq.n	2594 <__aeabi_dmul+0x194>
    2552:	2c00      	cmp	r4, #0
    2554:	d100      	bne.n	2558 <__aeabi_dmul+0x158>
    2556:	e157      	b.n	2808 <__aeabi_dmul+0x408>
    2558:	0020      	movs	r0, r4
    255a:	f000 fb23 	bl	2ba4 <__clzsi2>
    255e:	0003      	movs	r3, r0
    2560:	3b0b      	subs	r3, #11
    2562:	2b1c      	cmp	r3, #28
    2564:	dd00      	ble.n	2568 <__aeabi_dmul+0x168>
    2566:	e149      	b.n	27fc <__aeabi_dmul+0x3fc>
    2568:	211d      	movs	r1, #29
    256a:	1acb      	subs	r3, r1, r3
    256c:	4651      	mov	r1, sl
    256e:	0002      	movs	r2, r0
    2570:	40d9      	lsrs	r1, r3
    2572:	4653      	mov	r3, sl
    2574:	3a08      	subs	r2, #8
    2576:	4094      	lsls	r4, r2
    2578:	4093      	lsls	r3, r2
    257a:	430c      	orrs	r4, r1
    257c:	4a1b      	ldr	r2, [pc, #108]	; (25ec <__aeabi_dmul+0x1ec>)
    257e:	1a12      	subs	r2, r2, r0
    2580:	2000      	movs	r0, #0
    2582:	e77a      	b.n	247a <__aeabi_dmul+0x7a>
    2584:	2501      	movs	r5, #1
    2586:	9b01      	ldr	r3, [sp, #4]
    2588:	4c14      	ldr	r4, [pc, #80]	; (25dc <__aeabi_dmul+0x1dc>)
    258a:	401d      	ands	r5, r3
    258c:	2300      	movs	r3, #0
    258e:	2200      	movs	r2, #0
    2590:	4699      	mov	r9, r3
    2592:	e79c      	b.n	24ce <__aeabi_dmul+0xce>
    2594:	2400      	movs	r4, #0
    2596:	2200      	movs	r2, #0
    2598:	2001      	movs	r0, #1
    259a:	e76e      	b.n	247a <__aeabi_dmul+0x7a>
    259c:	4653      	mov	r3, sl
    259e:	2003      	movs	r0, #3
    25a0:	e76b      	b.n	247a <__aeabi_dmul+0x7a>
    25a2:	2300      	movs	r3, #0
    25a4:	469b      	mov	fp, r3
    25a6:	3301      	adds	r3, #1
    25a8:	2704      	movs	r7, #4
    25aa:	2600      	movs	r6, #0
    25ac:	9302      	str	r3, [sp, #8]
    25ae:	e74c      	b.n	244a <__aeabi_dmul+0x4a>
    25b0:	2303      	movs	r3, #3
    25b2:	4681      	mov	r9, r0
    25b4:	270c      	movs	r7, #12
    25b6:	9302      	str	r3, [sp, #8]
    25b8:	e747      	b.n	244a <__aeabi_dmul+0x4a>
    25ba:	2280      	movs	r2, #128	; 0x80
    25bc:	2300      	movs	r3, #0
    25be:	2500      	movs	r5, #0
    25c0:	0312      	lsls	r2, r2, #12
    25c2:	4699      	mov	r9, r3
    25c4:	4c05      	ldr	r4, [pc, #20]	; (25dc <__aeabi_dmul+0x1dc>)
    25c6:	e782      	b.n	24ce <__aeabi_dmul+0xce>
    25c8:	465c      	mov	r4, fp
    25ca:	464b      	mov	r3, r9
    25cc:	9802      	ldr	r0, [sp, #8]
    25ce:	e76f      	b.n	24b0 <__aeabi_dmul+0xb0>
    25d0:	465c      	mov	r4, fp
    25d2:	464b      	mov	r3, r9
    25d4:	9501      	str	r5, [sp, #4]
    25d6:	9802      	ldr	r0, [sp, #8]
    25d8:	e76a      	b.n	24b0 <__aeabi_dmul+0xb0>
    25da:	46c0      	nop			; (mov r8, r8)
    25dc:	000007ff 	.word	0x000007ff
    25e0:	fffffc01 	.word	0xfffffc01
    25e4:	00004f94 	.word	0x00004f94
    25e8:	800fffff 	.word	0x800fffff
    25ec:	fffffc0d 	.word	0xfffffc0d
    25f0:	464a      	mov	r2, r9
    25f2:	4649      	mov	r1, r9
    25f4:	0c17      	lsrs	r7, r2, #16
    25f6:	0c1a      	lsrs	r2, r3, #16
    25f8:	041b      	lsls	r3, r3, #16
    25fa:	0c1b      	lsrs	r3, r3, #16
    25fc:	0408      	lsls	r0, r1, #16
    25fe:	0019      	movs	r1, r3
    2600:	0c00      	lsrs	r0, r0, #16
    2602:	4341      	muls	r1, r0
    2604:	0015      	movs	r5, r2
    2606:	4688      	mov	r8, r1
    2608:	0019      	movs	r1, r3
    260a:	437d      	muls	r5, r7
    260c:	4379      	muls	r1, r7
    260e:	9503      	str	r5, [sp, #12]
    2610:	4689      	mov	r9, r1
    2612:	0029      	movs	r1, r5
    2614:	0015      	movs	r5, r2
    2616:	4345      	muls	r5, r0
    2618:	444d      	add	r5, r9
    261a:	9502      	str	r5, [sp, #8]
    261c:	4645      	mov	r5, r8
    261e:	0c2d      	lsrs	r5, r5, #16
    2620:	46aa      	mov	sl, r5
    2622:	9d02      	ldr	r5, [sp, #8]
    2624:	4455      	add	r5, sl
    2626:	45a9      	cmp	r9, r5
    2628:	d906      	bls.n	2638 <__aeabi_dmul+0x238>
    262a:	468a      	mov	sl, r1
    262c:	2180      	movs	r1, #128	; 0x80
    262e:	0249      	lsls	r1, r1, #9
    2630:	4689      	mov	r9, r1
    2632:	44ca      	add	sl, r9
    2634:	4651      	mov	r1, sl
    2636:	9103      	str	r1, [sp, #12]
    2638:	0c29      	lsrs	r1, r5, #16
    263a:	9104      	str	r1, [sp, #16]
    263c:	4641      	mov	r1, r8
    263e:	0409      	lsls	r1, r1, #16
    2640:	042d      	lsls	r5, r5, #16
    2642:	0c09      	lsrs	r1, r1, #16
    2644:	4688      	mov	r8, r1
    2646:	0029      	movs	r1, r5
    2648:	0c25      	lsrs	r5, r4, #16
    264a:	0424      	lsls	r4, r4, #16
    264c:	4441      	add	r1, r8
    264e:	0c24      	lsrs	r4, r4, #16
    2650:	9105      	str	r1, [sp, #20]
    2652:	0021      	movs	r1, r4
    2654:	4341      	muls	r1, r0
    2656:	4688      	mov	r8, r1
    2658:	0021      	movs	r1, r4
    265a:	4379      	muls	r1, r7
    265c:	468a      	mov	sl, r1
    265e:	4368      	muls	r0, r5
    2660:	4641      	mov	r1, r8
    2662:	4450      	add	r0, sl
    2664:	4681      	mov	r9, r0
    2666:	0c08      	lsrs	r0, r1, #16
    2668:	4448      	add	r0, r9
    266a:	436f      	muls	r7, r5
    266c:	4582      	cmp	sl, r0
    266e:	d903      	bls.n	2678 <__aeabi_dmul+0x278>
    2670:	2180      	movs	r1, #128	; 0x80
    2672:	0249      	lsls	r1, r1, #9
    2674:	4689      	mov	r9, r1
    2676:	444f      	add	r7, r9
    2678:	0c01      	lsrs	r1, r0, #16
    267a:	4689      	mov	r9, r1
    267c:	0039      	movs	r1, r7
    267e:	4449      	add	r1, r9
    2680:	9102      	str	r1, [sp, #8]
    2682:	4641      	mov	r1, r8
    2684:	040f      	lsls	r7, r1, #16
    2686:	9904      	ldr	r1, [sp, #16]
    2688:	0c3f      	lsrs	r7, r7, #16
    268a:	4688      	mov	r8, r1
    268c:	0400      	lsls	r0, r0, #16
    268e:	19c0      	adds	r0, r0, r7
    2690:	4480      	add	r8, r0
    2692:	4641      	mov	r1, r8
    2694:	9104      	str	r1, [sp, #16]
    2696:	4659      	mov	r1, fp
    2698:	0c0f      	lsrs	r7, r1, #16
    269a:	0409      	lsls	r1, r1, #16
    269c:	0c09      	lsrs	r1, r1, #16
    269e:	4688      	mov	r8, r1
    26a0:	4359      	muls	r1, r3
    26a2:	468a      	mov	sl, r1
    26a4:	0039      	movs	r1, r7
    26a6:	4351      	muls	r1, r2
    26a8:	4689      	mov	r9, r1
    26aa:	4641      	mov	r1, r8
    26ac:	434a      	muls	r2, r1
    26ae:	4651      	mov	r1, sl
    26b0:	0c09      	lsrs	r1, r1, #16
    26b2:	468b      	mov	fp, r1
    26b4:	437b      	muls	r3, r7
    26b6:	18d2      	adds	r2, r2, r3
    26b8:	445a      	add	r2, fp
    26ba:	4293      	cmp	r3, r2
    26bc:	d903      	bls.n	26c6 <__aeabi_dmul+0x2c6>
    26be:	2380      	movs	r3, #128	; 0x80
    26c0:	025b      	lsls	r3, r3, #9
    26c2:	469b      	mov	fp, r3
    26c4:	44d9      	add	r9, fp
    26c6:	4651      	mov	r1, sl
    26c8:	0409      	lsls	r1, r1, #16
    26ca:	0c09      	lsrs	r1, r1, #16
    26cc:	468a      	mov	sl, r1
    26ce:	4641      	mov	r1, r8
    26d0:	4361      	muls	r1, r4
    26d2:	437c      	muls	r4, r7
    26d4:	0c13      	lsrs	r3, r2, #16
    26d6:	0412      	lsls	r2, r2, #16
    26d8:	444b      	add	r3, r9
    26da:	4452      	add	r2, sl
    26dc:	46a1      	mov	r9, r4
    26de:	468a      	mov	sl, r1
    26e0:	003c      	movs	r4, r7
    26e2:	4641      	mov	r1, r8
    26e4:	436c      	muls	r4, r5
    26e6:	434d      	muls	r5, r1
    26e8:	4651      	mov	r1, sl
    26ea:	444d      	add	r5, r9
    26ec:	0c0f      	lsrs	r7, r1, #16
    26ee:	197d      	adds	r5, r7, r5
    26f0:	45a9      	cmp	r9, r5
    26f2:	d903      	bls.n	26fc <__aeabi_dmul+0x2fc>
    26f4:	2180      	movs	r1, #128	; 0x80
    26f6:	0249      	lsls	r1, r1, #9
    26f8:	4688      	mov	r8, r1
    26fa:	4444      	add	r4, r8
    26fc:	9f04      	ldr	r7, [sp, #16]
    26fe:	9903      	ldr	r1, [sp, #12]
    2700:	46b8      	mov	r8, r7
    2702:	4441      	add	r1, r8
    2704:	468b      	mov	fp, r1
    2706:	4583      	cmp	fp, r0
    2708:	4180      	sbcs	r0, r0
    270a:	4241      	negs	r1, r0
    270c:	4688      	mov	r8, r1
    270e:	4651      	mov	r1, sl
    2710:	0408      	lsls	r0, r1, #16
    2712:	042f      	lsls	r7, r5, #16
    2714:	0c00      	lsrs	r0, r0, #16
    2716:	183f      	adds	r7, r7, r0
    2718:	4658      	mov	r0, fp
    271a:	9902      	ldr	r1, [sp, #8]
    271c:	1810      	adds	r0, r2, r0
    271e:	4689      	mov	r9, r1
    2720:	4290      	cmp	r0, r2
    2722:	4192      	sbcs	r2, r2
    2724:	444f      	add	r7, r9
    2726:	46ba      	mov	sl, r7
    2728:	4252      	negs	r2, r2
    272a:	4699      	mov	r9, r3
    272c:	4693      	mov	fp, r2
    272e:	44c2      	add	sl, r8
    2730:	44d1      	add	r9, sl
    2732:	44cb      	add	fp, r9
    2734:	428f      	cmp	r7, r1
    2736:	41bf      	sbcs	r7, r7
    2738:	45c2      	cmp	sl, r8
    273a:	4189      	sbcs	r1, r1
    273c:	4599      	cmp	r9, r3
    273e:	419b      	sbcs	r3, r3
    2740:	4593      	cmp	fp, r2
    2742:	4192      	sbcs	r2, r2
    2744:	427f      	negs	r7, r7
    2746:	4249      	negs	r1, r1
    2748:	0c2d      	lsrs	r5, r5, #16
    274a:	4252      	negs	r2, r2
    274c:	430f      	orrs	r7, r1
    274e:	425b      	negs	r3, r3
    2750:	4313      	orrs	r3, r2
    2752:	197f      	adds	r7, r7, r5
    2754:	18ff      	adds	r7, r7, r3
    2756:	465b      	mov	r3, fp
    2758:	193c      	adds	r4, r7, r4
    275a:	0ddb      	lsrs	r3, r3, #23
    275c:	9a05      	ldr	r2, [sp, #20]
    275e:	0264      	lsls	r4, r4, #9
    2760:	431c      	orrs	r4, r3
    2762:	0243      	lsls	r3, r0, #9
    2764:	4313      	orrs	r3, r2
    2766:	1e5d      	subs	r5, r3, #1
    2768:	41ab      	sbcs	r3, r5
    276a:	465a      	mov	r2, fp
    276c:	0dc0      	lsrs	r0, r0, #23
    276e:	4303      	orrs	r3, r0
    2770:	0252      	lsls	r2, r2, #9
    2772:	4313      	orrs	r3, r2
    2774:	01e2      	lsls	r2, r4, #7
    2776:	d556      	bpl.n	2826 <__aeabi_dmul+0x426>
    2778:	2001      	movs	r0, #1
    277a:	085a      	lsrs	r2, r3, #1
    277c:	4003      	ands	r3, r0
    277e:	4313      	orrs	r3, r2
    2780:	07e2      	lsls	r2, r4, #31
    2782:	4313      	orrs	r3, r2
    2784:	0864      	lsrs	r4, r4, #1
    2786:	485a      	ldr	r0, [pc, #360]	; (28f0 <__aeabi_dmul+0x4f0>)
    2788:	4460      	add	r0, ip
    278a:	2800      	cmp	r0, #0
    278c:	dd4d      	ble.n	282a <__aeabi_dmul+0x42a>
    278e:	075a      	lsls	r2, r3, #29
    2790:	d009      	beq.n	27a6 <__aeabi_dmul+0x3a6>
    2792:	220f      	movs	r2, #15
    2794:	401a      	ands	r2, r3
    2796:	2a04      	cmp	r2, #4
    2798:	d005      	beq.n	27a6 <__aeabi_dmul+0x3a6>
    279a:	1d1a      	adds	r2, r3, #4
    279c:	429a      	cmp	r2, r3
    279e:	419b      	sbcs	r3, r3
    27a0:	425b      	negs	r3, r3
    27a2:	18e4      	adds	r4, r4, r3
    27a4:	0013      	movs	r3, r2
    27a6:	01e2      	lsls	r2, r4, #7
    27a8:	d504      	bpl.n	27b4 <__aeabi_dmul+0x3b4>
    27aa:	2080      	movs	r0, #128	; 0x80
    27ac:	4a51      	ldr	r2, [pc, #324]	; (28f4 <__aeabi_dmul+0x4f4>)
    27ae:	00c0      	lsls	r0, r0, #3
    27b0:	4014      	ands	r4, r2
    27b2:	4460      	add	r0, ip
    27b4:	4a50      	ldr	r2, [pc, #320]	; (28f8 <__aeabi_dmul+0x4f8>)
    27b6:	4290      	cmp	r0, r2
    27b8:	dd00      	ble.n	27bc <__aeabi_dmul+0x3bc>
    27ba:	e6e3      	b.n	2584 <__aeabi_dmul+0x184>
    27bc:	2501      	movs	r5, #1
    27be:	08db      	lsrs	r3, r3, #3
    27c0:	0762      	lsls	r2, r4, #29
    27c2:	431a      	orrs	r2, r3
    27c4:	0264      	lsls	r4, r4, #9
    27c6:	9b01      	ldr	r3, [sp, #4]
    27c8:	4691      	mov	r9, r2
    27ca:	0b22      	lsrs	r2, r4, #12
    27cc:	0544      	lsls	r4, r0, #21
    27ce:	0d64      	lsrs	r4, r4, #21
    27d0:	401d      	ands	r5, r3
    27d2:	e67c      	b.n	24ce <__aeabi_dmul+0xce>
    27d4:	2280      	movs	r2, #128	; 0x80
    27d6:	4659      	mov	r1, fp
    27d8:	0312      	lsls	r2, r2, #12
    27da:	4211      	tst	r1, r2
    27dc:	d008      	beq.n	27f0 <__aeabi_dmul+0x3f0>
    27de:	4214      	tst	r4, r2
    27e0:	d106      	bne.n	27f0 <__aeabi_dmul+0x3f0>
    27e2:	4322      	orrs	r2, r4
    27e4:	0312      	lsls	r2, r2, #12
    27e6:	0b12      	lsrs	r2, r2, #12
    27e8:	4645      	mov	r5, r8
    27ea:	4699      	mov	r9, r3
    27ec:	4c43      	ldr	r4, [pc, #268]	; (28fc <__aeabi_dmul+0x4fc>)
    27ee:	e66e      	b.n	24ce <__aeabi_dmul+0xce>
    27f0:	465b      	mov	r3, fp
    27f2:	431a      	orrs	r2, r3
    27f4:	0312      	lsls	r2, r2, #12
    27f6:	0b12      	lsrs	r2, r2, #12
    27f8:	4c40      	ldr	r4, [pc, #256]	; (28fc <__aeabi_dmul+0x4fc>)
    27fa:	e668      	b.n	24ce <__aeabi_dmul+0xce>
    27fc:	0003      	movs	r3, r0
    27fe:	4654      	mov	r4, sl
    2800:	3b28      	subs	r3, #40	; 0x28
    2802:	409c      	lsls	r4, r3
    2804:	2300      	movs	r3, #0
    2806:	e6b9      	b.n	257c <__aeabi_dmul+0x17c>
    2808:	f000 f9cc 	bl	2ba4 <__clzsi2>
    280c:	3020      	adds	r0, #32
    280e:	e6a6      	b.n	255e <__aeabi_dmul+0x15e>
    2810:	0003      	movs	r3, r0
    2812:	3b28      	subs	r3, #40	; 0x28
    2814:	409f      	lsls	r7, r3
    2816:	2300      	movs	r3, #0
    2818:	46bb      	mov	fp, r7
    281a:	4699      	mov	r9, r3
    281c:	e68a      	b.n	2534 <__aeabi_dmul+0x134>
    281e:	f000 f9c1 	bl	2ba4 <__clzsi2>
    2822:	3020      	adds	r0, #32
    2824:	e674      	b.n	2510 <__aeabi_dmul+0x110>
    2826:	46b4      	mov	ip, r6
    2828:	e7ad      	b.n	2786 <__aeabi_dmul+0x386>
    282a:	2501      	movs	r5, #1
    282c:	1a2a      	subs	r2, r5, r0
    282e:	2a38      	cmp	r2, #56	; 0x38
    2830:	dd06      	ble.n	2840 <__aeabi_dmul+0x440>
    2832:	9b01      	ldr	r3, [sp, #4]
    2834:	2400      	movs	r4, #0
    2836:	401d      	ands	r5, r3
    2838:	2300      	movs	r3, #0
    283a:	2200      	movs	r2, #0
    283c:	4699      	mov	r9, r3
    283e:	e646      	b.n	24ce <__aeabi_dmul+0xce>
    2840:	2a1f      	cmp	r2, #31
    2842:	dc21      	bgt.n	2888 <__aeabi_dmul+0x488>
    2844:	2520      	movs	r5, #32
    2846:	0020      	movs	r0, r4
    2848:	1aad      	subs	r5, r5, r2
    284a:	001e      	movs	r6, r3
    284c:	40ab      	lsls	r3, r5
    284e:	40a8      	lsls	r0, r5
    2850:	40d6      	lsrs	r6, r2
    2852:	1e5d      	subs	r5, r3, #1
    2854:	41ab      	sbcs	r3, r5
    2856:	4330      	orrs	r0, r6
    2858:	4318      	orrs	r0, r3
    285a:	40d4      	lsrs	r4, r2
    285c:	0743      	lsls	r3, r0, #29
    285e:	d009      	beq.n	2874 <__aeabi_dmul+0x474>
    2860:	230f      	movs	r3, #15
    2862:	4003      	ands	r3, r0
    2864:	2b04      	cmp	r3, #4
    2866:	d005      	beq.n	2874 <__aeabi_dmul+0x474>
    2868:	0003      	movs	r3, r0
    286a:	1d18      	adds	r0, r3, #4
    286c:	4298      	cmp	r0, r3
    286e:	419b      	sbcs	r3, r3
    2870:	425b      	negs	r3, r3
    2872:	18e4      	adds	r4, r4, r3
    2874:	0223      	lsls	r3, r4, #8
    2876:	d521      	bpl.n	28bc <__aeabi_dmul+0x4bc>
    2878:	2501      	movs	r5, #1
    287a:	9b01      	ldr	r3, [sp, #4]
    287c:	2401      	movs	r4, #1
    287e:	401d      	ands	r5, r3
    2880:	2300      	movs	r3, #0
    2882:	2200      	movs	r2, #0
    2884:	4699      	mov	r9, r3
    2886:	e622      	b.n	24ce <__aeabi_dmul+0xce>
    2888:	251f      	movs	r5, #31
    288a:	0021      	movs	r1, r4
    288c:	426d      	negs	r5, r5
    288e:	1a28      	subs	r0, r5, r0
    2890:	40c1      	lsrs	r1, r0
    2892:	0008      	movs	r0, r1
    2894:	2a20      	cmp	r2, #32
    2896:	d01d      	beq.n	28d4 <__aeabi_dmul+0x4d4>
    2898:	355f      	adds	r5, #95	; 0x5f
    289a:	1aaa      	subs	r2, r5, r2
    289c:	4094      	lsls	r4, r2
    289e:	4323      	orrs	r3, r4
    28a0:	1e5c      	subs	r4, r3, #1
    28a2:	41a3      	sbcs	r3, r4
    28a4:	2507      	movs	r5, #7
    28a6:	4303      	orrs	r3, r0
    28a8:	401d      	ands	r5, r3
    28aa:	2200      	movs	r2, #0
    28ac:	2d00      	cmp	r5, #0
    28ae:	d009      	beq.n	28c4 <__aeabi_dmul+0x4c4>
    28b0:	220f      	movs	r2, #15
    28b2:	2400      	movs	r4, #0
    28b4:	401a      	ands	r2, r3
    28b6:	0018      	movs	r0, r3
    28b8:	2a04      	cmp	r2, #4
    28ba:	d1d6      	bne.n	286a <__aeabi_dmul+0x46a>
    28bc:	0003      	movs	r3, r0
    28be:	0765      	lsls	r5, r4, #29
    28c0:	0264      	lsls	r4, r4, #9
    28c2:	0b22      	lsrs	r2, r4, #12
    28c4:	08db      	lsrs	r3, r3, #3
    28c6:	432b      	orrs	r3, r5
    28c8:	2501      	movs	r5, #1
    28ca:	4699      	mov	r9, r3
    28cc:	9b01      	ldr	r3, [sp, #4]
    28ce:	2400      	movs	r4, #0
    28d0:	401d      	ands	r5, r3
    28d2:	e5fc      	b.n	24ce <__aeabi_dmul+0xce>
    28d4:	2400      	movs	r4, #0
    28d6:	e7e2      	b.n	289e <__aeabi_dmul+0x49e>
    28d8:	2280      	movs	r2, #128	; 0x80
    28da:	2501      	movs	r5, #1
    28dc:	0312      	lsls	r2, r2, #12
    28de:	4322      	orrs	r2, r4
    28e0:	9901      	ldr	r1, [sp, #4]
    28e2:	0312      	lsls	r2, r2, #12
    28e4:	0b12      	lsrs	r2, r2, #12
    28e6:	400d      	ands	r5, r1
    28e8:	4699      	mov	r9, r3
    28ea:	4c04      	ldr	r4, [pc, #16]	; (28fc <__aeabi_dmul+0x4fc>)
    28ec:	e5ef      	b.n	24ce <__aeabi_dmul+0xce>
    28ee:	46c0      	nop			; (mov r8, r8)
    28f0:	000003ff 	.word	0x000003ff
    28f4:	feffffff 	.word	0xfeffffff
    28f8:	000007fe 	.word	0x000007fe
    28fc:	000007ff 	.word	0x000007ff

00002900 <__aeabi_d2iz>:
    2900:	b530      	push	{r4, r5, lr}
    2902:	4d13      	ldr	r5, [pc, #76]	; (2950 <__aeabi_d2iz+0x50>)
    2904:	030a      	lsls	r2, r1, #12
    2906:	004b      	lsls	r3, r1, #1
    2908:	0b12      	lsrs	r2, r2, #12
    290a:	0d5b      	lsrs	r3, r3, #21
    290c:	0fc9      	lsrs	r1, r1, #31
    290e:	2400      	movs	r4, #0
    2910:	42ab      	cmp	r3, r5
    2912:	dd10      	ble.n	2936 <__aeabi_d2iz+0x36>
    2914:	4c0f      	ldr	r4, [pc, #60]	; (2954 <__aeabi_d2iz+0x54>)
    2916:	42a3      	cmp	r3, r4
    2918:	dc0f      	bgt.n	293a <__aeabi_d2iz+0x3a>
    291a:	2480      	movs	r4, #128	; 0x80
    291c:	4d0e      	ldr	r5, [pc, #56]	; (2958 <__aeabi_d2iz+0x58>)
    291e:	0364      	lsls	r4, r4, #13
    2920:	4322      	orrs	r2, r4
    2922:	1aed      	subs	r5, r5, r3
    2924:	2d1f      	cmp	r5, #31
    2926:	dd0b      	ble.n	2940 <__aeabi_d2iz+0x40>
    2928:	480c      	ldr	r0, [pc, #48]	; (295c <__aeabi_d2iz+0x5c>)
    292a:	1ac3      	subs	r3, r0, r3
    292c:	40da      	lsrs	r2, r3
    292e:	4254      	negs	r4, r2
    2930:	2900      	cmp	r1, #0
    2932:	d100      	bne.n	2936 <__aeabi_d2iz+0x36>
    2934:	0014      	movs	r4, r2
    2936:	0020      	movs	r0, r4
    2938:	bd30      	pop	{r4, r5, pc}
    293a:	4b09      	ldr	r3, [pc, #36]	; (2960 <__aeabi_d2iz+0x60>)
    293c:	18cc      	adds	r4, r1, r3
    293e:	e7fa      	b.n	2936 <__aeabi_d2iz+0x36>
    2940:	4c08      	ldr	r4, [pc, #32]	; (2964 <__aeabi_d2iz+0x64>)
    2942:	40e8      	lsrs	r0, r5
    2944:	46a4      	mov	ip, r4
    2946:	4463      	add	r3, ip
    2948:	409a      	lsls	r2, r3
    294a:	4302      	orrs	r2, r0
    294c:	e7ef      	b.n	292e <__aeabi_d2iz+0x2e>
    294e:	46c0      	nop			; (mov r8, r8)
    2950:	000003fe 	.word	0x000003fe
    2954:	0000041d 	.word	0x0000041d
    2958:	00000433 	.word	0x00000433
    295c:	00000413 	.word	0x00000413
    2960:	7fffffff 	.word	0x7fffffff
    2964:	fffffbed 	.word	0xfffffbed

00002968 <__aeabi_i2d>:
    2968:	b570      	push	{r4, r5, r6, lr}
    296a:	2800      	cmp	r0, #0
    296c:	d030      	beq.n	29d0 <__aeabi_i2d+0x68>
    296e:	17c3      	asrs	r3, r0, #31
    2970:	18c4      	adds	r4, r0, r3
    2972:	405c      	eors	r4, r3
    2974:	0fc5      	lsrs	r5, r0, #31
    2976:	0020      	movs	r0, r4
    2978:	f000 f914 	bl	2ba4 <__clzsi2>
    297c:	4b17      	ldr	r3, [pc, #92]	; (29dc <__aeabi_i2d+0x74>)
    297e:	4a18      	ldr	r2, [pc, #96]	; (29e0 <__aeabi_i2d+0x78>)
    2980:	1a1b      	subs	r3, r3, r0
    2982:	1ad2      	subs	r2, r2, r3
    2984:	2a1f      	cmp	r2, #31
    2986:	dd18      	ble.n	29ba <__aeabi_i2d+0x52>
    2988:	4a16      	ldr	r2, [pc, #88]	; (29e4 <__aeabi_i2d+0x7c>)
    298a:	1ad2      	subs	r2, r2, r3
    298c:	4094      	lsls	r4, r2
    298e:	2200      	movs	r2, #0
    2990:	0324      	lsls	r4, r4, #12
    2992:	055b      	lsls	r3, r3, #21
    2994:	0b24      	lsrs	r4, r4, #12
    2996:	0d5b      	lsrs	r3, r3, #21
    2998:	2100      	movs	r1, #0
    299a:	0010      	movs	r0, r2
    299c:	0324      	lsls	r4, r4, #12
    299e:	0d0a      	lsrs	r2, r1, #20
    29a0:	0b24      	lsrs	r4, r4, #12
    29a2:	0512      	lsls	r2, r2, #20
    29a4:	4322      	orrs	r2, r4
    29a6:	4c10      	ldr	r4, [pc, #64]	; (29e8 <__aeabi_i2d+0x80>)
    29a8:	051b      	lsls	r3, r3, #20
    29aa:	4022      	ands	r2, r4
    29ac:	4313      	orrs	r3, r2
    29ae:	005b      	lsls	r3, r3, #1
    29b0:	07ed      	lsls	r5, r5, #31
    29b2:	085b      	lsrs	r3, r3, #1
    29b4:	432b      	orrs	r3, r5
    29b6:	0019      	movs	r1, r3
    29b8:	bd70      	pop	{r4, r5, r6, pc}
    29ba:	0021      	movs	r1, r4
    29bc:	4091      	lsls	r1, r2
    29be:	000a      	movs	r2, r1
    29c0:	210b      	movs	r1, #11
    29c2:	1a08      	subs	r0, r1, r0
    29c4:	40c4      	lsrs	r4, r0
    29c6:	055b      	lsls	r3, r3, #21
    29c8:	0324      	lsls	r4, r4, #12
    29ca:	0b24      	lsrs	r4, r4, #12
    29cc:	0d5b      	lsrs	r3, r3, #21
    29ce:	e7e3      	b.n	2998 <__aeabi_i2d+0x30>
    29d0:	2500      	movs	r5, #0
    29d2:	2300      	movs	r3, #0
    29d4:	2400      	movs	r4, #0
    29d6:	2200      	movs	r2, #0
    29d8:	e7de      	b.n	2998 <__aeabi_i2d+0x30>
    29da:	46c0      	nop			; (mov r8, r8)
    29dc:	0000041e 	.word	0x0000041e
    29e0:	00000433 	.word	0x00000433
    29e4:	00000413 	.word	0x00000413
    29e8:	800fffff 	.word	0x800fffff

000029ec <__aeabi_f2d>:
    29ec:	0041      	lsls	r1, r0, #1
    29ee:	0e09      	lsrs	r1, r1, #24
    29f0:	1c4b      	adds	r3, r1, #1
    29f2:	b570      	push	{r4, r5, r6, lr}
    29f4:	b2db      	uxtb	r3, r3
    29f6:	0246      	lsls	r6, r0, #9
    29f8:	0a75      	lsrs	r5, r6, #9
    29fa:	0fc4      	lsrs	r4, r0, #31
    29fc:	2b01      	cmp	r3, #1
    29fe:	dd14      	ble.n	2a2a <__aeabi_f2d+0x3e>
    2a00:	23e0      	movs	r3, #224	; 0xe0
    2a02:	009b      	lsls	r3, r3, #2
    2a04:	076d      	lsls	r5, r5, #29
    2a06:	0b36      	lsrs	r6, r6, #12
    2a08:	18cb      	adds	r3, r1, r3
    2a0a:	2100      	movs	r1, #0
    2a0c:	0d0a      	lsrs	r2, r1, #20
    2a0e:	0028      	movs	r0, r5
    2a10:	0512      	lsls	r2, r2, #20
    2a12:	4d1c      	ldr	r5, [pc, #112]	; (2a84 <__aeabi_f2d+0x98>)
    2a14:	4332      	orrs	r2, r6
    2a16:	055b      	lsls	r3, r3, #21
    2a18:	402a      	ands	r2, r5
    2a1a:	085b      	lsrs	r3, r3, #1
    2a1c:	4313      	orrs	r3, r2
    2a1e:	005b      	lsls	r3, r3, #1
    2a20:	07e4      	lsls	r4, r4, #31
    2a22:	085b      	lsrs	r3, r3, #1
    2a24:	4323      	orrs	r3, r4
    2a26:	0019      	movs	r1, r3
    2a28:	bd70      	pop	{r4, r5, r6, pc}
    2a2a:	2900      	cmp	r1, #0
    2a2c:	d114      	bne.n	2a58 <__aeabi_f2d+0x6c>
    2a2e:	2d00      	cmp	r5, #0
    2a30:	d01e      	beq.n	2a70 <__aeabi_f2d+0x84>
    2a32:	0028      	movs	r0, r5
    2a34:	f000 f8b6 	bl	2ba4 <__clzsi2>
    2a38:	280a      	cmp	r0, #10
    2a3a:	dc1c      	bgt.n	2a76 <__aeabi_f2d+0x8a>
    2a3c:	230b      	movs	r3, #11
    2a3e:	002a      	movs	r2, r5
    2a40:	1a1b      	subs	r3, r3, r0
    2a42:	40da      	lsrs	r2, r3
    2a44:	0003      	movs	r3, r0
    2a46:	3315      	adds	r3, #21
    2a48:	409d      	lsls	r5, r3
    2a4a:	4b0f      	ldr	r3, [pc, #60]	; (2a88 <__aeabi_f2d+0x9c>)
    2a4c:	0312      	lsls	r2, r2, #12
    2a4e:	1a1b      	subs	r3, r3, r0
    2a50:	055b      	lsls	r3, r3, #21
    2a52:	0b16      	lsrs	r6, r2, #12
    2a54:	0d5b      	lsrs	r3, r3, #21
    2a56:	e7d8      	b.n	2a0a <__aeabi_f2d+0x1e>
    2a58:	2d00      	cmp	r5, #0
    2a5a:	d006      	beq.n	2a6a <__aeabi_f2d+0x7e>
    2a5c:	0b32      	lsrs	r2, r6, #12
    2a5e:	2680      	movs	r6, #128	; 0x80
    2a60:	0336      	lsls	r6, r6, #12
    2a62:	076d      	lsls	r5, r5, #29
    2a64:	4316      	orrs	r6, r2
    2a66:	4b09      	ldr	r3, [pc, #36]	; (2a8c <__aeabi_f2d+0xa0>)
    2a68:	e7cf      	b.n	2a0a <__aeabi_f2d+0x1e>
    2a6a:	4b08      	ldr	r3, [pc, #32]	; (2a8c <__aeabi_f2d+0xa0>)
    2a6c:	2600      	movs	r6, #0
    2a6e:	e7cc      	b.n	2a0a <__aeabi_f2d+0x1e>
    2a70:	2300      	movs	r3, #0
    2a72:	2600      	movs	r6, #0
    2a74:	e7c9      	b.n	2a0a <__aeabi_f2d+0x1e>
    2a76:	0003      	movs	r3, r0
    2a78:	002a      	movs	r2, r5
    2a7a:	3b0b      	subs	r3, #11
    2a7c:	409a      	lsls	r2, r3
    2a7e:	2500      	movs	r5, #0
    2a80:	e7e3      	b.n	2a4a <__aeabi_f2d+0x5e>
    2a82:	46c0      	nop			; (mov r8, r8)
    2a84:	800fffff 	.word	0x800fffff
    2a88:	00000389 	.word	0x00000389
    2a8c:	000007ff 	.word	0x000007ff

00002a90 <__aeabi_d2f>:
    2a90:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a92:	004c      	lsls	r4, r1, #1
    2a94:	0d64      	lsrs	r4, r4, #21
    2a96:	030b      	lsls	r3, r1, #12
    2a98:	1c62      	adds	r2, r4, #1
    2a9a:	0f45      	lsrs	r5, r0, #29
    2a9c:	0a5b      	lsrs	r3, r3, #9
    2a9e:	0552      	lsls	r2, r2, #21
    2aa0:	432b      	orrs	r3, r5
    2aa2:	0fc9      	lsrs	r1, r1, #31
    2aa4:	00c5      	lsls	r5, r0, #3
    2aa6:	0d52      	lsrs	r2, r2, #21
    2aa8:	2a01      	cmp	r2, #1
    2aaa:	dd28      	ble.n	2afe <__aeabi_d2f+0x6e>
    2aac:	4a3a      	ldr	r2, [pc, #232]	; (2b98 <__aeabi_d2f+0x108>)
    2aae:	18a6      	adds	r6, r4, r2
    2ab0:	2efe      	cmp	r6, #254	; 0xfe
    2ab2:	dc1b      	bgt.n	2aec <__aeabi_d2f+0x5c>
    2ab4:	2e00      	cmp	r6, #0
    2ab6:	dd3e      	ble.n	2b36 <__aeabi_d2f+0xa6>
    2ab8:	0180      	lsls	r0, r0, #6
    2aba:	0002      	movs	r2, r0
    2abc:	1e50      	subs	r0, r2, #1
    2abe:	4182      	sbcs	r2, r0
    2ac0:	0f6d      	lsrs	r5, r5, #29
    2ac2:	432a      	orrs	r2, r5
    2ac4:	00db      	lsls	r3, r3, #3
    2ac6:	4313      	orrs	r3, r2
    2ac8:	075a      	lsls	r2, r3, #29
    2aca:	d004      	beq.n	2ad6 <__aeabi_d2f+0x46>
    2acc:	220f      	movs	r2, #15
    2ace:	401a      	ands	r2, r3
    2ad0:	2a04      	cmp	r2, #4
    2ad2:	d000      	beq.n	2ad6 <__aeabi_d2f+0x46>
    2ad4:	3304      	adds	r3, #4
    2ad6:	2280      	movs	r2, #128	; 0x80
    2ad8:	04d2      	lsls	r2, r2, #19
    2ada:	401a      	ands	r2, r3
    2adc:	d05a      	beq.n	2b94 <__aeabi_d2f+0x104>
    2ade:	3601      	adds	r6, #1
    2ae0:	2eff      	cmp	r6, #255	; 0xff
    2ae2:	d003      	beq.n	2aec <__aeabi_d2f+0x5c>
    2ae4:	019b      	lsls	r3, r3, #6
    2ae6:	0a5b      	lsrs	r3, r3, #9
    2ae8:	b2f4      	uxtb	r4, r6
    2aea:	e001      	b.n	2af0 <__aeabi_d2f+0x60>
    2aec:	24ff      	movs	r4, #255	; 0xff
    2aee:	2300      	movs	r3, #0
    2af0:	0258      	lsls	r0, r3, #9
    2af2:	05e4      	lsls	r4, r4, #23
    2af4:	0a40      	lsrs	r0, r0, #9
    2af6:	07c9      	lsls	r1, r1, #31
    2af8:	4320      	orrs	r0, r4
    2afa:	4308      	orrs	r0, r1
    2afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2afe:	2c00      	cmp	r4, #0
    2b00:	d007      	beq.n	2b12 <__aeabi_d2f+0x82>
    2b02:	431d      	orrs	r5, r3
    2b04:	d0f2      	beq.n	2aec <__aeabi_d2f+0x5c>
    2b06:	2080      	movs	r0, #128	; 0x80
    2b08:	00db      	lsls	r3, r3, #3
    2b0a:	0480      	lsls	r0, r0, #18
    2b0c:	4303      	orrs	r3, r0
    2b0e:	26ff      	movs	r6, #255	; 0xff
    2b10:	e7da      	b.n	2ac8 <__aeabi_d2f+0x38>
    2b12:	432b      	orrs	r3, r5
    2b14:	d003      	beq.n	2b1e <__aeabi_d2f+0x8e>
    2b16:	2305      	movs	r3, #5
    2b18:	08db      	lsrs	r3, r3, #3
    2b1a:	2cff      	cmp	r4, #255	; 0xff
    2b1c:	d003      	beq.n	2b26 <__aeabi_d2f+0x96>
    2b1e:	025b      	lsls	r3, r3, #9
    2b20:	0a5b      	lsrs	r3, r3, #9
    2b22:	b2e4      	uxtb	r4, r4
    2b24:	e7e4      	b.n	2af0 <__aeabi_d2f+0x60>
    2b26:	2b00      	cmp	r3, #0
    2b28:	d032      	beq.n	2b90 <__aeabi_d2f+0x100>
    2b2a:	2080      	movs	r0, #128	; 0x80
    2b2c:	03c0      	lsls	r0, r0, #15
    2b2e:	4303      	orrs	r3, r0
    2b30:	025b      	lsls	r3, r3, #9
    2b32:	0a5b      	lsrs	r3, r3, #9
    2b34:	e7dc      	b.n	2af0 <__aeabi_d2f+0x60>
    2b36:	0032      	movs	r2, r6
    2b38:	3217      	adds	r2, #23
    2b3a:	db14      	blt.n	2b66 <__aeabi_d2f+0xd6>
    2b3c:	2280      	movs	r2, #128	; 0x80
    2b3e:	271e      	movs	r7, #30
    2b40:	0412      	lsls	r2, r2, #16
    2b42:	4313      	orrs	r3, r2
    2b44:	1bbf      	subs	r7, r7, r6
    2b46:	2f1f      	cmp	r7, #31
    2b48:	dc0f      	bgt.n	2b6a <__aeabi_d2f+0xda>
    2b4a:	4a14      	ldr	r2, [pc, #80]	; (2b9c <__aeabi_d2f+0x10c>)
    2b4c:	4694      	mov	ip, r2
    2b4e:	4464      	add	r4, ip
    2b50:	002a      	movs	r2, r5
    2b52:	40a5      	lsls	r5, r4
    2b54:	002e      	movs	r6, r5
    2b56:	40a3      	lsls	r3, r4
    2b58:	1e75      	subs	r5, r6, #1
    2b5a:	41ae      	sbcs	r6, r5
    2b5c:	40fa      	lsrs	r2, r7
    2b5e:	4333      	orrs	r3, r6
    2b60:	4313      	orrs	r3, r2
    2b62:	2600      	movs	r6, #0
    2b64:	e7b0      	b.n	2ac8 <__aeabi_d2f+0x38>
    2b66:	2400      	movs	r4, #0
    2b68:	e7d5      	b.n	2b16 <__aeabi_d2f+0x86>
    2b6a:	2202      	movs	r2, #2
    2b6c:	4252      	negs	r2, r2
    2b6e:	1b96      	subs	r6, r2, r6
    2b70:	001a      	movs	r2, r3
    2b72:	40f2      	lsrs	r2, r6
    2b74:	2f20      	cmp	r7, #32
    2b76:	d009      	beq.n	2b8c <__aeabi_d2f+0xfc>
    2b78:	4809      	ldr	r0, [pc, #36]	; (2ba0 <__aeabi_d2f+0x110>)
    2b7a:	4684      	mov	ip, r0
    2b7c:	4464      	add	r4, ip
    2b7e:	40a3      	lsls	r3, r4
    2b80:	432b      	orrs	r3, r5
    2b82:	1e5d      	subs	r5, r3, #1
    2b84:	41ab      	sbcs	r3, r5
    2b86:	2600      	movs	r6, #0
    2b88:	4313      	orrs	r3, r2
    2b8a:	e79d      	b.n	2ac8 <__aeabi_d2f+0x38>
    2b8c:	2300      	movs	r3, #0
    2b8e:	e7f7      	b.n	2b80 <__aeabi_d2f+0xf0>
    2b90:	2300      	movs	r3, #0
    2b92:	e7ad      	b.n	2af0 <__aeabi_d2f+0x60>
    2b94:	0034      	movs	r4, r6
    2b96:	e7bf      	b.n	2b18 <__aeabi_d2f+0x88>
    2b98:	fffffc80 	.word	0xfffffc80
    2b9c:	fffffc82 	.word	0xfffffc82
    2ba0:	fffffca2 	.word	0xfffffca2

00002ba4 <__clzsi2>:
    2ba4:	211c      	movs	r1, #28
    2ba6:	2301      	movs	r3, #1
    2ba8:	041b      	lsls	r3, r3, #16
    2baa:	4298      	cmp	r0, r3
    2bac:	d301      	bcc.n	2bb2 <__clzsi2+0xe>
    2bae:	0c00      	lsrs	r0, r0, #16
    2bb0:	3910      	subs	r1, #16
    2bb2:	0a1b      	lsrs	r3, r3, #8
    2bb4:	4298      	cmp	r0, r3
    2bb6:	d301      	bcc.n	2bbc <__clzsi2+0x18>
    2bb8:	0a00      	lsrs	r0, r0, #8
    2bba:	3908      	subs	r1, #8
    2bbc:	091b      	lsrs	r3, r3, #4
    2bbe:	4298      	cmp	r0, r3
    2bc0:	d301      	bcc.n	2bc6 <__clzsi2+0x22>
    2bc2:	0900      	lsrs	r0, r0, #4
    2bc4:	3904      	subs	r1, #4
    2bc6:	a202      	add	r2, pc, #8	; (adr r2, 2bd0 <__clzsi2+0x2c>)
    2bc8:	5c10      	ldrb	r0, [r2, r0]
    2bca:	1840      	adds	r0, r0, r1
    2bcc:	4770      	bx	lr
    2bce:	46c0      	nop			; (mov r8, r8)
    2bd0:	02020304 	.word	0x02020304
    2bd4:	01010101 	.word	0x01010101
	...

00002be0 <gcvt>:
    2be0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2be2:	001c      	movs	r4, r3
    2be4:	b085      	sub	sp, #20
    2be6:	2300      	movs	r3, #0
    2be8:	0015      	movs	r5, r2
    2bea:	2200      	movs	r2, #0
    2bec:	0006      	movs	r6, r0
    2bee:	000f      	movs	r7, r1
    2bf0:	f001 fcfe 	bl	45f0 <__aeabi_dcmplt>
    2bf4:	0023      	movs	r3, r4
    2bf6:	2800      	cmp	r0, #0
    2bf8:	d003      	beq.n	2c02 <gcvt+0x22>
    2bfa:	232d      	movs	r3, #45	; 0x2d
    2bfc:	3d01      	subs	r5, #1
    2bfe:	7023      	strb	r3, [r4, #0]
    2c00:	1c63      	adds	r3, r4, #1
    2c02:	2200      	movs	r2, #0
    2c04:	4908      	ldr	r1, [pc, #32]	; (2c28 <gcvt+0x48>)
    2c06:	9203      	str	r2, [sp, #12]
    2c08:	3267      	adds	r2, #103	; 0x67
    2c0a:	9202      	str	r2, [sp, #8]
    2c0c:	9301      	str	r3, [sp, #4]
    2c0e:	9500      	str	r5, [sp, #0]
    2c10:	003b      	movs	r3, r7
    2c12:	0032      	movs	r2, r6
    2c14:	6808      	ldr	r0, [r1, #0]
    2c16:	f000 f90f 	bl	2e38 <_gcvt>
    2c1a:	1e43      	subs	r3, r0, #1
    2c1c:	4198      	sbcs	r0, r3
    2c1e:	4240      	negs	r0, r0
    2c20:	4004      	ands	r4, r0
    2c22:	0020      	movs	r0, r4
    2c24:	b005      	add	sp, #20
    2c26:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c28:	20000008 	.word	0x20000008

00002c2c <gcvtf>:
    2c2c:	b570      	push	{r4, r5, r6, lr}
    2c2e:	0015      	movs	r5, r2
    2c30:	000c      	movs	r4, r1
    2c32:	f7ff fedb 	bl	29ec <__aeabi_f2d>
    2c36:	002b      	movs	r3, r5
    2c38:	0022      	movs	r2, r4
    2c3a:	f7ff ffd1 	bl	2be0 <gcvt>
    2c3e:	bd70      	pop	{r4, r5, r6, pc}

00002c40 <__libc_init_array>:
    2c40:	b570      	push	{r4, r5, r6, lr}
    2c42:	2600      	movs	r6, #0
    2c44:	4d0c      	ldr	r5, [pc, #48]	; (2c78 <__libc_init_array+0x38>)
    2c46:	4c0d      	ldr	r4, [pc, #52]	; (2c7c <__libc_init_array+0x3c>)
    2c48:	1b64      	subs	r4, r4, r5
    2c4a:	10a4      	asrs	r4, r4, #2
    2c4c:	42a6      	cmp	r6, r4
    2c4e:	d109      	bne.n	2c64 <__libc_init_array+0x24>
    2c50:	2600      	movs	r6, #0
    2c52:	f002 fa5b 	bl	510c <_init>
    2c56:	4d0a      	ldr	r5, [pc, #40]	; (2c80 <__libc_init_array+0x40>)
    2c58:	4c0a      	ldr	r4, [pc, #40]	; (2c84 <__libc_init_array+0x44>)
    2c5a:	1b64      	subs	r4, r4, r5
    2c5c:	10a4      	asrs	r4, r4, #2
    2c5e:	42a6      	cmp	r6, r4
    2c60:	d105      	bne.n	2c6e <__libc_init_array+0x2e>
    2c62:	bd70      	pop	{r4, r5, r6, pc}
    2c64:	00b3      	lsls	r3, r6, #2
    2c66:	58eb      	ldr	r3, [r5, r3]
    2c68:	4798      	blx	r3
    2c6a:	3601      	adds	r6, #1
    2c6c:	e7ee      	b.n	2c4c <__libc_init_array+0xc>
    2c6e:	00b3      	lsls	r3, r6, #2
    2c70:	58eb      	ldr	r3, [r5, r3]
    2c72:	4798      	blx	r3
    2c74:	3601      	adds	r6, #1
    2c76:	e7f2      	b.n	2c5e <__libc_init_array+0x1e>
    2c78:	00005118 	.word	0x00005118
    2c7c:	00005118 	.word	0x00005118
    2c80:	00005118 	.word	0x00005118
    2c84:	0000511c 	.word	0x0000511c

00002c88 <__itoa>:
    2c88:	1e93      	subs	r3, r2, #2
    2c8a:	b510      	push	{r4, lr}
    2c8c:	000c      	movs	r4, r1
    2c8e:	2b22      	cmp	r3, #34	; 0x22
    2c90:	d904      	bls.n	2c9c <__itoa+0x14>
    2c92:	2300      	movs	r3, #0
    2c94:	001c      	movs	r4, r3
    2c96:	700b      	strb	r3, [r1, #0]
    2c98:	0020      	movs	r0, r4
    2c9a:	bd10      	pop	{r4, pc}
    2c9c:	2a0a      	cmp	r2, #10
    2c9e:	d109      	bne.n	2cb4 <__itoa+0x2c>
    2ca0:	2800      	cmp	r0, #0
    2ca2:	da07      	bge.n	2cb4 <__itoa+0x2c>
    2ca4:	232d      	movs	r3, #45	; 0x2d
    2ca6:	700b      	strb	r3, [r1, #0]
    2ca8:	2101      	movs	r1, #1
    2caa:	4240      	negs	r0, r0
    2cac:	1861      	adds	r1, r4, r1
    2cae:	f000 f80f 	bl	2cd0 <__utoa>
    2cb2:	e7f1      	b.n	2c98 <__itoa+0x10>
    2cb4:	2100      	movs	r1, #0
    2cb6:	e7f9      	b.n	2cac <__itoa+0x24>

00002cb8 <itoa>:
    2cb8:	b510      	push	{r4, lr}
    2cba:	f7ff ffe5 	bl	2c88 <__itoa>
    2cbe:	bd10      	pop	{r4, pc}

00002cc0 <memset>:
    2cc0:	0003      	movs	r3, r0
    2cc2:	1882      	adds	r2, r0, r2
    2cc4:	4293      	cmp	r3, r2
    2cc6:	d100      	bne.n	2cca <memset+0xa>
    2cc8:	4770      	bx	lr
    2cca:	7019      	strb	r1, [r3, #0]
    2ccc:	3301      	adds	r3, #1
    2cce:	e7f9      	b.n	2cc4 <memset+0x4>

00002cd0 <__utoa>:
    2cd0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2cd2:	0017      	movs	r7, r2
    2cd4:	b08f      	sub	sp, #60	; 0x3c
    2cd6:	2225      	movs	r2, #37	; 0x25
    2cd8:	0006      	movs	r6, r0
    2cda:	000d      	movs	r5, r1
    2cdc:	a804      	add	r0, sp, #16
    2cde:	4918      	ldr	r1, [pc, #96]	; (2d40 <__utoa+0x70>)
    2ce0:	f000 f978 	bl	2fd4 <memcpy>
    2ce4:	aa04      	add	r2, sp, #16
    2ce6:	1ebb      	subs	r3, r7, #2
    2ce8:	2400      	movs	r4, #0
    2cea:	9203      	str	r2, [sp, #12]
    2cec:	2b22      	cmp	r3, #34	; 0x22
    2cee:	d905      	bls.n	2cfc <__utoa+0x2c>
    2cf0:	702c      	strb	r4, [r5, #0]
    2cf2:	0025      	movs	r5, r4
    2cf4:	0028      	movs	r0, r5
    2cf6:	b00f      	add	sp, #60	; 0x3c
    2cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cfa:	9c01      	ldr	r4, [sp, #4]
    2cfc:	1c63      	adds	r3, r4, #1
    2cfe:	9301      	str	r3, [sp, #4]
    2d00:	18eb      	adds	r3, r5, r3
    2d02:	9300      	str	r3, [sp, #0]
    2d04:	0030      	movs	r0, r6
    2d06:	3b01      	subs	r3, #1
    2d08:	0039      	movs	r1, r7
    2d0a:	9302      	str	r3, [sp, #8]
    2d0c:	f7fe fcb4 	bl	1678 <__aeabi_uidivmod>
    2d10:	9b03      	ldr	r3, [sp, #12]
    2d12:	9a02      	ldr	r2, [sp, #8]
    2d14:	5c5b      	ldrb	r3, [r3, r1]
    2d16:	0030      	movs	r0, r6
    2d18:	7013      	strb	r3, [r2, #0]
    2d1a:	0039      	movs	r1, r7
    2d1c:	f7fe fc26 	bl	156c <__udivsi3>
    2d20:	1e06      	subs	r6, r0, #0
    2d22:	d1ea      	bne.n	2cfa <__utoa+0x2a>
    2d24:	9b00      	ldr	r3, [sp, #0]
    2d26:	7018      	strb	r0, [r3, #0]
    2d28:	002b      	movs	r3, r5
    2d2a:	1b5a      	subs	r2, r3, r5
    2d2c:	4294      	cmp	r4, r2
    2d2e:	dde1      	ble.n	2cf4 <__utoa+0x24>
    2d30:	781a      	ldrb	r2, [r3, #0]
    2d32:	5d29      	ldrb	r1, [r5, r4]
    2d34:	7019      	strb	r1, [r3, #0]
    2d36:	552a      	strb	r2, [r5, r4]
    2d38:	3301      	adds	r3, #1
    2d3a:	3c01      	subs	r4, #1
    2d3c:	e7f5      	b.n	2d2a <__utoa+0x5a>
    2d3e:	46c0      	nop			; (mov r8, r8)
    2d40:	00004fd4 	.word	0x00004fd4

00002d44 <print_e>:
    2d44:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d46:	b08b      	sub	sp, #44	; 0x2c
    2d48:	000e      	movs	r6, r1
    2d4a:	a910      	add	r1, sp, #64	; 0x40
    2d4c:	c910      	ldmia	r1!, {r4}
    2d4e:	780d      	ldrb	r5, [r1, #0]
    2d50:	a908      	add	r1, sp, #32
    2d52:	9104      	str	r1, [sp, #16]
    2d54:	a907      	add	r1, sp, #28
    2d56:	9103      	str	r1, [sp, #12]
    2d58:	a909      	add	r1, sp, #36	; 0x24
    2d5a:	9102      	str	r1, [sp, #8]
    2d5c:	1c61      	adds	r1, r4, #1
    2d5e:	9101      	str	r1, [sp, #4]
    2d60:	2102      	movs	r1, #2
    2d62:	9100      	str	r1, [sp, #0]
    2d64:	f000 fd46 	bl	37f4 <_dtoa_r>
    2d68:	9f09      	ldr	r7, [sp, #36]	; 0x24
    2d6a:	4b32      	ldr	r3, [pc, #200]	; (2e34 <print_e+0xf0>)
    2d6c:	429f      	cmp	r7, r3
    2d6e:	d105      	bne.n	2d7c <print_e+0x38>
    2d70:	0001      	movs	r1, r0
    2d72:	0030      	movs	r0, r6
    2d74:	f000 fcb2 	bl	36dc <strcpy>
    2d78:	b00b      	add	sp, #44	; 0x2c
    2d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d7c:	7803      	ldrb	r3, [r0, #0]
    2d7e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    2d80:	1c41      	adds	r1, r0, #1
    2d82:	7033      	strb	r3, [r6, #0]
    2d84:	4322      	orrs	r2, r4
    2d86:	d109      	bne.n	2d9c <print_e+0x58>
    2d88:	0014      	movs	r4, r2
    2d8a:	1c73      	adds	r3, r6, #1
    2d8c:	7808      	ldrb	r0, [r1, #0]
    2d8e:	001a      	movs	r2, r3
    2d90:	2800      	cmp	r0, #0
    2d92:	d107      	bne.n	2da4 <print_e+0x60>
    2d94:	2d67      	cmp	r5, #103	; 0x67
    2d96:	d10c      	bne.n	2db2 <print_e+0x6e>
    2d98:	2565      	movs	r5, #101	; 0x65
    2d9a:	e014      	b.n	2dc6 <print_e+0x82>
    2d9c:	222e      	movs	r2, #46	; 0x2e
    2d9e:	1cb3      	adds	r3, r6, #2
    2da0:	7072      	strb	r2, [r6, #1]
    2da2:	e7f3      	b.n	2d8c <print_e+0x48>
    2da4:	2c00      	cmp	r4, #0
    2da6:	ddf5      	ble.n	2d94 <print_e+0x50>
    2da8:	7018      	strb	r0, [r3, #0]
    2daa:	3101      	adds	r1, #1
    2dac:	3c01      	subs	r4, #1
    2dae:	3301      	adds	r3, #1
    2db0:	e7ec      	b.n	2d8c <print_e+0x48>
    2db2:	2d47      	cmp	r5, #71	; 0x47
    2db4:	d039      	beq.n	2e2a <print_e+0xe6>
    2db6:	0021      	movs	r1, r4
    2db8:	2030      	movs	r0, #48	; 0x30
    2dba:	2900      	cmp	r1, #0
    2dbc:	dc31      	bgt.n	2e22 <print_e+0xde>
    2dbe:	43e3      	mvns	r3, r4
    2dc0:	17db      	asrs	r3, r3, #31
    2dc2:	401c      	ands	r4, r3
    2dc4:	1912      	adds	r2, r2, r4
    2dc6:	7015      	strb	r5, [r2, #0]
    2dc8:	1e7b      	subs	r3, r7, #1
    2dca:	1c95      	adds	r5, r2, #2
    2dcc:	9309      	str	r3, [sp, #36]	; 0x24
    2dce:	002c      	movs	r4, r5
    2dd0:	2b00      	cmp	r3, #0
    2dd2:	da2c      	bge.n	2e2e <print_e+0xea>
    2dd4:	232d      	movs	r3, #45	; 0x2d
    2dd6:	7053      	strb	r3, [r2, #1]
    2dd8:	3b2c      	subs	r3, #44	; 0x2c
    2dda:	1bdf      	subs	r7, r3, r7
    2ddc:	9709      	str	r7, [sp, #36]	; 0x24
    2dde:	9e09      	ldr	r6, [sp, #36]	; 0x24
    2de0:	2e63      	cmp	r6, #99	; 0x63
    2de2:	dd0c      	ble.n	2dfe <print_e+0xba>
    2de4:	2164      	movs	r1, #100	; 0x64
    2de6:	0030      	movs	r0, r6
    2de8:	f001 fb02 	bl	43f0 <__divsi3>
    2dec:	0003      	movs	r3, r0
    2dee:	3330      	adds	r3, #48	; 0x30
    2df0:	702b      	strb	r3, [r5, #0]
    2df2:	2364      	movs	r3, #100	; 0x64
    2df4:	425b      	negs	r3, r3
    2df6:	4358      	muls	r0, r3
    2df8:	1980      	adds	r0, r0, r6
    2dfa:	9009      	str	r0, [sp, #36]	; 0x24
    2dfc:	1c6c      	adds	r4, r5, #1
    2dfe:	9d09      	ldr	r5, [sp, #36]	; 0x24
    2e00:	210a      	movs	r1, #10
    2e02:	0028      	movs	r0, r5
    2e04:	f001 faf4 	bl	43f0 <__divsi3>
    2e08:	0003      	movs	r3, r0
    2e0a:	0002      	movs	r2, r0
    2e0c:	200a      	movs	r0, #10
    2e0e:	4240      	negs	r0, r0
    2e10:	4358      	muls	r0, r3
    2e12:	2300      	movs	r3, #0
    2e14:	1940      	adds	r0, r0, r5
    2e16:	3230      	adds	r2, #48	; 0x30
    2e18:	3030      	adds	r0, #48	; 0x30
    2e1a:	7022      	strb	r2, [r4, #0]
    2e1c:	7060      	strb	r0, [r4, #1]
    2e1e:	70a3      	strb	r3, [r4, #2]
    2e20:	e7aa      	b.n	2d78 <print_e+0x34>
    2e22:	7018      	strb	r0, [r3, #0]
    2e24:	3901      	subs	r1, #1
    2e26:	3301      	adds	r3, #1
    2e28:	e7c7      	b.n	2dba <print_e+0x76>
    2e2a:	2545      	movs	r5, #69	; 0x45
    2e2c:	e7cb      	b.n	2dc6 <print_e+0x82>
    2e2e:	232b      	movs	r3, #43	; 0x2b
    2e30:	7053      	strb	r3, [r2, #1]
    2e32:	e7d4      	b.n	2dde <print_e+0x9a>
    2e34:	0000270f 	.word	0x0000270f

00002e38 <_gcvt>:
    2e38:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e3a:	0015      	movs	r5, r2
    2e3c:	001c      	movs	r4, r3
    2e3e:	b08d      	sub	sp, #52	; 0x34
    2e40:	ab14      	add	r3, sp, #80	; 0x50
    2e42:	781b      	ldrb	r3, [r3, #0]
    2e44:	0006      	movs	r6, r0
    2e46:	9307      	str	r3, [sp, #28]
    2e48:	2200      	movs	r2, #0
    2e4a:	2300      	movs	r3, #0
    2e4c:	0028      	movs	r0, r5
    2e4e:	0021      	movs	r1, r4
    2e50:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    2e52:	f001 fbcd 	bl	45f0 <__aeabi_dcmplt>
    2e56:	2800      	cmp	r0, #0
    2e58:	d002      	beq.n	2e60 <_gcvt+0x28>
    2e5a:	2380      	movs	r3, #128	; 0x80
    2e5c:	061b      	lsls	r3, r3, #24
    2e5e:	18e4      	adds	r4, r4, r3
    2e60:	2200      	movs	r2, #0
    2e62:	2300      	movs	r3, #0
    2e64:	0028      	movs	r0, r5
    2e66:	0021      	movs	r1, r4
    2e68:	f001 fbbc 	bl	45e4 <__aeabi_dcmpeq>
    2e6c:	2800      	cmp	r0, #0
    2e6e:	d006      	beq.n	2e7e <_gcvt+0x46>
    2e70:	2330      	movs	r3, #48	; 0x30
    2e72:	703b      	strb	r3, [r7, #0]
    2e74:	2300      	movs	r3, #0
    2e76:	707b      	strb	r3, [r7, #1]
    2e78:	0038      	movs	r0, r7
    2e7a:	b00d      	add	sp, #52	; 0x34
    2e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e7e:	4a51      	ldr	r2, [pc, #324]	; (2fc4 <_gcvt+0x18c>)
    2e80:	4b51      	ldr	r3, [pc, #324]	; (2fc8 <_gcvt+0x190>)
    2e82:	0028      	movs	r0, r5
    2e84:	0021      	movs	r1, r4
    2e86:	f001 fbbd 	bl	4604 <__aeabi_dcmple>
    2e8a:	2800      	cmp	r0, #0
    2e8c:	d00d      	beq.n	2eaa <_gcvt+0x72>
    2e8e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    2e90:	002a      	movs	r2, r5
    2e92:	9302      	str	r3, [sp, #8]
    2e94:	9b07      	ldr	r3, [sp, #28]
    2e96:	0039      	movs	r1, r7
    2e98:	9301      	str	r3, [sp, #4]
    2e9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2e9c:	0030      	movs	r0, r6
    2e9e:	3b01      	subs	r3, #1
    2ea0:	9300      	str	r3, [sp, #0]
    2ea2:	0023      	movs	r3, r4
    2ea4:	f7ff ff4e 	bl	2d44 <print_e>
    2ea8:	e7e6      	b.n	2e78 <_gcvt+0x40>
    2eaa:	9812      	ldr	r0, [sp, #72]	; 0x48
    2eac:	f000 fb7e 	bl	35ac <_mprec_log10>
    2eb0:	0002      	movs	r2, r0
    2eb2:	000b      	movs	r3, r1
    2eb4:	0028      	movs	r0, r5
    2eb6:	0021      	movs	r1, r4
    2eb8:	f001 fbb8 	bl	462c <__aeabi_dcmpge>
    2ebc:	2800      	cmp	r0, #0
    2ebe:	d1e6      	bne.n	2e8e <_gcvt+0x56>
    2ec0:	2200      	movs	r2, #0
    2ec2:	4b42      	ldr	r3, [pc, #264]	; (2fcc <_gcvt+0x194>)
    2ec4:	0028      	movs	r0, r5
    2ec6:	0021      	movs	r1, r4
    2ec8:	f001 fb92 	bl	45f0 <__aeabi_dcmplt>
    2ecc:	ab0a      	add	r3, sp, #40	; 0x28
    2ece:	9303      	str	r3, [sp, #12]
    2ed0:	ab09      	add	r3, sp, #36	; 0x24
    2ed2:	9302      	str	r3, [sp, #8]
    2ed4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2ed6:	aa0b      	add	r2, sp, #44	; 0x2c
    2ed8:	9301      	str	r3, [sp, #4]
    2eda:	9204      	str	r2, [sp, #16]
    2edc:	2303      	movs	r3, #3
    2ede:	2800      	cmp	r0, #0
    2ee0:	d100      	bne.n	2ee4 <_gcvt+0xac>
    2ee2:	2302      	movs	r3, #2
    2ee4:	9300      	str	r3, [sp, #0]
    2ee6:	002a      	movs	r2, r5
    2ee8:	0023      	movs	r3, r4
    2eea:	0030      	movs	r0, r6
    2eec:	f000 fc82 	bl	37f4 <_dtoa_r>
    2ef0:	4b37      	ldr	r3, [pc, #220]	; (2fd0 <_gcvt+0x198>)
    2ef2:	9a09      	ldr	r2, [sp, #36]	; 0x24
    2ef4:	429a      	cmp	r2, r3
    2ef6:	d013      	beq.n	2f20 <_gcvt+0xe8>
    2ef8:	003a      	movs	r2, r7
    2efa:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2efc:	7804      	ldrb	r4, [r0, #0]
    2efe:	1a9b      	subs	r3, r3, r2
    2f00:	0011      	movs	r1, r2
    2f02:	18fb      	adds	r3, r7, r3
    2f04:	9d09      	ldr	r5, [sp, #36]	; 0x24
    2f06:	2c00      	cmp	r4, #0
    2f08:	d115      	bne.n	2f36 <_gcvt+0xfe>
    2f0a:	2101      	movs	r1, #1
    2f0c:	468c      	mov	ip, r1
    2f0e:	1aed      	subs	r5, r5, r3
    2f10:	18ee      	adds	r6, r5, r3
    2f12:	0011      	movs	r1, r2
    2f14:	2e00      	cmp	r6, #0
    2f16:	dc3b      	bgt.n	2f90 <_gcvt+0x158>
    2f18:	2c00      	cmp	r4, #0
    2f1a:	d00e      	beq.n	2f3a <_gcvt+0x102>
    2f1c:	9609      	str	r6, [sp, #36]	; 0x24
    2f1e:	e00c      	b.n	2f3a <_gcvt+0x102>
    2f20:	0001      	movs	r1, r0
    2f22:	0038      	movs	r0, r7
    2f24:	f000 fbda 	bl	36dc <strcpy>
    2f28:	e7a6      	b.n	2e78 <_gcvt+0x40>
    2f2a:	3d01      	subs	r5, #1
    2f2c:	7014      	strb	r4, [r2, #0]
    2f2e:	3001      	adds	r0, #1
    2f30:	9509      	str	r5, [sp, #36]	; 0x24
    2f32:	3201      	adds	r2, #1
    2f34:	e7e1      	b.n	2efa <_gcvt+0xc2>
    2f36:	2d00      	cmp	r5, #0
    2f38:	dcf7      	bgt.n	2f2a <_gcvt+0xf2>
    2f3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
    2f3c:	2c00      	cmp	r4, #0
    2f3e:	d102      	bne.n	2f46 <_gcvt+0x10e>
    2f40:	7804      	ldrb	r4, [r0, #0]
    2f42:	2c00      	cmp	r4, #0
    2f44:	d021      	beq.n	2f8a <_gcvt+0x152>
    2f46:	4297      	cmp	r7, r2
    2f48:	d102      	bne.n	2f50 <_gcvt+0x118>
    2f4a:	2230      	movs	r2, #48	; 0x30
    2f4c:	1c79      	adds	r1, r7, #1
    2f4e:	703a      	strb	r2, [r7, #0]
    2f50:	222e      	movs	r2, #46	; 0x2e
    2f52:	2530      	movs	r5, #48	; 0x30
    2f54:	700a      	strb	r2, [r1, #0]
    2f56:	2601      	movs	r6, #1
    2f58:	1c4a      	adds	r2, r1, #1
    2f5a:	2100      	movs	r1, #0
    2f5c:	9c09      	ldr	r4, [sp, #36]	; 0x24
    2f5e:	2c00      	cmp	r4, #0
    2f60:	db1e      	blt.n	2fa0 <_gcvt+0x168>
    2f62:	2900      	cmp	r1, #0
    2f64:	d000      	beq.n	2f68 <_gcvt+0x130>
    2f66:	9409      	str	r4, [sp, #36]	; 0x24
    2f68:	7804      	ldrb	r4, [r0, #0]
    2f6a:	0011      	movs	r1, r2
    2f6c:	2c00      	cmp	r4, #0
    2f6e:	d001      	beq.n	2f74 <_gcvt+0x13c>
    2f70:	2b00      	cmp	r3, #0
    2f72:	dc1d      	bgt.n	2fb0 <_gcvt+0x178>
    2f74:	9815      	ldr	r0, [sp, #84]	; 0x54
    2f76:	2800      	cmp	r0, #0
    2f78:	d007      	beq.n	2f8a <_gcvt+0x152>
    2f7a:	0018      	movs	r0, r3
    2f7c:	2430      	movs	r4, #48	; 0x30
    2f7e:	2800      	cmp	r0, #0
    2f80:	dc1b      	bgt.n	2fba <_gcvt+0x182>
    2f82:	43da      	mvns	r2, r3
    2f84:	17d2      	asrs	r2, r2, #31
    2f86:	4013      	ands	r3, r2
    2f88:	18c9      	adds	r1, r1, r3
    2f8a:	2300      	movs	r3, #0
    2f8c:	700b      	strb	r3, [r1, #0]
    2f8e:	e773      	b.n	2e78 <_gcvt+0x40>
    2f90:	2b00      	cmp	r3, #0
    2f92:	ddc1      	ble.n	2f18 <_gcvt+0xe0>
    2f94:	2130      	movs	r1, #48	; 0x30
    2f96:	3b01      	subs	r3, #1
    2f98:	7011      	strb	r1, [r2, #0]
    2f9a:	4664      	mov	r4, ip
    2f9c:	3201      	adds	r2, #1
    2f9e:	e7b7      	b.n	2f10 <_gcvt+0xd8>
    2fa0:	2b00      	cmp	r3, #0
    2fa2:	ddde      	ble.n	2f62 <_gcvt+0x12a>
    2fa4:	7015      	strb	r5, [r2, #0]
    2fa6:	3401      	adds	r4, #1
    2fa8:	3b01      	subs	r3, #1
    2faa:	3201      	adds	r2, #1
    2fac:	0031      	movs	r1, r6
    2fae:	e7d6      	b.n	2f5e <_gcvt+0x126>
    2fb0:	7014      	strb	r4, [r2, #0]
    2fb2:	3001      	adds	r0, #1
    2fb4:	3b01      	subs	r3, #1
    2fb6:	3201      	adds	r2, #1
    2fb8:	e7d6      	b.n	2f68 <_gcvt+0x130>
    2fba:	7014      	strb	r4, [r2, #0]
    2fbc:	3801      	subs	r0, #1
    2fbe:	3201      	adds	r2, #1
    2fc0:	e7dd      	b.n	2f7e <_gcvt+0x146>
    2fc2:	46c0      	nop			; (mov r8, r8)
    2fc4:	eb1c432d 	.word	0xeb1c432d
    2fc8:	3f1a36e2 	.word	0x3f1a36e2
    2fcc:	3ff00000 	.word	0x3ff00000
    2fd0:	0000270f 	.word	0x0000270f

00002fd4 <memcpy>:
    2fd4:	2300      	movs	r3, #0
    2fd6:	b510      	push	{r4, lr}
    2fd8:	429a      	cmp	r2, r3
    2fda:	d100      	bne.n	2fde <memcpy+0xa>
    2fdc:	bd10      	pop	{r4, pc}
    2fde:	5ccc      	ldrb	r4, [r1, r3]
    2fe0:	54c4      	strb	r4, [r0, r3]
    2fe2:	3301      	adds	r3, #1
    2fe4:	e7f8      	b.n	2fd8 <memcpy+0x4>

00002fe6 <_Balloc>:
    2fe6:	b570      	push	{r4, r5, r6, lr}
    2fe8:	6a46      	ldr	r6, [r0, #36]	; 0x24
    2fea:	0004      	movs	r4, r0
    2fec:	000d      	movs	r5, r1
    2fee:	2e00      	cmp	r6, #0
    2ff0:	d107      	bne.n	3002 <_Balloc+0x1c>
    2ff2:	2010      	movs	r0, #16
    2ff4:	f001 f9e6 	bl	43c4 <malloc>
    2ff8:	6260      	str	r0, [r4, #36]	; 0x24
    2ffa:	6046      	str	r6, [r0, #4]
    2ffc:	6086      	str	r6, [r0, #8]
    2ffe:	6006      	str	r6, [r0, #0]
    3000:	60c6      	str	r6, [r0, #12]
    3002:	6a66      	ldr	r6, [r4, #36]	; 0x24
    3004:	68f3      	ldr	r3, [r6, #12]
    3006:	2b00      	cmp	r3, #0
    3008:	d013      	beq.n	3032 <_Balloc+0x4c>
    300a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    300c:	00aa      	lsls	r2, r5, #2
    300e:	68db      	ldr	r3, [r3, #12]
    3010:	189b      	adds	r3, r3, r2
    3012:	6818      	ldr	r0, [r3, #0]
    3014:	2800      	cmp	r0, #0
    3016:	d118      	bne.n	304a <_Balloc+0x64>
    3018:	2101      	movs	r1, #1
    301a:	000e      	movs	r6, r1
    301c:	40ae      	lsls	r6, r5
    301e:	1d72      	adds	r2, r6, #5
    3020:	0092      	lsls	r2, r2, #2
    3022:	0020      	movs	r0, r4
    3024:	f000 fadc 	bl	35e0 <_calloc_r>
    3028:	2800      	cmp	r0, #0
    302a:	d00c      	beq.n	3046 <_Balloc+0x60>
    302c:	6045      	str	r5, [r0, #4]
    302e:	6086      	str	r6, [r0, #8]
    3030:	e00d      	b.n	304e <_Balloc+0x68>
    3032:	2221      	movs	r2, #33	; 0x21
    3034:	2104      	movs	r1, #4
    3036:	0020      	movs	r0, r4
    3038:	f000 fad2 	bl	35e0 <_calloc_r>
    303c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    303e:	60f0      	str	r0, [r6, #12]
    3040:	68db      	ldr	r3, [r3, #12]
    3042:	2b00      	cmp	r3, #0
    3044:	d1e1      	bne.n	300a <_Balloc+0x24>
    3046:	2000      	movs	r0, #0
    3048:	bd70      	pop	{r4, r5, r6, pc}
    304a:	6802      	ldr	r2, [r0, #0]
    304c:	601a      	str	r2, [r3, #0]
    304e:	2300      	movs	r3, #0
    3050:	6103      	str	r3, [r0, #16]
    3052:	60c3      	str	r3, [r0, #12]
    3054:	e7f8      	b.n	3048 <_Balloc+0x62>

00003056 <_Bfree>:
    3056:	b570      	push	{r4, r5, r6, lr}
    3058:	6a44      	ldr	r4, [r0, #36]	; 0x24
    305a:	0006      	movs	r6, r0
    305c:	000d      	movs	r5, r1
    305e:	2c00      	cmp	r4, #0
    3060:	d107      	bne.n	3072 <_Bfree+0x1c>
    3062:	2010      	movs	r0, #16
    3064:	f001 f9ae 	bl	43c4 <malloc>
    3068:	6270      	str	r0, [r6, #36]	; 0x24
    306a:	6044      	str	r4, [r0, #4]
    306c:	6084      	str	r4, [r0, #8]
    306e:	6004      	str	r4, [r0, #0]
    3070:	60c4      	str	r4, [r0, #12]
    3072:	2d00      	cmp	r5, #0
    3074:	d007      	beq.n	3086 <_Bfree+0x30>
    3076:	6a73      	ldr	r3, [r6, #36]	; 0x24
    3078:	686a      	ldr	r2, [r5, #4]
    307a:	68db      	ldr	r3, [r3, #12]
    307c:	0092      	lsls	r2, r2, #2
    307e:	189b      	adds	r3, r3, r2
    3080:	681a      	ldr	r2, [r3, #0]
    3082:	602a      	str	r2, [r5, #0]
    3084:	601d      	str	r5, [r3, #0]
    3086:	bd70      	pop	{r4, r5, r6, pc}

00003088 <__multadd>:
    3088:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    308a:	001e      	movs	r6, r3
    308c:	2314      	movs	r3, #20
    308e:	469c      	mov	ip, r3
    3090:	0007      	movs	r7, r0
    3092:	000c      	movs	r4, r1
    3094:	2000      	movs	r0, #0
    3096:	690d      	ldr	r5, [r1, #16]
    3098:	448c      	add	ip, r1
    309a:	4663      	mov	r3, ip
    309c:	8819      	ldrh	r1, [r3, #0]
    309e:	681b      	ldr	r3, [r3, #0]
    30a0:	4351      	muls	r1, r2
    30a2:	0c1b      	lsrs	r3, r3, #16
    30a4:	4353      	muls	r3, r2
    30a6:	1989      	adds	r1, r1, r6
    30a8:	0c0e      	lsrs	r6, r1, #16
    30aa:	199b      	adds	r3, r3, r6
    30ac:	b289      	uxth	r1, r1
    30ae:	0c1e      	lsrs	r6, r3, #16
    30b0:	041b      	lsls	r3, r3, #16
    30b2:	185b      	adds	r3, r3, r1
    30b4:	4661      	mov	r1, ip
    30b6:	3001      	adds	r0, #1
    30b8:	c108      	stmia	r1!, {r3}
    30ba:	468c      	mov	ip, r1
    30bc:	4285      	cmp	r5, r0
    30be:	dcec      	bgt.n	309a <__multadd+0x12>
    30c0:	2e00      	cmp	r6, #0
    30c2:	d01b      	beq.n	30fc <__multadd+0x74>
    30c4:	68a3      	ldr	r3, [r4, #8]
    30c6:	429d      	cmp	r5, r3
    30c8:	db12      	blt.n	30f0 <__multadd+0x68>
    30ca:	6863      	ldr	r3, [r4, #4]
    30cc:	0038      	movs	r0, r7
    30ce:	1c59      	adds	r1, r3, #1
    30d0:	f7ff ff89 	bl	2fe6 <_Balloc>
    30d4:	0021      	movs	r1, r4
    30d6:	6923      	ldr	r3, [r4, #16]
    30d8:	9001      	str	r0, [sp, #4]
    30da:	1c9a      	adds	r2, r3, #2
    30dc:	0092      	lsls	r2, r2, #2
    30de:	310c      	adds	r1, #12
    30e0:	300c      	adds	r0, #12
    30e2:	f7ff ff77 	bl	2fd4 <memcpy>
    30e6:	0021      	movs	r1, r4
    30e8:	0038      	movs	r0, r7
    30ea:	f7ff ffb4 	bl	3056 <_Bfree>
    30ee:	9c01      	ldr	r4, [sp, #4]
    30f0:	1d2b      	adds	r3, r5, #4
    30f2:	009b      	lsls	r3, r3, #2
    30f4:	18e3      	adds	r3, r4, r3
    30f6:	3501      	adds	r5, #1
    30f8:	605e      	str	r6, [r3, #4]
    30fa:	6125      	str	r5, [r4, #16]
    30fc:	0020      	movs	r0, r4
    30fe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

00003100 <__hi0bits>:
    3100:	0003      	movs	r3, r0
    3102:	0c02      	lsrs	r2, r0, #16
    3104:	2000      	movs	r0, #0
    3106:	4282      	cmp	r2, r0
    3108:	d101      	bne.n	310e <__hi0bits+0xe>
    310a:	041b      	lsls	r3, r3, #16
    310c:	3010      	adds	r0, #16
    310e:	0e1a      	lsrs	r2, r3, #24
    3110:	d101      	bne.n	3116 <__hi0bits+0x16>
    3112:	3008      	adds	r0, #8
    3114:	021b      	lsls	r3, r3, #8
    3116:	0f1a      	lsrs	r2, r3, #28
    3118:	d101      	bne.n	311e <__hi0bits+0x1e>
    311a:	3004      	adds	r0, #4
    311c:	011b      	lsls	r3, r3, #4
    311e:	0f9a      	lsrs	r2, r3, #30
    3120:	d101      	bne.n	3126 <__hi0bits+0x26>
    3122:	3002      	adds	r0, #2
    3124:	009b      	lsls	r3, r3, #2
    3126:	2b00      	cmp	r3, #0
    3128:	db03      	blt.n	3132 <__hi0bits+0x32>
    312a:	3001      	adds	r0, #1
    312c:	005b      	lsls	r3, r3, #1
    312e:	d400      	bmi.n	3132 <__hi0bits+0x32>
    3130:	2020      	movs	r0, #32
    3132:	4770      	bx	lr

00003134 <__lo0bits>:
    3134:	2207      	movs	r2, #7
    3136:	6803      	ldr	r3, [r0, #0]
    3138:	b510      	push	{r4, lr}
    313a:	0001      	movs	r1, r0
    313c:	401a      	ands	r2, r3
    313e:	d00d      	beq.n	315c <__lo0bits+0x28>
    3140:	2401      	movs	r4, #1
    3142:	2000      	movs	r0, #0
    3144:	4223      	tst	r3, r4
    3146:	d105      	bne.n	3154 <__lo0bits+0x20>
    3148:	3002      	adds	r0, #2
    314a:	4203      	tst	r3, r0
    314c:	d003      	beq.n	3156 <__lo0bits+0x22>
    314e:	40e3      	lsrs	r3, r4
    3150:	0020      	movs	r0, r4
    3152:	600b      	str	r3, [r1, #0]
    3154:	bd10      	pop	{r4, pc}
    3156:	089b      	lsrs	r3, r3, #2
    3158:	600b      	str	r3, [r1, #0]
    315a:	e7fb      	b.n	3154 <__lo0bits+0x20>
    315c:	b29c      	uxth	r4, r3
    315e:	0010      	movs	r0, r2
    3160:	2c00      	cmp	r4, #0
    3162:	d101      	bne.n	3168 <__lo0bits+0x34>
    3164:	2010      	movs	r0, #16
    3166:	0c1b      	lsrs	r3, r3, #16
    3168:	b2da      	uxtb	r2, r3
    316a:	2a00      	cmp	r2, #0
    316c:	d101      	bne.n	3172 <__lo0bits+0x3e>
    316e:	3008      	adds	r0, #8
    3170:	0a1b      	lsrs	r3, r3, #8
    3172:	071a      	lsls	r2, r3, #28
    3174:	d101      	bne.n	317a <__lo0bits+0x46>
    3176:	3004      	adds	r0, #4
    3178:	091b      	lsrs	r3, r3, #4
    317a:	079a      	lsls	r2, r3, #30
    317c:	d101      	bne.n	3182 <__lo0bits+0x4e>
    317e:	3002      	adds	r0, #2
    3180:	089b      	lsrs	r3, r3, #2
    3182:	07da      	lsls	r2, r3, #31
    3184:	d4e8      	bmi.n	3158 <__lo0bits+0x24>
    3186:	085b      	lsrs	r3, r3, #1
    3188:	d001      	beq.n	318e <__lo0bits+0x5a>
    318a:	3001      	adds	r0, #1
    318c:	e7e4      	b.n	3158 <__lo0bits+0x24>
    318e:	2020      	movs	r0, #32
    3190:	e7e0      	b.n	3154 <__lo0bits+0x20>

00003192 <__i2b>:
    3192:	b510      	push	{r4, lr}
    3194:	000c      	movs	r4, r1
    3196:	2101      	movs	r1, #1
    3198:	f7ff ff25 	bl	2fe6 <_Balloc>
    319c:	2301      	movs	r3, #1
    319e:	6144      	str	r4, [r0, #20]
    31a0:	6103      	str	r3, [r0, #16]
    31a2:	bd10      	pop	{r4, pc}

000031a4 <__multiply>:
    31a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    31a6:	690b      	ldr	r3, [r1, #16]
    31a8:	0015      	movs	r5, r2
    31aa:	6912      	ldr	r2, [r2, #16]
    31ac:	b089      	sub	sp, #36	; 0x24
    31ae:	000c      	movs	r4, r1
    31b0:	4293      	cmp	r3, r2
    31b2:	da01      	bge.n	31b8 <__multiply+0x14>
    31b4:	002c      	movs	r4, r5
    31b6:	000d      	movs	r5, r1
    31b8:	6927      	ldr	r7, [r4, #16]
    31ba:	692e      	ldr	r6, [r5, #16]
    31bc:	68a2      	ldr	r2, [r4, #8]
    31be:	19bb      	adds	r3, r7, r6
    31c0:	6861      	ldr	r1, [r4, #4]
    31c2:	9301      	str	r3, [sp, #4]
    31c4:	4293      	cmp	r3, r2
    31c6:	dd00      	ble.n	31ca <__multiply+0x26>
    31c8:	3101      	adds	r1, #1
    31ca:	f7ff ff0c 	bl	2fe6 <_Balloc>
    31ce:	0003      	movs	r3, r0
    31d0:	3314      	adds	r3, #20
    31d2:	9300      	str	r3, [sp, #0]
    31d4:	9a00      	ldr	r2, [sp, #0]
    31d6:	19bb      	adds	r3, r7, r6
    31d8:	4694      	mov	ip, r2
    31da:	009b      	lsls	r3, r3, #2
    31dc:	449c      	add	ip, r3
    31de:	0013      	movs	r3, r2
    31e0:	2200      	movs	r2, #0
    31e2:	9004      	str	r0, [sp, #16]
    31e4:	4563      	cmp	r3, ip
    31e6:	d31c      	bcc.n	3222 <__multiply+0x7e>
    31e8:	002a      	movs	r2, r5
    31ea:	3414      	adds	r4, #20
    31ec:	00bf      	lsls	r7, r7, #2
    31ee:	19e3      	adds	r3, r4, r7
    31f0:	3214      	adds	r2, #20
    31f2:	00b6      	lsls	r6, r6, #2
    31f4:	9305      	str	r3, [sp, #20]
    31f6:	1993      	adds	r3, r2, r6
    31f8:	9402      	str	r4, [sp, #8]
    31fa:	9306      	str	r3, [sp, #24]
    31fc:	9b06      	ldr	r3, [sp, #24]
    31fe:	429a      	cmp	r2, r3
    3200:	d311      	bcc.n	3226 <__multiply+0x82>
    3202:	9b01      	ldr	r3, [sp, #4]
    3204:	2b00      	cmp	r3, #0
    3206:	dd06      	ble.n	3216 <__multiply+0x72>
    3208:	2304      	movs	r3, #4
    320a:	425b      	negs	r3, r3
    320c:	449c      	add	ip, r3
    320e:	4663      	mov	r3, ip
    3210:	681b      	ldr	r3, [r3, #0]
    3212:	2b00      	cmp	r3, #0
    3214:	d051      	beq.n	32ba <__multiply+0x116>
    3216:	9b04      	ldr	r3, [sp, #16]
    3218:	9a01      	ldr	r2, [sp, #4]
    321a:	0018      	movs	r0, r3
    321c:	611a      	str	r2, [r3, #16]
    321e:	b009      	add	sp, #36	; 0x24
    3220:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3222:	c304      	stmia	r3!, {r2}
    3224:	e7de      	b.n	31e4 <__multiply+0x40>
    3226:	8814      	ldrh	r4, [r2, #0]
    3228:	2c00      	cmp	r4, #0
    322a:	d01e      	beq.n	326a <__multiply+0xc6>
    322c:	2600      	movs	r6, #0
    322e:	9d00      	ldr	r5, [sp, #0]
    3230:	9f02      	ldr	r7, [sp, #8]
    3232:	cf01      	ldmia	r7!, {r0}
    3234:	9507      	str	r5, [sp, #28]
    3236:	cd08      	ldmia	r5!, {r3}
    3238:	9303      	str	r3, [sp, #12]
    323a:	b283      	uxth	r3, r0
    323c:	4363      	muls	r3, r4
    323e:	0019      	movs	r1, r3
    3240:	466b      	mov	r3, sp
    3242:	0c00      	lsrs	r0, r0, #16
    3244:	899b      	ldrh	r3, [r3, #12]
    3246:	4360      	muls	r0, r4
    3248:	18cb      	adds	r3, r1, r3
    324a:	9903      	ldr	r1, [sp, #12]
    324c:	199b      	adds	r3, r3, r6
    324e:	0c09      	lsrs	r1, r1, #16
    3250:	1841      	adds	r1, r0, r1
    3252:	0c18      	lsrs	r0, r3, #16
    3254:	1809      	adds	r1, r1, r0
    3256:	0c0e      	lsrs	r6, r1, #16
    3258:	b29b      	uxth	r3, r3
    325a:	0409      	lsls	r1, r1, #16
    325c:	430b      	orrs	r3, r1
    325e:	9907      	ldr	r1, [sp, #28]
    3260:	600b      	str	r3, [r1, #0]
    3262:	9b05      	ldr	r3, [sp, #20]
    3264:	42bb      	cmp	r3, r7
    3266:	d8e4      	bhi.n	3232 <__multiply+0x8e>
    3268:	602e      	str	r6, [r5, #0]
    326a:	6813      	ldr	r3, [r2, #0]
    326c:	0c1b      	lsrs	r3, r3, #16
    326e:	9303      	str	r3, [sp, #12]
    3270:	d01e      	beq.n	32b0 <__multiply+0x10c>
    3272:	2600      	movs	r6, #0
    3274:	9b00      	ldr	r3, [sp, #0]
    3276:	9c02      	ldr	r4, [sp, #8]
    3278:	681b      	ldr	r3, [r3, #0]
    327a:	9800      	ldr	r0, [sp, #0]
    327c:	0007      	movs	r7, r0
    327e:	8821      	ldrh	r1, [r4, #0]
    3280:	9d03      	ldr	r5, [sp, #12]
    3282:	b29b      	uxth	r3, r3
    3284:	4369      	muls	r1, r5
    3286:	c820      	ldmia	r0!, {r5}
    3288:	0c2d      	lsrs	r5, r5, #16
    328a:	1949      	adds	r1, r1, r5
    328c:	198e      	adds	r6, r1, r6
    328e:	0431      	lsls	r1, r6, #16
    3290:	430b      	orrs	r3, r1
    3292:	603b      	str	r3, [r7, #0]
    3294:	cc08      	ldmia	r4!, {r3}
    3296:	9903      	ldr	r1, [sp, #12]
    3298:	0c1b      	lsrs	r3, r3, #16
    329a:	434b      	muls	r3, r1
    329c:	6879      	ldr	r1, [r7, #4]
    329e:	0c36      	lsrs	r6, r6, #16
    32a0:	b289      	uxth	r1, r1
    32a2:	185b      	adds	r3, r3, r1
    32a4:	9905      	ldr	r1, [sp, #20]
    32a6:	199b      	adds	r3, r3, r6
    32a8:	0c1e      	lsrs	r6, r3, #16
    32aa:	42a1      	cmp	r1, r4
    32ac:	d8e6      	bhi.n	327c <__multiply+0xd8>
    32ae:	6003      	str	r3, [r0, #0]
    32b0:	9b00      	ldr	r3, [sp, #0]
    32b2:	3204      	adds	r2, #4
    32b4:	3304      	adds	r3, #4
    32b6:	9300      	str	r3, [sp, #0]
    32b8:	e7a0      	b.n	31fc <__multiply+0x58>
    32ba:	9b01      	ldr	r3, [sp, #4]
    32bc:	3b01      	subs	r3, #1
    32be:	9301      	str	r3, [sp, #4]
    32c0:	e79f      	b.n	3202 <__multiply+0x5e>
	...

000032c4 <__pow5mult>:
    32c4:	2303      	movs	r3, #3
    32c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    32c8:	4013      	ands	r3, r2
    32ca:	0005      	movs	r5, r0
    32cc:	000e      	movs	r6, r1
    32ce:	0014      	movs	r4, r2
    32d0:	2b00      	cmp	r3, #0
    32d2:	d008      	beq.n	32e6 <__pow5mult+0x22>
    32d4:	4922      	ldr	r1, [pc, #136]	; (3360 <__pow5mult+0x9c>)
    32d6:	3b01      	subs	r3, #1
    32d8:	009a      	lsls	r2, r3, #2
    32da:	5852      	ldr	r2, [r2, r1]
    32dc:	2300      	movs	r3, #0
    32de:	0031      	movs	r1, r6
    32e0:	f7ff fed2 	bl	3088 <__multadd>
    32e4:	0006      	movs	r6, r0
    32e6:	10a3      	asrs	r3, r4, #2
    32e8:	9301      	str	r3, [sp, #4]
    32ea:	d036      	beq.n	335a <__pow5mult+0x96>
    32ec:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    32ee:	2c00      	cmp	r4, #0
    32f0:	d107      	bne.n	3302 <__pow5mult+0x3e>
    32f2:	2010      	movs	r0, #16
    32f4:	f001 f866 	bl	43c4 <malloc>
    32f8:	6268      	str	r0, [r5, #36]	; 0x24
    32fa:	6044      	str	r4, [r0, #4]
    32fc:	6084      	str	r4, [r0, #8]
    32fe:	6004      	str	r4, [r0, #0]
    3300:	60c4      	str	r4, [r0, #12]
    3302:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    3304:	68bc      	ldr	r4, [r7, #8]
    3306:	2c00      	cmp	r4, #0
    3308:	d107      	bne.n	331a <__pow5mult+0x56>
    330a:	4916      	ldr	r1, [pc, #88]	; (3364 <__pow5mult+0xa0>)
    330c:	0028      	movs	r0, r5
    330e:	f7ff ff40 	bl	3192 <__i2b>
    3312:	2300      	movs	r3, #0
    3314:	0004      	movs	r4, r0
    3316:	60b8      	str	r0, [r7, #8]
    3318:	6003      	str	r3, [r0, #0]
    331a:	2201      	movs	r2, #1
    331c:	9b01      	ldr	r3, [sp, #4]
    331e:	4213      	tst	r3, r2
    3320:	d00a      	beq.n	3338 <__pow5mult+0x74>
    3322:	0031      	movs	r1, r6
    3324:	0022      	movs	r2, r4
    3326:	0028      	movs	r0, r5
    3328:	f7ff ff3c 	bl	31a4 <__multiply>
    332c:	0007      	movs	r7, r0
    332e:	0031      	movs	r1, r6
    3330:	0028      	movs	r0, r5
    3332:	f7ff fe90 	bl	3056 <_Bfree>
    3336:	003e      	movs	r6, r7
    3338:	9b01      	ldr	r3, [sp, #4]
    333a:	105b      	asrs	r3, r3, #1
    333c:	9301      	str	r3, [sp, #4]
    333e:	d00c      	beq.n	335a <__pow5mult+0x96>
    3340:	6820      	ldr	r0, [r4, #0]
    3342:	2800      	cmp	r0, #0
    3344:	d107      	bne.n	3356 <__pow5mult+0x92>
    3346:	0022      	movs	r2, r4
    3348:	0021      	movs	r1, r4
    334a:	0028      	movs	r0, r5
    334c:	f7ff ff2a 	bl	31a4 <__multiply>
    3350:	2300      	movs	r3, #0
    3352:	6020      	str	r0, [r4, #0]
    3354:	6003      	str	r3, [r0, #0]
    3356:	0004      	movs	r4, r0
    3358:	e7df      	b.n	331a <__pow5mult+0x56>
    335a:	0030      	movs	r0, r6
    335c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    335e:	46c0      	nop			; (mov r8, r8)
    3360:	000050f0 	.word	0x000050f0
    3364:	00000271 	.word	0x00000271

00003368 <__lshift>:
    3368:	b5f0      	push	{r4, r5, r6, r7, lr}
    336a:	000d      	movs	r5, r1
    336c:	0017      	movs	r7, r2
    336e:	692b      	ldr	r3, [r5, #16]
    3370:	1154      	asrs	r4, r2, #5
    3372:	b085      	sub	sp, #20
    3374:	18e3      	adds	r3, r4, r3
    3376:	9302      	str	r3, [sp, #8]
    3378:	3301      	adds	r3, #1
    337a:	9301      	str	r3, [sp, #4]
    337c:	6849      	ldr	r1, [r1, #4]
    337e:	68ab      	ldr	r3, [r5, #8]
    3380:	9003      	str	r0, [sp, #12]
    3382:	9a01      	ldr	r2, [sp, #4]
    3384:	4293      	cmp	r3, r2
    3386:	db34      	blt.n	33f2 <__lshift+0x8a>
    3388:	9803      	ldr	r0, [sp, #12]
    338a:	f7ff fe2c 	bl	2fe6 <_Balloc>
    338e:	2300      	movs	r3, #0
    3390:	0002      	movs	r2, r0
    3392:	0006      	movs	r6, r0
    3394:	0019      	movs	r1, r3
    3396:	3214      	adds	r2, #20
    3398:	42a3      	cmp	r3, r4
    339a:	db2d      	blt.n	33f8 <__lshift+0x90>
    339c:	43e3      	mvns	r3, r4
    339e:	17db      	asrs	r3, r3, #31
    33a0:	401c      	ands	r4, r3
    33a2:	002b      	movs	r3, r5
    33a4:	211f      	movs	r1, #31
    33a6:	00a4      	lsls	r4, r4, #2
    33a8:	1914      	adds	r4, r2, r4
    33aa:	692a      	ldr	r2, [r5, #16]
    33ac:	3314      	adds	r3, #20
    33ae:	0092      	lsls	r2, r2, #2
    33b0:	189a      	adds	r2, r3, r2
    33b2:	400f      	ands	r7, r1
    33b4:	d024      	beq.n	3400 <__lshift+0x98>
    33b6:	3101      	adds	r1, #1
    33b8:	1bc9      	subs	r1, r1, r7
    33ba:	468c      	mov	ip, r1
    33bc:	2100      	movs	r1, #0
    33be:	6818      	ldr	r0, [r3, #0]
    33c0:	40b8      	lsls	r0, r7
    33c2:	4301      	orrs	r1, r0
    33c4:	4660      	mov	r0, ip
    33c6:	6021      	str	r1, [r4, #0]
    33c8:	cb02      	ldmia	r3!, {r1}
    33ca:	3404      	adds	r4, #4
    33cc:	40c1      	lsrs	r1, r0
    33ce:	429a      	cmp	r2, r3
    33d0:	d8f5      	bhi.n	33be <__lshift+0x56>
    33d2:	6021      	str	r1, [r4, #0]
    33d4:	2900      	cmp	r1, #0
    33d6:	d002      	beq.n	33de <__lshift+0x76>
    33d8:	9b02      	ldr	r3, [sp, #8]
    33da:	3302      	adds	r3, #2
    33dc:	9301      	str	r3, [sp, #4]
    33de:	9b01      	ldr	r3, [sp, #4]
    33e0:	9803      	ldr	r0, [sp, #12]
    33e2:	3b01      	subs	r3, #1
    33e4:	6133      	str	r3, [r6, #16]
    33e6:	0029      	movs	r1, r5
    33e8:	f7ff fe35 	bl	3056 <_Bfree>
    33ec:	0030      	movs	r0, r6
    33ee:	b005      	add	sp, #20
    33f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33f2:	3101      	adds	r1, #1
    33f4:	005b      	lsls	r3, r3, #1
    33f6:	e7c4      	b.n	3382 <__lshift+0x1a>
    33f8:	0098      	lsls	r0, r3, #2
    33fa:	5011      	str	r1, [r2, r0]
    33fc:	3301      	adds	r3, #1
    33fe:	e7cb      	b.n	3398 <__lshift+0x30>
    3400:	cb02      	ldmia	r3!, {r1}
    3402:	c402      	stmia	r4!, {r1}
    3404:	429a      	cmp	r2, r3
    3406:	d8fb      	bhi.n	3400 <__lshift+0x98>
    3408:	e7e9      	b.n	33de <__lshift+0x76>

0000340a <__mcmp>:
    340a:	690a      	ldr	r2, [r1, #16]
    340c:	6903      	ldr	r3, [r0, #16]
    340e:	b530      	push	{r4, r5, lr}
    3410:	1a9b      	subs	r3, r3, r2
    3412:	d10e      	bne.n	3432 <__mcmp+0x28>
    3414:	0092      	lsls	r2, r2, #2
    3416:	3014      	adds	r0, #20
    3418:	3114      	adds	r1, #20
    341a:	1884      	adds	r4, r0, r2
    341c:	1889      	adds	r1, r1, r2
    341e:	3c04      	subs	r4, #4
    3420:	3904      	subs	r1, #4
    3422:	6822      	ldr	r2, [r4, #0]
    3424:	680d      	ldr	r5, [r1, #0]
    3426:	42aa      	cmp	r2, r5
    3428:	d005      	beq.n	3436 <__mcmp+0x2c>
    342a:	42aa      	cmp	r2, r5
    342c:	4192      	sbcs	r2, r2
    342e:	2301      	movs	r3, #1
    3430:	4313      	orrs	r3, r2
    3432:	0018      	movs	r0, r3
    3434:	bd30      	pop	{r4, r5, pc}
    3436:	42a0      	cmp	r0, r4
    3438:	d3f1      	bcc.n	341e <__mcmp+0x14>
    343a:	e7fa      	b.n	3432 <__mcmp+0x28>

0000343c <__mdiff>:
    343c:	b5f0      	push	{r4, r5, r6, r7, lr}
    343e:	000d      	movs	r5, r1
    3440:	b085      	sub	sp, #20
    3442:	0007      	movs	r7, r0
    3444:	0011      	movs	r1, r2
    3446:	0028      	movs	r0, r5
    3448:	0014      	movs	r4, r2
    344a:	f7ff ffde 	bl	340a <__mcmp>
    344e:	1e06      	subs	r6, r0, #0
    3450:	d108      	bne.n	3464 <__mdiff+0x28>
    3452:	0001      	movs	r1, r0
    3454:	0038      	movs	r0, r7
    3456:	f7ff fdc6 	bl	2fe6 <_Balloc>
    345a:	2301      	movs	r3, #1
    345c:	6146      	str	r6, [r0, #20]
    345e:	6103      	str	r3, [r0, #16]
    3460:	b005      	add	sp, #20
    3462:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3464:	2301      	movs	r3, #1
    3466:	9301      	str	r3, [sp, #4]
    3468:	2800      	cmp	r0, #0
    346a:	db04      	blt.n	3476 <__mdiff+0x3a>
    346c:	0023      	movs	r3, r4
    346e:	002c      	movs	r4, r5
    3470:	001d      	movs	r5, r3
    3472:	2300      	movs	r3, #0
    3474:	9301      	str	r3, [sp, #4]
    3476:	6861      	ldr	r1, [r4, #4]
    3478:	0038      	movs	r0, r7
    347a:	f7ff fdb4 	bl	2fe6 <_Balloc>
    347e:	002f      	movs	r7, r5
    3480:	2200      	movs	r2, #0
    3482:	9b01      	ldr	r3, [sp, #4]
    3484:	6926      	ldr	r6, [r4, #16]
    3486:	60c3      	str	r3, [r0, #12]
    3488:	3414      	adds	r4, #20
    348a:	00b3      	lsls	r3, r6, #2
    348c:	18e3      	adds	r3, r4, r3
    348e:	9302      	str	r3, [sp, #8]
    3490:	692b      	ldr	r3, [r5, #16]
    3492:	3714      	adds	r7, #20
    3494:	009b      	lsls	r3, r3, #2
    3496:	18fb      	adds	r3, r7, r3
    3498:	9303      	str	r3, [sp, #12]
    349a:	0003      	movs	r3, r0
    349c:	4694      	mov	ip, r2
    349e:	3314      	adds	r3, #20
    34a0:	cc20      	ldmia	r4!, {r5}
    34a2:	cf04      	ldmia	r7!, {r2}
    34a4:	9201      	str	r2, [sp, #4]
    34a6:	b2aa      	uxth	r2, r5
    34a8:	4494      	add	ip, r2
    34aa:	466a      	mov	r2, sp
    34ac:	4661      	mov	r1, ip
    34ae:	8892      	ldrh	r2, [r2, #4]
    34b0:	0c2d      	lsrs	r5, r5, #16
    34b2:	1a8a      	subs	r2, r1, r2
    34b4:	9901      	ldr	r1, [sp, #4]
    34b6:	0c09      	lsrs	r1, r1, #16
    34b8:	1a69      	subs	r1, r5, r1
    34ba:	1415      	asrs	r5, r2, #16
    34bc:	1949      	adds	r1, r1, r5
    34be:	140d      	asrs	r5, r1, #16
    34c0:	b292      	uxth	r2, r2
    34c2:	0409      	lsls	r1, r1, #16
    34c4:	430a      	orrs	r2, r1
    34c6:	601a      	str	r2, [r3, #0]
    34c8:	9a03      	ldr	r2, [sp, #12]
    34ca:	46ac      	mov	ip, r5
    34cc:	3304      	adds	r3, #4
    34ce:	42ba      	cmp	r2, r7
    34d0:	d8e6      	bhi.n	34a0 <__mdiff+0x64>
    34d2:	9902      	ldr	r1, [sp, #8]
    34d4:	001a      	movs	r2, r3
    34d6:	428c      	cmp	r4, r1
    34d8:	d305      	bcc.n	34e6 <__mdiff+0xaa>
    34da:	3a04      	subs	r2, #4
    34dc:	6813      	ldr	r3, [r2, #0]
    34de:	2b00      	cmp	r3, #0
    34e0:	d00e      	beq.n	3500 <__mdiff+0xc4>
    34e2:	6106      	str	r6, [r0, #16]
    34e4:	e7bc      	b.n	3460 <__mdiff+0x24>
    34e6:	cc04      	ldmia	r4!, {r2}
    34e8:	b291      	uxth	r1, r2
    34ea:	4461      	add	r1, ip
    34ec:	140d      	asrs	r5, r1, #16
    34ee:	0c12      	lsrs	r2, r2, #16
    34f0:	1952      	adds	r2, r2, r5
    34f2:	1415      	asrs	r5, r2, #16
    34f4:	b289      	uxth	r1, r1
    34f6:	0412      	lsls	r2, r2, #16
    34f8:	430a      	orrs	r2, r1
    34fa:	46ac      	mov	ip, r5
    34fc:	c304      	stmia	r3!, {r2}
    34fe:	e7e8      	b.n	34d2 <__mdiff+0x96>
    3500:	3e01      	subs	r6, #1
    3502:	e7ea      	b.n	34da <__mdiff+0x9e>

00003504 <__d2b>:
    3504:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3506:	001d      	movs	r5, r3
    3508:	2101      	movs	r1, #1
    350a:	9f08      	ldr	r7, [sp, #32]
    350c:	0014      	movs	r4, r2
    350e:	f7ff fd6a 	bl	2fe6 <_Balloc>
    3512:	032b      	lsls	r3, r5, #12
    3514:	006d      	lsls	r5, r5, #1
    3516:	0006      	movs	r6, r0
    3518:	0b1b      	lsrs	r3, r3, #12
    351a:	0d6d      	lsrs	r5, r5, #21
    351c:	d124      	bne.n	3568 <__d2b+0x64>
    351e:	9301      	str	r3, [sp, #4]
    3520:	2c00      	cmp	r4, #0
    3522:	d027      	beq.n	3574 <__d2b+0x70>
    3524:	4668      	mov	r0, sp
    3526:	9400      	str	r4, [sp, #0]
    3528:	f7ff fe04 	bl	3134 <__lo0bits>
    352c:	9c00      	ldr	r4, [sp, #0]
    352e:	2800      	cmp	r0, #0
    3530:	d01e      	beq.n	3570 <__d2b+0x6c>
    3532:	9b01      	ldr	r3, [sp, #4]
    3534:	2120      	movs	r1, #32
    3536:	001a      	movs	r2, r3
    3538:	1a09      	subs	r1, r1, r0
    353a:	408a      	lsls	r2, r1
    353c:	40c3      	lsrs	r3, r0
    353e:	4322      	orrs	r2, r4
    3540:	6172      	str	r2, [r6, #20]
    3542:	9301      	str	r3, [sp, #4]
    3544:	9c01      	ldr	r4, [sp, #4]
    3546:	61b4      	str	r4, [r6, #24]
    3548:	1e63      	subs	r3, r4, #1
    354a:	419c      	sbcs	r4, r3
    354c:	3401      	adds	r4, #1
    354e:	6134      	str	r4, [r6, #16]
    3550:	2d00      	cmp	r5, #0
    3552:	d018      	beq.n	3586 <__d2b+0x82>
    3554:	4b12      	ldr	r3, [pc, #72]	; (35a0 <__d2b+0x9c>)
    3556:	18ed      	adds	r5, r5, r3
    3558:	2335      	movs	r3, #53	; 0x35
    355a:	182d      	adds	r5, r5, r0
    355c:	603d      	str	r5, [r7, #0]
    355e:	1a18      	subs	r0, r3, r0
    3560:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3562:	6018      	str	r0, [r3, #0]
    3564:	0030      	movs	r0, r6
    3566:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    3568:	2280      	movs	r2, #128	; 0x80
    356a:	0352      	lsls	r2, r2, #13
    356c:	4313      	orrs	r3, r2
    356e:	e7d6      	b.n	351e <__d2b+0x1a>
    3570:	6174      	str	r4, [r6, #20]
    3572:	e7e7      	b.n	3544 <__d2b+0x40>
    3574:	a801      	add	r0, sp, #4
    3576:	f7ff fddd 	bl	3134 <__lo0bits>
    357a:	2401      	movs	r4, #1
    357c:	9b01      	ldr	r3, [sp, #4]
    357e:	6134      	str	r4, [r6, #16]
    3580:	6173      	str	r3, [r6, #20]
    3582:	3020      	adds	r0, #32
    3584:	e7e4      	b.n	3550 <__d2b+0x4c>
    3586:	4b07      	ldr	r3, [pc, #28]	; (35a4 <__d2b+0xa0>)
    3588:	18c0      	adds	r0, r0, r3
    358a:	4b07      	ldr	r3, [pc, #28]	; (35a8 <__d2b+0xa4>)
    358c:	6038      	str	r0, [r7, #0]
    358e:	18e3      	adds	r3, r4, r3
    3590:	009b      	lsls	r3, r3, #2
    3592:	18f3      	adds	r3, r6, r3
    3594:	6958      	ldr	r0, [r3, #20]
    3596:	f7ff fdb3 	bl	3100 <__hi0bits>
    359a:	0164      	lsls	r4, r4, #5
    359c:	1a20      	subs	r0, r4, r0
    359e:	e7df      	b.n	3560 <__d2b+0x5c>
    35a0:	fffffbcd 	.word	0xfffffbcd
    35a4:	fffffbce 	.word	0xfffffbce
    35a8:	3fffffff 	.word	0x3fffffff

000035ac <_mprec_log10>:
    35ac:	b510      	push	{r4, lr}
    35ae:	0004      	movs	r4, r0
    35b0:	2817      	cmp	r0, #23
    35b2:	dc05      	bgt.n	35c0 <_mprec_log10+0x14>
    35b4:	4b07      	ldr	r3, [pc, #28]	; (35d4 <_mprec_log10+0x28>)
    35b6:	00c4      	lsls	r4, r0, #3
    35b8:	191c      	adds	r4, r3, r4
    35ba:	6820      	ldr	r0, [r4, #0]
    35bc:	6861      	ldr	r1, [r4, #4]
    35be:	bd10      	pop	{r4, pc}
    35c0:	2000      	movs	r0, #0
    35c2:	4905      	ldr	r1, [pc, #20]	; (35d8 <_mprec_log10+0x2c>)
    35c4:	2200      	movs	r2, #0
    35c6:	4b05      	ldr	r3, [pc, #20]	; (35dc <_mprec_log10+0x30>)
    35c8:	3c01      	subs	r4, #1
    35ca:	f7fe ff19 	bl	2400 <__aeabi_dmul>
    35ce:	2c00      	cmp	r4, #0
    35d0:	d1f8      	bne.n	35c4 <_mprec_log10+0x18>
    35d2:	e7f4      	b.n	35be <_mprec_log10+0x12>
    35d4:	00005028 	.word	0x00005028
    35d8:	3ff00000 	.word	0x3ff00000
    35dc:	40240000 	.word	0x40240000

000035e0 <_calloc_r>:
    35e0:	434a      	muls	r2, r1
    35e2:	b570      	push	{r4, r5, r6, lr}
    35e4:	0011      	movs	r1, r2
    35e6:	0014      	movs	r4, r2
    35e8:	f000 f808 	bl	35fc <_malloc_r>
    35ec:	1e05      	subs	r5, r0, #0
    35ee:	d003      	beq.n	35f8 <_calloc_r+0x18>
    35f0:	0022      	movs	r2, r4
    35f2:	2100      	movs	r1, #0
    35f4:	f7ff fb64 	bl	2cc0 <memset>
    35f8:	0028      	movs	r0, r5
    35fa:	bd70      	pop	{r4, r5, r6, pc}

000035fc <_malloc_r>:
    35fc:	2303      	movs	r3, #3
    35fe:	b570      	push	{r4, r5, r6, lr}
    3600:	1ccd      	adds	r5, r1, #3
    3602:	439d      	bics	r5, r3
    3604:	3508      	adds	r5, #8
    3606:	0006      	movs	r6, r0
    3608:	2d0c      	cmp	r5, #12
    360a:	d21e      	bcs.n	364a <_malloc_r+0x4e>
    360c:	250c      	movs	r5, #12
    360e:	42a9      	cmp	r1, r5
    3610:	d81d      	bhi.n	364e <_malloc_r+0x52>
    3612:	0030      	movs	r0, r6
    3614:	f000 fee0 	bl	43d8 <__malloc_lock>
    3618:	4a25      	ldr	r2, [pc, #148]	; (36b0 <_malloc_r+0xb4>)
    361a:	6814      	ldr	r4, [r2, #0]
    361c:	0021      	movs	r1, r4
    361e:	2900      	cmp	r1, #0
    3620:	d119      	bne.n	3656 <_malloc_r+0x5a>
    3622:	4c24      	ldr	r4, [pc, #144]	; (36b4 <_malloc_r+0xb8>)
    3624:	6823      	ldr	r3, [r4, #0]
    3626:	2b00      	cmp	r3, #0
    3628:	d103      	bne.n	3632 <_malloc_r+0x36>
    362a:	0030      	movs	r0, r6
    362c:	f000 f844 	bl	36b8 <_sbrk_r>
    3630:	6020      	str	r0, [r4, #0]
    3632:	0029      	movs	r1, r5
    3634:	0030      	movs	r0, r6
    3636:	f000 f83f 	bl	36b8 <_sbrk_r>
    363a:	1c43      	adds	r3, r0, #1
    363c:	d12c      	bne.n	3698 <_malloc_r+0x9c>
    363e:	230c      	movs	r3, #12
    3640:	0030      	movs	r0, r6
    3642:	6033      	str	r3, [r6, #0]
    3644:	f000 fec9 	bl	43da <__malloc_unlock>
    3648:	e003      	b.n	3652 <_malloc_r+0x56>
    364a:	2d00      	cmp	r5, #0
    364c:	dadf      	bge.n	360e <_malloc_r+0x12>
    364e:	230c      	movs	r3, #12
    3650:	6033      	str	r3, [r6, #0]
    3652:	2000      	movs	r0, #0
    3654:	bd70      	pop	{r4, r5, r6, pc}
    3656:	680b      	ldr	r3, [r1, #0]
    3658:	1b5b      	subs	r3, r3, r5
    365a:	d41a      	bmi.n	3692 <_malloc_r+0x96>
    365c:	2b0b      	cmp	r3, #11
    365e:	d903      	bls.n	3668 <_malloc_r+0x6c>
    3660:	600b      	str	r3, [r1, #0]
    3662:	18cc      	adds	r4, r1, r3
    3664:	6025      	str	r5, [r4, #0]
    3666:	e003      	b.n	3670 <_malloc_r+0x74>
    3668:	428c      	cmp	r4, r1
    366a:	d10e      	bne.n	368a <_malloc_r+0x8e>
    366c:	6863      	ldr	r3, [r4, #4]
    366e:	6013      	str	r3, [r2, #0]
    3670:	0030      	movs	r0, r6
    3672:	f000 feb2 	bl	43da <__malloc_unlock>
    3676:	0020      	movs	r0, r4
    3678:	2207      	movs	r2, #7
    367a:	300b      	adds	r0, #11
    367c:	1d23      	adds	r3, r4, #4
    367e:	4390      	bics	r0, r2
    3680:	1ac3      	subs	r3, r0, r3
    3682:	d0e7      	beq.n	3654 <_malloc_r+0x58>
    3684:	425a      	negs	r2, r3
    3686:	50e2      	str	r2, [r4, r3]
    3688:	e7e4      	b.n	3654 <_malloc_r+0x58>
    368a:	684b      	ldr	r3, [r1, #4]
    368c:	6063      	str	r3, [r4, #4]
    368e:	000c      	movs	r4, r1
    3690:	e7ee      	b.n	3670 <_malloc_r+0x74>
    3692:	000c      	movs	r4, r1
    3694:	6849      	ldr	r1, [r1, #4]
    3696:	e7c2      	b.n	361e <_malloc_r+0x22>
    3698:	2303      	movs	r3, #3
    369a:	1cc4      	adds	r4, r0, #3
    369c:	439c      	bics	r4, r3
    369e:	42a0      	cmp	r0, r4
    36a0:	d0e0      	beq.n	3664 <_malloc_r+0x68>
    36a2:	1a21      	subs	r1, r4, r0
    36a4:	0030      	movs	r0, r6
    36a6:	f000 f807 	bl	36b8 <_sbrk_r>
    36aa:	1c43      	adds	r3, r0, #1
    36ac:	d1da      	bne.n	3664 <_malloc_r+0x68>
    36ae:	e7c6      	b.n	363e <_malloc_r+0x42>
    36b0:	200000b8 	.word	0x200000b8
    36b4:	200000bc 	.word	0x200000bc

000036b8 <_sbrk_r>:
    36b8:	2300      	movs	r3, #0
    36ba:	b570      	push	{r4, r5, r6, lr}
    36bc:	4c06      	ldr	r4, [pc, #24]	; (36d8 <_sbrk_r+0x20>)
    36be:	0005      	movs	r5, r0
    36c0:	0008      	movs	r0, r1
    36c2:	6023      	str	r3, [r4, #0]
    36c4:	f7fd fdd8 	bl	1278 <_sbrk>
    36c8:	1c43      	adds	r3, r0, #1
    36ca:	d103      	bne.n	36d4 <_sbrk_r+0x1c>
    36cc:	6823      	ldr	r3, [r4, #0]
    36ce:	2b00      	cmp	r3, #0
    36d0:	d000      	beq.n	36d4 <_sbrk_r+0x1c>
    36d2:	602b      	str	r3, [r5, #0]
    36d4:	bd70      	pop	{r4, r5, r6, pc}
    36d6:	46c0      	nop			; (mov r8, r8)
    36d8:	20000268 	.word	0x20000268

000036dc <strcpy>:
    36dc:	1c03      	adds	r3, r0, #0
    36de:	780a      	ldrb	r2, [r1, #0]
    36e0:	3101      	adds	r1, #1
    36e2:	701a      	strb	r2, [r3, #0]
    36e4:	3301      	adds	r3, #1
    36e6:	2a00      	cmp	r2, #0
    36e8:	d1f9      	bne.n	36de <strcpy+0x2>
    36ea:	4770      	bx	lr

000036ec <quorem>:
    36ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    36ee:	6903      	ldr	r3, [r0, #16]
    36f0:	690c      	ldr	r4, [r1, #16]
    36f2:	b089      	sub	sp, #36	; 0x24
    36f4:	0007      	movs	r7, r0
    36f6:	9105      	str	r1, [sp, #20]
    36f8:	2600      	movs	r6, #0
    36fa:	429c      	cmp	r4, r3
    36fc:	dc6d      	bgt.n	37da <quorem+0xee>
    36fe:	000b      	movs	r3, r1
    3700:	3c01      	subs	r4, #1
    3702:	3314      	adds	r3, #20
    3704:	00a5      	lsls	r5, r4, #2
    3706:	9303      	str	r3, [sp, #12]
    3708:	195b      	adds	r3, r3, r5
    370a:	9304      	str	r3, [sp, #16]
    370c:	0003      	movs	r3, r0
    370e:	3314      	adds	r3, #20
    3710:	9302      	str	r3, [sp, #8]
    3712:	195d      	adds	r5, r3, r5
    3714:	9b04      	ldr	r3, [sp, #16]
    3716:	6828      	ldr	r0, [r5, #0]
    3718:	681b      	ldr	r3, [r3, #0]
    371a:	1c59      	adds	r1, r3, #1
    371c:	9301      	str	r3, [sp, #4]
    371e:	f7fd ff25 	bl	156c <__udivsi3>
    3722:	9001      	str	r0, [sp, #4]
    3724:	42b0      	cmp	r0, r6
    3726:	d02d      	beq.n	3784 <quorem+0x98>
    3728:	9b03      	ldr	r3, [sp, #12]
    372a:	9802      	ldr	r0, [sp, #8]
    372c:	469c      	mov	ip, r3
    372e:	9606      	str	r6, [sp, #24]
    3730:	4662      	mov	r2, ip
    3732:	ca08      	ldmia	r2!, {r3}
    3734:	4694      	mov	ip, r2
    3736:	9a01      	ldr	r2, [sp, #4]
    3738:	b299      	uxth	r1, r3
    373a:	4351      	muls	r1, r2
    373c:	0c1b      	lsrs	r3, r3, #16
    373e:	4353      	muls	r3, r2
    3740:	1989      	adds	r1, r1, r6
    3742:	0c0a      	lsrs	r2, r1, #16
    3744:	189b      	adds	r3, r3, r2
    3746:	9307      	str	r3, [sp, #28]
    3748:	8802      	ldrh	r2, [r0, #0]
    374a:	0c1e      	lsrs	r6, r3, #16
    374c:	9b06      	ldr	r3, [sp, #24]
    374e:	b289      	uxth	r1, r1
    3750:	18d2      	adds	r2, r2, r3
    3752:	6803      	ldr	r3, [r0, #0]
    3754:	1a52      	subs	r2, r2, r1
    3756:	0c19      	lsrs	r1, r3, #16
    3758:	466b      	mov	r3, sp
    375a:	8b9b      	ldrh	r3, [r3, #28]
    375c:	1acb      	subs	r3, r1, r3
    375e:	1411      	asrs	r1, r2, #16
    3760:	185b      	adds	r3, r3, r1
    3762:	1419      	asrs	r1, r3, #16
    3764:	b292      	uxth	r2, r2
    3766:	041b      	lsls	r3, r3, #16
    3768:	431a      	orrs	r2, r3
    376a:	9b04      	ldr	r3, [sp, #16]
    376c:	9106      	str	r1, [sp, #24]
    376e:	c004      	stmia	r0!, {r2}
    3770:	4563      	cmp	r3, ip
    3772:	d2dd      	bcs.n	3730 <quorem+0x44>
    3774:	682b      	ldr	r3, [r5, #0]
    3776:	2b00      	cmp	r3, #0
    3778:	d104      	bne.n	3784 <quorem+0x98>
    377a:	9b02      	ldr	r3, [sp, #8]
    377c:	3d04      	subs	r5, #4
    377e:	42ab      	cmp	r3, r5
    3780:	d32e      	bcc.n	37e0 <quorem+0xf4>
    3782:	613c      	str	r4, [r7, #16]
    3784:	9905      	ldr	r1, [sp, #20]
    3786:	0038      	movs	r0, r7
    3788:	f7ff fe3f 	bl	340a <__mcmp>
    378c:	2800      	cmp	r0, #0
    378e:	db23      	blt.n	37d8 <quorem+0xec>
    3790:	2500      	movs	r5, #0
    3792:	9b01      	ldr	r3, [sp, #4]
    3794:	9802      	ldr	r0, [sp, #8]
    3796:	3301      	adds	r3, #1
    3798:	9903      	ldr	r1, [sp, #12]
    379a:	9301      	str	r3, [sp, #4]
    379c:	c908      	ldmia	r1!, {r3}
    379e:	8802      	ldrh	r2, [r0, #0]
    37a0:	1955      	adds	r5, r2, r5
    37a2:	b29a      	uxth	r2, r3
    37a4:	1aaa      	subs	r2, r5, r2
    37a6:	6805      	ldr	r5, [r0, #0]
    37a8:	0c1b      	lsrs	r3, r3, #16
    37aa:	0c2d      	lsrs	r5, r5, #16
    37ac:	1aeb      	subs	r3, r5, r3
    37ae:	1415      	asrs	r5, r2, #16
    37b0:	195b      	adds	r3, r3, r5
    37b2:	141d      	asrs	r5, r3, #16
    37b4:	b292      	uxth	r2, r2
    37b6:	041b      	lsls	r3, r3, #16
    37b8:	4313      	orrs	r3, r2
    37ba:	c008      	stmia	r0!, {r3}
    37bc:	9b04      	ldr	r3, [sp, #16]
    37be:	428b      	cmp	r3, r1
    37c0:	d2ec      	bcs.n	379c <quorem+0xb0>
    37c2:	9a02      	ldr	r2, [sp, #8]
    37c4:	00a3      	lsls	r3, r4, #2
    37c6:	18d3      	adds	r3, r2, r3
    37c8:	681a      	ldr	r2, [r3, #0]
    37ca:	2a00      	cmp	r2, #0
    37cc:	d104      	bne.n	37d8 <quorem+0xec>
    37ce:	9a02      	ldr	r2, [sp, #8]
    37d0:	3b04      	subs	r3, #4
    37d2:	429a      	cmp	r2, r3
    37d4:	d309      	bcc.n	37ea <quorem+0xfe>
    37d6:	613c      	str	r4, [r7, #16]
    37d8:	9e01      	ldr	r6, [sp, #4]
    37da:	0030      	movs	r0, r6
    37dc:	b009      	add	sp, #36	; 0x24
    37de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    37e0:	682b      	ldr	r3, [r5, #0]
    37e2:	2b00      	cmp	r3, #0
    37e4:	d1cd      	bne.n	3782 <quorem+0x96>
    37e6:	3c01      	subs	r4, #1
    37e8:	e7c7      	b.n	377a <quorem+0x8e>
    37ea:	681a      	ldr	r2, [r3, #0]
    37ec:	2a00      	cmp	r2, #0
    37ee:	d1f2      	bne.n	37d6 <quorem+0xea>
    37f0:	3c01      	subs	r4, #1
    37f2:	e7ec      	b.n	37ce <quorem+0xe2>

000037f4 <_dtoa_r>:
    37f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    37f6:	0016      	movs	r6, r2
    37f8:	001f      	movs	r7, r3
    37fa:	6a44      	ldr	r4, [r0, #36]	; 0x24
    37fc:	b09d      	sub	sp, #116	; 0x74
    37fe:	9004      	str	r0, [sp, #16]
    3800:	9d25      	ldr	r5, [sp, #148]	; 0x94
    3802:	9606      	str	r6, [sp, #24]
    3804:	9707      	str	r7, [sp, #28]
    3806:	2c00      	cmp	r4, #0
    3808:	d108      	bne.n	381c <_dtoa_r+0x28>
    380a:	2010      	movs	r0, #16
    380c:	f000 fdda 	bl	43c4 <malloc>
    3810:	9b04      	ldr	r3, [sp, #16]
    3812:	6258      	str	r0, [r3, #36]	; 0x24
    3814:	6044      	str	r4, [r0, #4]
    3816:	6084      	str	r4, [r0, #8]
    3818:	6004      	str	r4, [r0, #0]
    381a:	60c4      	str	r4, [r0, #12]
    381c:	9b04      	ldr	r3, [sp, #16]
    381e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3820:	6819      	ldr	r1, [r3, #0]
    3822:	2900      	cmp	r1, #0
    3824:	d00b      	beq.n	383e <_dtoa_r+0x4a>
    3826:	685a      	ldr	r2, [r3, #4]
    3828:	2301      	movs	r3, #1
    382a:	4093      	lsls	r3, r2
    382c:	604a      	str	r2, [r1, #4]
    382e:	608b      	str	r3, [r1, #8]
    3830:	9804      	ldr	r0, [sp, #16]
    3832:	f7ff fc10 	bl	3056 <_Bfree>
    3836:	2200      	movs	r2, #0
    3838:	9b04      	ldr	r3, [sp, #16]
    383a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    383c:	601a      	str	r2, [r3, #0]
    383e:	9b07      	ldr	r3, [sp, #28]
    3840:	2b00      	cmp	r3, #0
    3842:	da1f      	bge.n	3884 <_dtoa_r+0x90>
    3844:	2301      	movs	r3, #1
    3846:	602b      	str	r3, [r5, #0]
    3848:	007b      	lsls	r3, r7, #1
    384a:	085b      	lsrs	r3, r3, #1
    384c:	9307      	str	r3, [sp, #28]
    384e:	9c07      	ldr	r4, [sp, #28]
    3850:	4bb7      	ldr	r3, [pc, #732]	; (3b30 <_dtoa_r+0x33c>)
    3852:	0022      	movs	r2, r4
    3854:	9319      	str	r3, [sp, #100]	; 0x64
    3856:	401a      	ands	r2, r3
    3858:	429a      	cmp	r2, r3
    385a:	d116      	bne.n	388a <_dtoa_r+0x96>
    385c:	4bb5      	ldr	r3, [pc, #724]	; (3b34 <_dtoa_r+0x340>)
    385e:	9a24      	ldr	r2, [sp, #144]	; 0x90
    3860:	6013      	str	r3, [r2, #0]
    3862:	9b06      	ldr	r3, [sp, #24]
    3864:	2b00      	cmp	r3, #0
    3866:	d103      	bne.n	3870 <_dtoa_r+0x7c>
    3868:	0324      	lsls	r4, r4, #12
    386a:	d101      	bne.n	3870 <_dtoa_r+0x7c>
    386c:	f000 fd91 	bl	4392 <_dtoa_r+0xb9e>
    3870:	4bb1      	ldr	r3, [pc, #708]	; (3b38 <_dtoa_r+0x344>)
    3872:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3874:	930a      	str	r3, [sp, #40]	; 0x28
    3876:	4bb1      	ldr	r3, [pc, #708]	; (3b3c <_dtoa_r+0x348>)
    3878:	2a00      	cmp	r2, #0
    387a:	d001      	beq.n	3880 <_dtoa_r+0x8c>
    387c:	f000 fd8f 	bl	439e <_dtoa_r+0xbaa>
    3880:	f000 fd8f 	bl	43a2 <_dtoa_r+0xbae>
    3884:	2300      	movs	r3, #0
    3886:	602b      	str	r3, [r5, #0]
    3888:	e7e1      	b.n	384e <_dtoa_r+0x5a>
    388a:	9e06      	ldr	r6, [sp, #24]
    388c:	9f07      	ldr	r7, [sp, #28]
    388e:	2200      	movs	r2, #0
    3890:	2300      	movs	r3, #0
    3892:	0030      	movs	r0, r6
    3894:	0039      	movs	r1, r7
    3896:	f000 fea5 	bl	45e4 <__aeabi_dcmpeq>
    389a:	1e05      	subs	r5, r0, #0
    389c:	d00e      	beq.n	38bc <_dtoa_r+0xc8>
    389e:	2301      	movs	r3, #1
    38a0:	9a24      	ldr	r2, [sp, #144]	; 0x90
    38a2:	6013      	str	r3, [r2, #0]
    38a4:	4ba6      	ldr	r3, [pc, #664]	; (3b40 <_dtoa_r+0x34c>)
    38a6:	9a26      	ldr	r2, [sp, #152]	; 0x98
    38a8:	930a      	str	r3, [sp, #40]	; 0x28
    38aa:	2a00      	cmp	r2, #0
    38ac:	d101      	bne.n	38b2 <_dtoa_r+0xbe>
    38ae:	f000 fd78 	bl	43a2 <_dtoa_r+0xbae>
    38b2:	4aa4      	ldr	r2, [pc, #656]	; (3b44 <_dtoa_r+0x350>)
    38b4:	9926      	ldr	r1, [sp, #152]	; 0x98
    38b6:	600a      	str	r2, [r1, #0]
    38b8:	f000 fd73 	bl	43a2 <_dtoa_r+0xbae>
    38bc:	ab1a      	add	r3, sp, #104	; 0x68
    38be:	9301      	str	r3, [sp, #4]
    38c0:	ab1b      	add	r3, sp, #108	; 0x6c
    38c2:	9300      	str	r3, [sp, #0]
    38c4:	0032      	movs	r2, r6
    38c6:	003b      	movs	r3, r7
    38c8:	9804      	ldr	r0, [sp, #16]
    38ca:	f7ff fe1b 	bl	3504 <__d2b>
    38ce:	0063      	lsls	r3, r4, #1
    38d0:	9005      	str	r0, [sp, #20]
    38d2:	0d5b      	lsrs	r3, r3, #21
    38d4:	d100      	bne.n	38d8 <_dtoa_r+0xe4>
    38d6:	e07f      	b.n	39d8 <_dtoa_r+0x1e4>
    38d8:	033a      	lsls	r2, r7, #12
    38da:	4c9b      	ldr	r4, [pc, #620]	; (3b48 <_dtoa_r+0x354>)
    38dc:	0b12      	lsrs	r2, r2, #12
    38de:	4314      	orrs	r4, r2
    38e0:	0021      	movs	r1, r4
    38e2:	4a9a      	ldr	r2, [pc, #616]	; (3b4c <_dtoa_r+0x358>)
    38e4:	0030      	movs	r0, r6
    38e6:	9518      	str	r5, [sp, #96]	; 0x60
    38e8:	189e      	adds	r6, r3, r2
    38ea:	2200      	movs	r2, #0
    38ec:	4b98      	ldr	r3, [pc, #608]	; (3b50 <_dtoa_r+0x35c>)
    38ee:	f000 ffa7 	bl	4840 <__aeabi_dsub>
    38f2:	4a98      	ldr	r2, [pc, #608]	; (3b54 <_dtoa_r+0x360>)
    38f4:	4b98      	ldr	r3, [pc, #608]	; (3b58 <_dtoa_r+0x364>)
    38f6:	f7fe fd83 	bl	2400 <__aeabi_dmul>
    38fa:	4a98      	ldr	r2, [pc, #608]	; (3b5c <_dtoa_r+0x368>)
    38fc:	4b98      	ldr	r3, [pc, #608]	; (3b60 <_dtoa_r+0x36c>)
    38fe:	f7fd ff3b 	bl	1778 <__aeabi_dadd>
    3902:	0004      	movs	r4, r0
    3904:	0030      	movs	r0, r6
    3906:	000d      	movs	r5, r1
    3908:	f7ff f82e 	bl	2968 <__aeabi_i2d>
    390c:	4a95      	ldr	r2, [pc, #596]	; (3b64 <_dtoa_r+0x370>)
    390e:	4b96      	ldr	r3, [pc, #600]	; (3b68 <_dtoa_r+0x374>)
    3910:	f7fe fd76 	bl	2400 <__aeabi_dmul>
    3914:	0002      	movs	r2, r0
    3916:	000b      	movs	r3, r1
    3918:	0020      	movs	r0, r4
    391a:	0029      	movs	r1, r5
    391c:	f7fd ff2c 	bl	1778 <__aeabi_dadd>
    3920:	0004      	movs	r4, r0
    3922:	000d      	movs	r5, r1
    3924:	f7fe ffec 	bl	2900 <__aeabi_d2iz>
    3928:	2200      	movs	r2, #0
    392a:	9003      	str	r0, [sp, #12]
    392c:	2300      	movs	r3, #0
    392e:	0020      	movs	r0, r4
    3930:	0029      	movs	r1, r5
    3932:	f000 fe5d 	bl	45f0 <__aeabi_dcmplt>
    3936:	2800      	cmp	r0, #0
    3938:	d00e      	beq.n	3958 <_dtoa_r+0x164>
    393a:	9803      	ldr	r0, [sp, #12]
    393c:	f7ff f814 	bl	2968 <__aeabi_i2d>
    3940:	000b      	movs	r3, r1
    3942:	0002      	movs	r2, r0
    3944:	0029      	movs	r1, r5
    3946:	0020      	movs	r0, r4
    3948:	f000 fe4c 	bl	45e4 <__aeabi_dcmpeq>
    394c:	0003      	movs	r3, r0
    394e:	4258      	negs	r0, r3
    3950:	4158      	adcs	r0, r3
    3952:	9b03      	ldr	r3, [sp, #12]
    3954:	1a1b      	subs	r3, r3, r0
    3956:	9303      	str	r3, [sp, #12]
    3958:	2301      	movs	r3, #1
    395a:	9316      	str	r3, [sp, #88]	; 0x58
    395c:	9b03      	ldr	r3, [sp, #12]
    395e:	2b16      	cmp	r3, #22
    3960:	d80f      	bhi.n	3982 <_dtoa_r+0x18e>
    3962:	4982      	ldr	r1, [pc, #520]	; (3b6c <_dtoa_r+0x378>)
    3964:	00db      	lsls	r3, r3, #3
    3966:	18c9      	adds	r1, r1, r3
    3968:	6808      	ldr	r0, [r1, #0]
    396a:	6849      	ldr	r1, [r1, #4]
    396c:	9a06      	ldr	r2, [sp, #24]
    396e:	9b07      	ldr	r3, [sp, #28]
    3970:	f000 fe52 	bl	4618 <__aeabi_dcmpgt>
    3974:	2800      	cmp	r0, #0
    3976:	d04b      	beq.n	3a10 <_dtoa_r+0x21c>
    3978:	9b03      	ldr	r3, [sp, #12]
    397a:	3b01      	subs	r3, #1
    397c:	9303      	str	r3, [sp, #12]
    397e:	2300      	movs	r3, #0
    3980:	9316      	str	r3, [sp, #88]	; 0x58
    3982:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    3984:	1b9e      	subs	r6, r3, r6
    3986:	2300      	movs	r3, #0
    3988:	930b      	str	r3, [sp, #44]	; 0x2c
    398a:	0033      	movs	r3, r6
    398c:	3b01      	subs	r3, #1
    398e:	930c      	str	r3, [sp, #48]	; 0x30
    3990:	d504      	bpl.n	399c <_dtoa_r+0x1a8>
    3992:	2301      	movs	r3, #1
    3994:	1b9b      	subs	r3, r3, r6
    3996:	930b      	str	r3, [sp, #44]	; 0x2c
    3998:	2300      	movs	r3, #0
    399a:	930c      	str	r3, [sp, #48]	; 0x30
    399c:	9b03      	ldr	r3, [sp, #12]
    399e:	2b00      	cmp	r3, #0
    39a0:	db38      	blt.n	3a14 <_dtoa_r+0x220>
    39a2:	9a03      	ldr	r2, [sp, #12]
    39a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    39a6:	4694      	mov	ip, r2
    39a8:	4463      	add	r3, ip
    39aa:	930c      	str	r3, [sp, #48]	; 0x30
    39ac:	2300      	movs	r3, #0
    39ae:	920f      	str	r2, [sp, #60]	; 0x3c
    39b0:	9308      	str	r3, [sp, #32]
    39b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    39b4:	2501      	movs	r5, #1
    39b6:	2b09      	cmp	r3, #9
    39b8:	d900      	bls.n	39bc <_dtoa_r+0x1c8>
    39ba:	e091      	b.n	3ae0 <_dtoa_r+0x2ec>
    39bc:	2b05      	cmp	r3, #5
    39be:	dd02      	ble.n	39c6 <_dtoa_r+0x1d2>
    39c0:	2500      	movs	r5, #0
    39c2:	3b04      	subs	r3, #4
    39c4:	9322      	str	r3, [sp, #136]	; 0x88
    39c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    39c8:	1e98      	subs	r0, r3, #2
    39ca:	2803      	cmp	r0, #3
    39cc:	d900      	bls.n	39d0 <_dtoa_r+0x1dc>
    39ce:	e091      	b.n	3af4 <_dtoa_r+0x300>
    39d0:	f000 fd04 	bl	43dc <__gnu_thumb1_case_uqi>
    39d4:	76298482 	.word	0x76298482
    39d8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    39da:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    39dc:	189e      	adds	r6, r3, r2
    39de:	4b64      	ldr	r3, [pc, #400]	; (3b70 <_dtoa_r+0x37c>)
    39e0:	18f2      	adds	r2, r6, r3
    39e2:	2a20      	cmp	r2, #32
    39e4:	dd0f      	ble.n	3a06 <_dtoa_r+0x212>
    39e6:	4b63      	ldr	r3, [pc, #396]	; (3b74 <_dtoa_r+0x380>)
    39e8:	9806      	ldr	r0, [sp, #24]
    39ea:	18f3      	adds	r3, r6, r3
    39ec:	40d8      	lsrs	r0, r3
    39ee:	2340      	movs	r3, #64	; 0x40
    39f0:	1a9b      	subs	r3, r3, r2
    39f2:	409c      	lsls	r4, r3
    39f4:	4320      	orrs	r0, r4
    39f6:	f001 fa39 	bl	4e6c <__aeabi_ui2d>
    39fa:	2301      	movs	r3, #1
    39fc:	4c5e      	ldr	r4, [pc, #376]	; (3b78 <_dtoa_r+0x384>)
    39fe:	3e01      	subs	r6, #1
    3a00:	1909      	adds	r1, r1, r4
    3a02:	9318      	str	r3, [sp, #96]	; 0x60
    3a04:	e771      	b.n	38ea <_dtoa_r+0xf6>
    3a06:	2320      	movs	r3, #32
    3a08:	9806      	ldr	r0, [sp, #24]
    3a0a:	1a9b      	subs	r3, r3, r2
    3a0c:	4098      	lsls	r0, r3
    3a0e:	e7f2      	b.n	39f6 <_dtoa_r+0x202>
    3a10:	9016      	str	r0, [sp, #88]	; 0x58
    3a12:	e7b6      	b.n	3982 <_dtoa_r+0x18e>
    3a14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3a16:	9a03      	ldr	r2, [sp, #12]
    3a18:	1a9b      	subs	r3, r3, r2
    3a1a:	930b      	str	r3, [sp, #44]	; 0x2c
    3a1c:	4253      	negs	r3, r2
    3a1e:	9308      	str	r3, [sp, #32]
    3a20:	2300      	movs	r3, #0
    3a22:	930f      	str	r3, [sp, #60]	; 0x3c
    3a24:	e7c5      	b.n	39b2 <_dtoa_r+0x1be>
    3a26:	2301      	movs	r3, #1
    3a28:	930e      	str	r3, [sp, #56]	; 0x38
    3a2a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3a2c:	2b00      	cmp	r3, #0
    3a2e:	dd65      	ble.n	3afc <_dtoa_r+0x308>
    3a30:	001f      	movs	r7, r3
    3a32:	930d      	str	r3, [sp, #52]	; 0x34
    3a34:	9a04      	ldr	r2, [sp, #16]
    3a36:	6a54      	ldr	r4, [r2, #36]	; 0x24
    3a38:	2200      	movs	r2, #0
    3a3a:	6062      	str	r2, [r4, #4]
    3a3c:	3204      	adds	r2, #4
    3a3e:	0011      	movs	r1, r2
    3a40:	3114      	adds	r1, #20
    3a42:	4299      	cmp	r1, r3
    3a44:	d95f      	bls.n	3b06 <_dtoa_r+0x312>
    3a46:	6861      	ldr	r1, [r4, #4]
    3a48:	9804      	ldr	r0, [sp, #16]
    3a4a:	f7ff facc 	bl	2fe6 <_Balloc>
    3a4e:	9b04      	ldr	r3, [sp, #16]
    3a50:	6020      	str	r0, [r4, #0]
    3a52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3a54:	681b      	ldr	r3, [r3, #0]
    3a56:	930a      	str	r3, [sp, #40]	; 0x28
    3a58:	2f0e      	cmp	r7, #14
    3a5a:	d900      	bls.n	3a5e <_dtoa_r+0x26a>
    3a5c:	e105      	b.n	3c6a <_dtoa_r+0x476>
    3a5e:	2d00      	cmp	r5, #0
    3a60:	d100      	bne.n	3a64 <_dtoa_r+0x270>
    3a62:	e102      	b.n	3c6a <_dtoa_r+0x476>
    3a64:	9b06      	ldr	r3, [sp, #24]
    3a66:	9c07      	ldr	r4, [sp, #28]
    3a68:	9314      	str	r3, [sp, #80]	; 0x50
    3a6a:	9415      	str	r4, [sp, #84]	; 0x54
    3a6c:	9b03      	ldr	r3, [sp, #12]
    3a6e:	2b00      	cmp	r3, #0
    3a70:	dc00      	bgt.n	3a74 <_dtoa_r+0x280>
    3a72:	e085      	b.n	3b80 <_dtoa_r+0x38c>
    3a74:	001a      	movs	r2, r3
    3a76:	210f      	movs	r1, #15
    3a78:	4b3c      	ldr	r3, [pc, #240]	; (3b6c <_dtoa_r+0x378>)
    3a7a:	400a      	ands	r2, r1
    3a7c:	00d2      	lsls	r2, r2, #3
    3a7e:	189b      	adds	r3, r3, r2
    3a80:	685c      	ldr	r4, [r3, #4]
    3a82:	681b      	ldr	r3, [r3, #0]
    3a84:	9310      	str	r3, [sp, #64]	; 0x40
    3a86:	9411      	str	r4, [sp, #68]	; 0x44
    3a88:	9b03      	ldr	r3, [sp, #12]
    3a8a:	2402      	movs	r4, #2
    3a8c:	111d      	asrs	r5, r3, #4
    3a8e:	06eb      	lsls	r3, r5, #27
    3a90:	d50a      	bpl.n	3aa8 <_dtoa_r+0x2b4>
    3a92:	4b3a      	ldr	r3, [pc, #232]	; (3b7c <_dtoa_r+0x388>)
    3a94:	400d      	ands	r5, r1
    3a96:	6a1a      	ldr	r2, [r3, #32]
    3a98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3a9a:	9814      	ldr	r0, [sp, #80]	; 0x50
    3a9c:	9915      	ldr	r1, [sp, #84]	; 0x54
    3a9e:	f7fe f97b 	bl	1d98 <__aeabi_ddiv>
    3aa2:	9006      	str	r0, [sp, #24]
    3aa4:	9107      	str	r1, [sp, #28]
    3aa6:	3401      	adds	r4, #1
    3aa8:	4e34      	ldr	r6, [pc, #208]	; (3b7c <_dtoa_r+0x388>)
    3aaa:	2d00      	cmp	r5, #0
    3aac:	d130      	bne.n	3b10 <_dtoa_r+0x31c>
    3aae:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3ab0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3ab2:	9806      	ldr	r0, [sp, #24]
    3ab4:	9907      	ldr	r1, [sp, #28]
    3ab6:	f7fe f96f 	bl	1d98 <__aeabi_ddiv>
    3aba:	9006      	str	r0, [sp, #24]
    3abc:	9107      	str	r1, [sp, #28]
    3abe:	e07a      	b.n	3bb6 <_dtoa_r+0x3c2>
    3ac0:	2301      	movs	r3, #1
    3ac2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    3ac4:	930e      	str	r3, [sp, #56]	; 0x38
    3ac6:	4694      	mov	ip, r2
    3ac8:	9b03      	ldr	r3, [sp, #12]
    3aca:	4463      	add	r3, ip
    3acc:	1c5f      	adds	r7, r3, #1
    3ace:	930d      	str	r3, [sp, #52]	; 0x34
    3ad0:	1e3b      	subs	r3, r7, #0
    3ad2:	dcaf      	bgt.n	3a34 <_dtoa_r+0x240>
    3ad4:	2301      	movs	r3, #1
    3ad6:	e7ad      	b.n	3a34 <_dtoa_r+0x240>
    3ad8:	2300      	movs	r3, #0
    3ada:	e7a5      	b.n	3a28 <_dtoa_r+0x234>
    3adc:	2300      	movs	r3, #0
    3ade:	e7f0      	b.n	3ac2 <_dtoa_r+0x2ce>
    3ae0:	2300      	movs	r3, #0
    3ae2:	950e      	str	r5, [sp, #56]	; 0x38
    3ae4:	9322      	str	r3, [sp, #136]	; 0x88
    3ae6:	3b01      	subs	r3, #1
    3ae8:	2200      	movs	r2, #0
    3aea:	930d      	str	r3, [sp, #52]	; 0x34
    3aec:	001f      	movs	r7, r3
    3aee:	3313      	adds	r3, #19
    3af0:	9223      	str	r2, [sp, #140]	; 0x8c
    3af2:	e79f      	b.n	3a34 <_dtoa_r+0x240>
    3af4:	2301      	movs	r3, #1
    3af6:	930e      	str	r3, [sp, #56]	; 0x38
    3af8:	3b02      	subs	r3, #2
    3afa:	e7f5      	b.n	3ae8 <_dtoa_r+0x2f4>
    3afc:	2301      	movs	r3, #1
    3afe:	930d      	str	r3, [sp, #52]	; 0x34
    3b00:	001f      	movs	r7, r3
    3b02:	001a      	movs	r2, r3
    3b04:	e7f4      	b.n	3af0 <_dtoa_r+0x2fc>
    3b06:	6861      	ldr	r1, [r4, #4]
    3b08:	0052      	lsls	r2, r2, #1
    3b0a:	3101      	adds	r1, #1
    3b0c:	6061      	str	r1, [r4, #4]
    3b0e:	e796      	b.n	3a3e <_dtoa_r+0x24a>
    3b10:	2301      	movs	r3, #1
    3b12:	421d      	tst	r5, r3
    3b14:	d008      	beq.n	3b28 <_dtoa_r+0x334>
    3b16:	9810      	ldr	r0, [sp, #64]	; 0x40
    3b18:	9911      	ldr	r1, [sp, #68]	; 0x44
    3b1a:	18e4      	adds	r4, r4, r3
    3b1c:	6832      	ldr	r2, [r6, #0]
    3b1e:	6873      	ldr	r3, [r6, #4]
    3b20:	f7fe fc6e 	bl	2400 <__aeabi_dmul>
    3b24:	9010      	str	r0, [sp, #64]	; 0x40
    3b26:	9111      	str	r1, [sp, #68]	; 0x44
    3b28:	106d      	asrs	r5, r5, #1
    3b2a:	3608      	adds	r6, #8
    3b2c:	e7bd      	b.n	3aaa <_dtoa_r+0x2b6>
    3b2e:	46c0      	nop			; (mov r8, r8)
    3b30:	7ff00000 	.word	0x7ff00000
    3b34:	0000270f 	.word	0x0000270f
    3b38:	00005105 	.word	0x00005105
    3b3c:	00005108 	.word	0x00005108
    3b40:	00005109 	.word	0x00005109
    3b44:	0000510a 	.word	0x0000510a
    3b48:	3ff00000 	.word	0x3ff00000
    3b4c:	fffffc01 	.word	0xfffffc01
    3b50:	3ff80000 	.word	0x3ff80000
    3b54:	636f4361 	.word	0x636f4361
    3b58:	3fd287a7 	.word	0x3fd287a7
    3b5c:	8b60c8b3 	.word	0x8b60c8b3
    3b60:	3fc68a28 	.word	0x3fc68a28
    3b64:	509f79fb 	.word	0x509f79fb
    3b68:	3fd34413 	.word	0x3fd34413
    3b6c:	00005028 	.word	0x00005028
    3b70:	00000432 	.word	0x00000432
    3b74:	00000412 	.word	0x00000412
    3b78:	fe100000 	.word	0xfe100000
    3b7c:	00005000 	.word	0x00005000
    3b80:	9b03      	ldr	r3, [sp, #12]
    3b82:	2402      	movs	r4, #2
    3b84:	2b00      	cmp	r3, #0
    3b86:	d016      	beq.n	3bb6 <_dtoa_r+0x3c2>
    3b88:	9814      	ldr	r0, [sp, #80]	; 0x50
    3b8a:	9915      	ldr	r1, [sp, #84]	; 0x54
    3b8c:	425d      	negs	r5, r3
    3b8e:	230f      	movs	r3, #15
    3b90:	4aca      	ldr	r2, [pc, #808]	; (3ebc <_dtoa_r+0x6c8>)
    3b92:	402b      	ands	r3, r5
    3b94:	00db      	lsls	r3, r3, #3
    3b96:	18d3      	adds	r3, r2, r3
    3b98:	681a      	ldr	r2, [r3, #0]
    3b9a:	685b      	ldr	r3, [r3, #4]
    3b9c:	f7fe fc30 	bl	2400 <__aeabi_dmul>
    3ba0:	2300      	movs	r3, #0
    3ba2:	9006      	str	r0, [sp, #24]
    3ba4:	9107      	str	r1, [sp, #28]
    3ba6:	4ec6      	ldr	r6, [pc, #792]	; (3ec0 <_dtoa_r+0x6cc>)
    3ba8:	112d      	asrs	r5, r5, #4
    3baa:	2d00      	cmp	r5, #0
    3bac:	d000      	beq.n	3bb0 <_dtoa_r+0x3bc>
    3bae:	e08c      	b.n	3cca <_dtoa_r+0x4d6>
    3bb0:	2b00      	cmp	r3, #0
    3bb2:	d000      	beq.n	3bb6 <_dtoa_r+0x3c2>
    3bb4:	e781      	b.n	3aba <_dtoa_r+0x2c6>
    3bb6:	9b16      	ldr	r3, [sp, #88]	; 0x58
    3bb8:	2b00      	cmp	r3, #0
    3bba:	d100      	bne.n	3bbe <_dtoa_r+0x3ca>
    3bbc:	e091      	b.n	3ce2 <_dtoa_r+0x4ee>
    3bbe:	9a06      	ldr	r2, [sp, #24]
    3bc0:	9b07      	ldr	r3, [sp, #28]
    3bc2:	9210      	str	r2, [sp, #64]	; 0x40
    3bc4:	9311      	str	r3, [sp, #68]	; 0x44
    3bc6:	9810      	ldr	r0, [sp, #64]	; 0x40
    3bc8:	9911      	ldr	r1, [sp, #68]	; 0x44
    3bca:	2200      	movs	r2, #0
    3bcc:	4bbd      	ldr	r3, [pc, #756]	; (3ec4 <_dtoa_r+0x6d0>)
    3bce:	f000 fd0f 	bl	45f0 <__aeabi_dcmplt>
    3bd2:	2800      	cmp	r0, #0
    3bd4:	d100      	bne.n	3bd8 <_dtoa_r+0x3e4>
    3bd6:	e084      	b.n	3ce2 <_dtoa_r+0x4ee>
    3bd8:	2f00      	cmp	r7, #0
    3bda:	d100      	bne.n	3bde <_dtoa_r+0x3ea>
    3bdc:	e081      	b.n	3ce2 <_dtoa_r+0x4ee>
    3bde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3be0:	2b00      	cmp	r3, #0
    3be2:	dd3e      	ble.n	3c62 <_dtoa_r+0x46e>
    3be4:	9810      	ldr	r0, [sp, #64]	; 0x40
    3be6:	9911      	ldr	r1, [sp, #68]	; 0x44
    3be8:	9b03      	ldr	r3, [sp, #12]
    3bea:	2200      	movs	r2, #0
    3bec:	1e5e      	subs	r6, r3, #1
    3bee:	4bb6      	ldr	r3, [pc, #728]	; (3ec8 <_dtoa_r+0x6d4>)
    3bf0:	f7fe fc06 	bl	2400 <__aeabi_dmul>
    3bf4:	9006      	str	r0, [sp, #24]
    3bf6:	9107      	str	r1, [sp, #28]
    3bf8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    3bfa:	3401      	adds	r4, #1
    3bfc:	0020      	movs	r0, r4
    3bfe:	f7fe feb3 	bl	2968 <__aeabi_i2d>
    3c02:	9a06      	ldr	r2, [sp, #24]
    3c04:	9b07      	ldr	r3, [sp, #28]
    3c06:	f7fe fbfb 	bl	2400 <__aeabi_dmul>
    3c0a:	2200      	movs	r2, #0
    3c0c:	4baf      	ldr	r3, [pc, #700]	; (3ecc <_dtoa_r+0x6d8>)
    3c0e:	f7fd fdb3 	bl	1778 <__aeabi_dadd>
    3c12:	9012      	str	r0, [sp, #72]	; 0x48
    3c14:	9113      	str	r1, [sp, #76]	; 0x4c
    3c16:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3c18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    3c1a:	4aad      	ldr	r2, [pc, #692]	; (3ed0 <_dtoa_r+0x6dc>)
    3c1c:	9310      	str	r3, [sp, #64]	; 0x40
    3c1e:	9411      	str	r4, [sp, #68]	; 0x44
    3c20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    3c22:	189c      	adds	r4, r3, r2
    3c24:	9411      	str	r4, [sp, #68]	; 0x44
    3c26:	2d00      	cmp	r5, #0
    3c28:	d15e      	bne.n	3ce8 <_dtoa_r+0x4f4>
    3c2a:	9806      	ldr	r0, [sp, #24]
    3c2c:	9907      	ldr	r1, [sp, #28]
    3c2e:	2200      	movs	r2, #0
    3c30:	4ba8      	ldr	r3, [pc, #672]	; (3ed4 <_dtoa_r+0x6e0>)
    3c32:	f000 fe05 	bl	4840 <__aeabi_dsub>
    3c36:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3c38:	0023      	movs	r3, r4
    3c3a:	9006      	str	r0, [sp, #24]
    3c3c:	9107      	str	r1, [sp, #28]
    3c3e:	f000 fceb 	bl	4618 <__aeabi_dcmpgt>
    3c42:	2800      	cmp	r0, #0
    3c44:	d000      	beq.n	3c48 <_dtoa_r+0x454>
    3c46:	e301      	b.n	424c <_dtoa_r+0xa58>
    3c48:	48a3      	ldr	r0, [pc, #652]	; (3ed8 <_dtoa_r+0x6e4>)
    3c4a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    3c4c:	4684      	mov	ip, r0
    3c4e:	4461      	add	r1, ip
    3c50:	000b      	movs	r3, r1
    3c52:	9806      	ldr	r0, [sp, #24]
    3c54:	9907      	ldr	r1, [sp, #28]
    3c56:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3c58:	f000 fcca 	bl	45f0 <__aeabi_dcmplt>
    3c5c:	2800      	cmp	r0, #0
    3c5e:	d000      	beq.n	3c62 <_dtoa_r+0x46e>
    3c60:	e2e8      	b.n	4234 <_dtoa_r+0xa40>
    3c62:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3c64:	9c15      	ldr	r4, [sp, #84]	; 0x54
    3c66:	9306      	str	r3, [sp, #24]
    3c68:	9407      	str	r4, [sp, #28]
    3c6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    3c6c:	2b00      	cmp	r3, #0
    3c6e:	da00      	bge.n	3c72 <_dtoa_r+0x47e>
    3c70:	e157      	b.n	3f22 <_dtoa_r+0x72e>
    3c72:	9a03      	ldr	r2, [sp, #12]
    3c74:	2a0e      	cmp	r2, #14
    3c76:	dd00      	ble.n	3c7a <_dtoa_r+0x486>
    3c78:	e153      	b.n	3f22 <_dtoa_r+0x72e>
    3c7a:	4b90      	ldr	r3, [pc, #576]	; (3ebc <_dtoa_r+0x6c8>)
    3c7c:	00d2      	lsls	r2, r2, #3
    3c7e:	189b      	adds	r3, r3, r2
    3c80:	685c      	ldr	r4, [r3, #4]
    3c82:	681b      	ldr	r3, [r3, #0]
    3c84:	9308      	str	r3, [sp, #32]
    3c86:	9409      	str	r4, [sp, #36]	; 0x24
    3c88:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3c8a:	2b00      	cmp	r3, #0
    3c8c:	db00      	blt.n	3c90 <_dtoa_r+0x49c>
    3c8e:	e0ce      	b.n	3e2e <_dtoa_r+0x63a>
    3c90:	2f00      	cmp	r7, #0
    3c92:	dd00      	ble.n	3c96 <_dtoa_r+0x4a2>
    3c94:	e0cb      	b.n	3e2e <_dtoa_r+0x63a>
    3c96:	d000      	beq.n	3c9a <_dtoa_r+0x4a6>
    3c98:	e2cf      	b.n	423a <_dtoa_r+0xa46>
    3c9a:	9808      	ldr	r0, [sp, #32]
    3c9c:	9909      	ldr	r1, [sp, #36]	; 0x24
    3c9e:	2200      	movs	r2, #0
    3ca0:	4b8c      	ldr	r3, [pc, #560]	; (3ed4 <_dtoa_r+0x6e0>)
    3ca2:	f7fe fbad 	bl	2400 <__aeabi_dmul>
    3ca6:	9a06      	ldr	r2, [sp, #24]
    3ca8:	9b07      	ldr	r3, [sp, #28]
    3caa:	f000 fcbf 	bl	462c <__aeabi_dcmpge>
    3cae:	003e      	movs	r6, r7
    3cb0:	9708      	str	r7, [sp, #32]
    3cb2:	2800      	cmp	r0, #0
    3cb4:	d000      	beq.n	3cb8 <_dtoa_r+0x4c4>
    3cb6:	e2a4      	b.n	4202 <_dtoa_r+0xa0e>
    3cb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3cba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3cbc:	1c5d      	adds	r5, r3, #1
    3cbe:	2331      	movs	r3, #49	; 0x31
    3cc0:	7013      	strb	r3, [r2, #0]
    3cc2:	9b03      	ldr	r3, [sp, #12]
    3cc4:	3301      	adds	r3, #1
    3cc6:	9303      	str	r3, [sp, #12]
    3cc8:	e29f      	b.n	420a <_dtoa_r+0xa16>
    3cca:	2201      	movs	r2, #1
    3ccc:	4215      	tst	r5, r2
    3cce:	d005      	beq.n	3cdc <_dtoa_r+0x4e8>
    3cd0:	18a4      	adds	r4, r4, r2
    3cd2:	6832      	ldr	r2, [r6, #0]
    3cd4:	6873      	ldr	r3, [r6, #4]
    3cd6:	f7fe fb93 	bl	2400 <__aeabi_dmul>
    3cda:	2301      	movs	r3, #1
    3cdc:	106d      	asrs	r5, r5, #1
    3cde:	3608      	adds	r6, #8
    3ce0:	e763      	b.n	3baa <_dtoa_r+0x3b6>
    3ce2:	9e03      	ldr	r6, [sp, #12]
    3ce4:	003d      	movs	r5, r7
    3ce6:	e789      	b.n	3bfc <_dtoa_r+0x408>
    3ce8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3cea:	1e69      	subs	r1, r5, #1
    3cec:	1952      	adds	r2, r2, r5
    3cee:	9217      	str	r2, [sp, #92]	; 0x5c
    3cf0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3cf2:	4b72      	ldr	r3, [pc, #456]	; (3ebc <_dtoa_r+0x6c8>)
    3cf4:	00c9      	lsls	r1, r1, #3
    3cf6:	2a00      	cmp	r2, #0
    3cf8:	d04a      	beq.n	3d90 <_dtoa_r+0x59c>
    3cfa:	185b      	adds	r3, r3, r1
    3cfc:	681a      	ldr	r2, [r3, #0]
    3cfe:	685b      	ldr	r3, [r3, #4]
    3d00:	2000      	movs	r0, #0
    3d02:	4976      	ldr	r1, [pc, #472]	; (3edc <_dtoa_r+0x6e8>)
    3d04:	f7fe f848 	bl	1d98 <__aeabi_ddiv>
    3d08:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3d0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3d0c:	f000 fd98 	bl	4840 <__aeabi_dsub>
    3d10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3d12:	9010      	str	r0, [sp, #64]	; 0x40
    3d14:	9111      	str	r1, [sp, #68]	; 0x44
    3d16:	9312      	str	r3, [sp, #72]	; 0x48
    3d18:	9806      	ldr	r0, [sp, #24]
    3d1a:	9907      	ldr	r1, [sp, #28]
    3d1c:	f7fe fdf0 	bl	2900 <__aeabi_d2iz>
    3d20:	0004      	movs	r4, r0
    3d22:	f7fe fe21 	bl	2968 <__aeabi_i2d>
    3d26:	0002      	movs	r2, r0
    3d28:	000b      	movs	r3, r1
    3d2a:	9806      	ldr	r0, [sp, #24]
    3d2c:	9907      	ldr	r1, [sp, #28]
    3d2e:	f000 fd87 	bl	4840 <__aeabi_dsub>
    3d32:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3d34:	3430      	adds	r4, #48	; 0x30
    3d36:	1c5d      	adds	r5, r3, #1
    3d38:	701c      	strb	r4, [r3, #0]
    3d3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3d3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3d3e:	9006      	str	r0, [sp, #24]
    3d40:	9107      	str	r1, [sp, #28]
    3d42:	f000 fc55 	bl	45f0 <__aeabi_dcmplt>
    3d46:	2800      	cmp	r0, #0
    3d48:	d165      	bne.n	3e16 <_dtoa_r+0x622>
    3d4a:	9a06      	ldr	r2, [sp, #24]
    3d4c:	9b07      	ldr	r3, [sp, #28]
    3d4e:	2000      	movs	r0, #0
    3d50:	495c      	ldr	r1, [pc, #368]	; (3ec4 <_dtoa_r+0x6d0>)
    3d52:	f000 fd75 	bl	4840 <__aeabi_dsub>
    3d56:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3d58:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3d5a:	f000 fc49 	bl	45f0 <__aeabi_dcmplt>
    3d5e:	2800      	cmp	r0, #0
    3d60:	d000      	beq.n	3d64 <_dtoa_r+0x570>
    3d62:	e0be      	b.n	3ee2 <_dtoa_r+0x6ee>
    3d64:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    3d66:	429d      	cmp	r5, r3
    3d68:	d100      	bne.n	3d6c <_dtoa_r+0x578>
    3d6a:	e77a      	b.n	3c62 <_dtoa_r+0x46e>
    3d6c:	9810      	ldr	r0, [sp, #64]	; 0x40
    3d6e:	9911      	ldr	r1, [sp, #68]	; 0x44
    3d70:	2200      	movs	r2, #0
    3d72:	4b55      	ldr	r3, [pc, #340]	; (3ec8 <_dtoa_r+0x6d4>)
    3d74:	f7fe fb44 	bl	2400 <__aeabi_dmul>
    3d78:	2200      	movs	r2, #0
    3d7a:	9010      	str	r0, [sp, #64]	; 0x40
    3d7c:	9111      	str	r1, [sp, #68]	; 0x44
    3d7e:	9806      	ldr	r0, [sp, #24]
    3d80:	9907      	ldr	r1, [sp, #28]
    3d82:	4b51      	ldr	r3, [pc, #324]	; (3ec8 <_dtoa_r+0x6d4>)
    3d84:	f7fe fb3c 	bl	2400 <__aeabi_dmul>
    3d88:	9512      	str	r5, [sp, #72]	; 0x48
    3d8a:	9006      	str	r0, [sp, #24]
    3d8c:	9107      	str	r1, [sp, #28]
    3d8e:	e7c3      	b.n	3d18 <_dtoa_r+0x524>
    3d90:	1859      	adds	r1, r3, r1
    3d92:	6808      	ldr	r0, [r1, #0]
    3d94:	6849      	ldr	r1, [r1, #4]
    3d96:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3d98:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3d9a:	f7fe fb31 	bl	2400 <__aeabi_dmul>
    3d9e:	9010      	str	r0, [sp, #64]	; 0x40
    3da0:	9111      	str	r1, [sp, #68]	; 0x44
    3da2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    3da4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    3da6:	9806      	ldr	r0, [sp, #24]
    3da8:	9907      	ldr	r1, [sp, #28]
    3daa:	f7fe fda9 	bl	2900 <__aeabi_d2iz>
    3dae:	9012      	str	r0, [sp, #72]	; 0x48
    3db0:	f7fe fdda 	bl	2968 <__aeabi_i2d>
    3db4:	0002      	movs	r2, r0
    3db6:	000b      	movs	r3, r1
    3db8:	9806      	ldr	r0, [sp, #24]
    3dba:	9907      	ldr	r1, [sp, #28]
    3dbc:	f000 fd40 	bl	4840 <__aeabi_dsub>
    3dc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3dc2:	9006      	str	r0, [sp, #24]
    3dc4:	9107      	str	r1, [sp, #28]
    3dc6:	3330      	adds	r3, #48	; 0x30
    3dc8:	7023      	strb	r3, [r4, #0]
    3dca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    3dcc:	3401      	adds	r4, #1
    3dce:	2200      	movs	r2, #0
    3dd0:	42a3      	cmp	r3, r4
    3dd2:	d124      	bne.n	3e1e <_dtoa_r+0x62a>
    3dd4:	4b41      	ldr	r3, [pc, #260]	; (3edc <_dtoa_r+0x6e8>)
    3dd6:	9810      	ldr	r0, [sp, #64]	; 0x40
    3dd8:	9911      	ldr	r1, [sp, #68]	; 0x44
    3dda:	f7fd fccd 	bl	1778 <__aeabi_dadd>
    3dde:	0002      	movs	r2, r0
    3de0:	000b      	movs	r3, r1
    3de2:	9806      	ldr	r0, [sp, #24]
    3de4:	9907      	ldr	r1, [sp, #28]
    3de6:	f000 fc17 	bl	4618 <__aeabi_dcmpgt>
    3dea:	2800      	cmp	r0, #0
    3dec:	d000      	beq.n	3df0 <_dtoa_r+0x5fc>
    3dee:	e078      	b.n	3ee2 <_dtoa_r+0x6ee>
    3df0:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3df2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3df4:	2000      	movs	r0, #0
    3df6:	4939      	ldr	r1, [pc, #228]	; (3edc <_dtoa_r+0x6e8>)
    3df8:	f000 fd22 	bl	4840 <__aeabi_dsub>
    3dfc:	0002      	movs	r2, r0
    3dfe:	000b      	movs	r3, r1
    3e00:	9806      	ldr	r0, [sp, #24]
    3e02:	9907      	ldr	r1, [sp, #28]
    3e04:	f000 fbf4 	bl	45f0 <__aeabi_dcmplt>
    3e08:	2800      	cmp	r0, #0
    3e0a:	d100      	bne.n	3e0e <_dtoa_r+0x61a>
    3e0c:	e729      	b.n	3c62 <_dtoa_r+0x46e>
    3e0e:	1e6b      	subs	r3, r5, #1
    3e10:	781a      	ldrb	r2, [r3, #0]
    3e12:	2a30      	cmp	r2, #48	; 0x30
    3e14:	d001      	beq.n	3e1a <_dtoa_r+0x626>
    3e16:	9603      	str	r6, [sp, #12]
    3e18:	e03f      	b.n	3e9a <_dtoa_r+0x6a6>
    3e1a:	001d      	movs	r5, r3
    3e1c:	e7f7      	b.n	3e0e <_dtoa_r+0x61a>
    3e1e:	9806      	ldr	r0, [sp, #24]
    3e20:	9907      	ldr	r1, [sp, #28]
    3e22:	4b29      	ldr	r3, [pc, #164]	; (3ec8 <_dtoa_r+0x6d4>)
    3e24:	f7fe faec 	bl	2400 <__aeabi_dmul>
    3e28:	9006      	str	r0, [sp, #24]
    3e2a:	9107      	str	r1, [sp, #28]
    3e2c:	e7bb      	b.n	3da6 <_dtoa_r+0x5b2>
    3e2e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    3e30:	9a08      	ldr	r2, [sp, #32]
    3e32:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3e34:	9806      	ldr	r0, [sp, #24]
    3e36:	9907      	ldr	r1, [sp, #28]
    3e38:	f7fd ffae 	bl	1d98 <__aeabi_ddiv>
    3e3c:	f7fe fd60 	bl	2900 <__aeabi_d2iz>
    3e40:	0004      	movs	r4, r0
    3e42:	f7fe fd91 	bl	2968 <__aeabi_i2d>
    3e46:	9a08      	ldr	r2, [sp, #32]
    3e48:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3e4a:	f7fe fad9 	bl	2400 <__aeabi_dmul>
    3e4e:	000b      	movs	r3, r1
    3e50:	0002      	movs	r2, r0
    3e52:	9806      	ldr	r0, [sp, #24]
    3e54:	9907      	ldr	r1, [sp, #28]
    3e56:	f000 fcf3 	bl	4840 <__aeabi_dsub>
    3e5a:	0023      	movs	r3, r4
    3e5c:	3330      	adds	r3, #48	; 0x30
    3e5e:	7033      	strb	r3, [r6, #0]
    3e60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3e62:	1c75      	adds	r5, r6, #1
    3e64:	1aeb      	subs	r3, r5, r3
    3e66:	429f      	cmp	r7, r3
    3e68:	d14c      	bne.n	3f04 <_dtoa_r+0x710>
    3e6a:	0002      	movs	r2, r0
    3e6c:	000b      	movs	r3, r1
    3e6e:	f7fd fc83 	bl	1778 <__aeabi_dadd>
    3e72:	0006      	movs	r6, r0
    3e74:	000f      	movs	r7, r1
    3e76:	0002      	movs	r2, r0
    3e78:	000b      	movs	r3, r1
    3e7a:	9808      	ldr	r0, [sp, #32]
    3e7c:	9909      	ldr	r1, [sp, #36]	; 0x24
    3e7e:	f000 fbb7 	bl	45f0 <__aeabi_dcmplt>
    3e82:	2800      	cmp	r0, #0
    3e84:	d12c      	bne.n	3ee0 <_dtoa_r+0x6ec>
    3e86:	9808      	ldr	r0, [sp, #32]
    3e88:	9909      	ldr	r1, [sp, #36]	; 0x24
    3e8a:	0032      	movs	r2, r6
    3e8c:	003b      	movs	r3, r7
    3e8e:	f000 fba9 	bl	45e4 <__aeabi_dcmpeq>
    3e92:	2800      	cmp	r0, #0
    3e94:	d001      	beq.n	3e9a <_dtoa_r+0x6a6>
    3e96:	07e3      	lsls	r3, r4, #31
    3e98:	d422      	bmi.n	3ee0 <_dtoa_r+0x6ec>
    3e9a:	9905      	ldr	r1, [sp, #20]
    3e9c:	9804      	ldr	r0, [sp, #16]
    3e9e:	f7ff f8da 	bl	3056 <_Bfree>
    3ea2:	2300      	movs	r3, #0
    3ea4:	702b      	strb	r3, [r5, #0]
    3ea6:	9b03      	ldr	r3, [sp, #12]
    3ea8:	9a24      	ldr	r2, [sp, #144]	; 0x90
    3eaa:	3301      	adds	r3, #1
    3eac:	6013      	str	r3, [r2, #0]
    3eae:	9b26      	ldr	r3, [sp, #152]	; 0x98
    3eb0:	2b00      	cmp	r3, #0
    3eb2:	d100      	bne.n	3eb6 <_dtoa_r+0x6c2>
    3eb4:	e275      	b.n	43a2 <_dtoa_r+0xbae>
    3eb6:	601d      	str	r5, [r3, #0]
    3eb8:	e273      	b.n	43a2 <_dtoa_r+0xbae>
    3eba:	46c0      	nop			; (mov r8, r8)
    3ebc:	00005028 	.word	0x00005028
    3ec0:	00005000 	.word	0x00005000
    3ec4:	3ff00000 	.word	0x3ff00000
    3ec8:	40240000 	.word	0x40240000
    3ecc:	401c0000 	.word	0x401c0000
    3ed0:	fcc00000 	.word	0xfcc00000
    3ed4:	40140000 	.word	0x40140000
    3ed8:	7cc00000 	.word	0x7cc00000
    3edc:	3fe00000 	.word	0x3fe00000
    3ee0:	9e03      	ldr	r6, [sp, #12]
    3ee2:	1e6b      	subs	r3, r5, #1
    3ee4:	781a      	ldrb	r2, [r3, #0]
    3ee6:	2a39      	cmp	r2, #57	; 0x39
    3ee8:	d106      	bne.n	3ef8 <_dtoa_r+0x704>
    3eea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3eec:	429a      	cmp	r2, r3
    3eee:	d107      	bne.n	3f00 <_dtoa_r+0x70c>
    3ef0:	2330      	movs	r3, #48	; 0x30
    3ef2:	7013      	strb	r3, [r2, #0]
    3ef4:	0013      	movs	r3, r2
    3ef6:	3601      	adds	r6, #1
    3ef8:	781a      	ldrb	r2, [r3, #0]
    3efa:	3201      	adds	r2, #1
    3efc:	701a      	strb	r2, [r3, #0]
    3efe:	e78a      	b.n	3e16 <_dtoa_r+0x622>
    3f00:	001d      	movs	r5, r3
    3f02:	e7ee      	b.n	3ee2 <_dtoa_r+0x6ee>
    3f04:	2200      	movs	r2, #0
    3f06:	4bcf      	ldr	r3, [pc, #828]	; (4244 <_dtoa_r+0xa50>)
    3f08:	f7fe fa7a 	bl	2400 <__aeabi_dmul>
    3f0c:	2200      	movs	r2, #0
    3f0e:	2300      	movs	r3, #0
    3f10:	9006      	str	r0, [sp, #24]
    3f12:	9107      	str	r1, [sp, #28]
    3f14:	002e      	movs	r6, r5
    3f16:	f000 fb65 	bl	45e4 <__aeabi_dcmpeq>
    3f1a:	2800      	cmp	r0, #0
    3f1c:	d100      	bne.n	3f20 <_dtoa_r+0x72c>
    3f1e:	e787      	b.n	3e30 <_dtoa_r+0x63c>
    3f20:	e7bb      	b.n	3e9a <_dtoa_r+0x6a6>
    3f22:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3f24:	2a00      	cmp	r2, #0
    3f26:	d100      	bne.n	3f2a <_dtoa_r+0x736>
    3f28:	e087      	b.n	403a <_dtoa_r+0x846>
    3f2a:	9a22      	ldr	r2, [sp, #136]	; 0x88
    3f2c:	2a01      	cmp	r2, #1
    3f2e:	dc6e      	bgt.n	400e <_dtoa_r+0x81a>
    3f30:	9a18      	ldr	r2, [sp, #96]	; 0x60
    3f32:	2a00      	cmp	r2, #0
    3f34:	d067      	beq.n	4006 <_dtoa_r+0x812>
    3f36:	4ac4      	ldr	r2, [pc, #784]	; (4248 <_dtoa_r+0xa54>)
    3f38:	189b      	adds	r3, r3, r2
    3f3a:	9d08      	ldr	r5, [sp, #32]
    3f3c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    3f3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3f40:	2101      	movs	r1, #1
    3f42:	18d2      	adds	r2, r2, r3
    3f44:	920b      	str	r2, [sp, #44]	; 0x2c
    3f46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3f48:	9804      	ldr	r0, [sp, #16]
    3f4a:	18d3      	adds	r3, r2, r3
    3f4c:	930c      	str	r3, [sp, #48]	; 0x30
    3f4e:	f7ff f920 	bl	3192 <__i2b>
    3f52:	0006      	movs	r6, r0
    3f54:	2c00      	cmp	r4, #0
    3f56:	dd0e      	ble.n	3f76 <_dtoa_r+0x782>
    3f58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3f5a:	2b00      	cmp	r3, #0
    3f5c:	dd0b      	ble.n	3f76 <_dtoa_r+0x782>
    3f5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3f60:	0023      	movs	r3, r4
    3f62:	4294      	cmp	r4, r2
    3f64:	dd00      	ble.n	3f68 <_dtoa_r+0x774>
    3f66:	0013      	movs	r3, r2
    3f68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3f6a:	1ae4      	subs	r4, r4, r3
    3f6c:	1ad2      	subs	r2, r2, r3
    3f6e:	920b      	str	r2, [sp, #44]	; 0x2c
    3f70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3f72:	1ad3      	subs	r3, r2, r3
    3f74:	930c      	str	r3, [sp, #48]	; 0x30
    3f76:	9b08      	ldr	r3, [sp, #32]
    3f78:	2b00      	cmp	r3, #0
    3f7a:	d01e      	beq.n	3fba <_dtoa_r+0x7c6>
    3f7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3f7e:	2b00      	cmp	r3, #0
    3f80:	d05f      	beq.n	4042 <_dtoa_r+0x84e>
    3f82:	2d00      	cmp	r5, #0
    3f84:	dd11      	ble.n	3faa <_dtoa_r+0x7b6>
    3f86:	0031      	movs	r1, r6
    3f88:	002a      	movs	r2, r5
    3f8a:	9804      	ldr	r0, [sp, #16]
    3f8c:	f7ff f99a 	bl	32c4 <__pow5mult>
    3f90:	9a05      	ldr	r2, [sp, #20]
    3f92:	0001      	movs	r1, r0
    3f94:	0006      	movs	r6, r0
    3f96:	9804      	ldr	r0, [sp, #16]
    3f98:	f7ff f904 	bl	31a4 <__multiply>
    3f9c:	9905      	ldr	r1, [sp, #20]
    3f9e:	9010      	str	r0, [sp, #64]	; 0x40
    3fa0:	9804      	ldr	r0, [sp, #16]
    3fa2:	f7ff f858 	bl	3056 <_Bfree>
    3fa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    3fa8:	9305      	str	r3, [sp, #20]
    3faa:	9b08      	ldr	r3, [sp, #32]
    3fac:	1b5a      	subs	r2, r3, r5
    3fae:	d004      	beq.n	3fba <_dtoa_r+0x7c6>
    3fb0:	9905      	ldr	r1, [sp, #20]
    3fb2:	9804      	ldr	r0, [sp, #16]
    3fb4:	f7ff f986 	bl	32c4 <__pow5mult>
    3fb8:	9005      	str	r0, [sp, #20]
    3fba:	2101      	movs	r1, #1
    3fbc:	9804      	ldr	r0, [sp, #16]
    3fbe:	f7ff f8e8 	bl	3192 <__i2b>
    3fc2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3fc4:	9008      	str	r0, [sp, #32]
    3fc6:	2b00      	cmp	r3, #0
    3fc8:	dd3d      	ble.n	4046 <_dtoa_r+0x852>
    3fca:	001a      	movs	r2, r3
    3fcc:	0001      	movs	r1, r0
    3fce:	9804      	ldr	r0, [sp, #16]
    3fd0:	f7ff f978 	bl	32c4 <__pow5mult>
    3fd4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3fd6:	9008      	str	r0, [sp, #32]
    3fd8:	2500      	movs	r5, #0
    3fda:	2b01      	cmp	r3, #1
    3fdc:	dc3b      	bgt.n	4056 <_dtoa_r+0x862>
    3fde:	2500      	movs	r5, #0
    3fe0:	9b06      	ldr	r3, [sp, #24]
    3fe2:	42ab      	cmp	r3, r5
    3fe4:	d133      	bne.n	404e <_dtoa_r+0x85a>
    3fe6:	9b07      	ldr	r3, [sp, #28]
    3fe8:	031b      	lsls	r3, r3, #12
    3fea:	42ab      	cmp	r3, r5
    3fec:	d12f      	bne.n	404e <_dtoa_r+0x85a>
    3fee:	9b19      	ldr	r3, [sp, #100]	; 0x64
    3ff0:	9a07      	ldr	r2, [sp, #28]
    3ff2:	4213      	tst	r3, r2
    3ff4:	d02b      	beq.n	404e <_dtoa_r+0x85a>
    3ff6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3ff8:	3501      	adds	r5, #1
    3ffa:	3301      	adds	r3, #1
    3ffc:	930b      	str	r3, [sp, #44]	; 0x2c
    3ffe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4000:	3301      	adds	r3, #1
    4002:	930c      	str	r3, [sp, #48]	; 0x30
    4004:	e023      	b.n	404e <_dtoa_r+0x85a>
    4006:	2336      	movs	r3, #54	; 0x36
    4008:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    400a:	1a9b      	subs	r3, r3, r2
    400c:	e795      	b.n	3f3a <_dtoa_r+0x746>
    400e:	9b08      	ldr	r3, [sp, #32]
    4010:	1e7d      	subs	r5, r7, #1
    4012:	42ab      	cmp	r3, r5
    4014:	db06      	blt.n	4024 <_dtoa_r+0x830>
    4016:	1b5d      	subs	r5, r3, r5
    4018:	2f00      	cmp	r7, #0
    401a:	da0b      	bge.n	4034 <_dtoa_r+0x840>
    401c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    401e:	1bdc      	subs	r4, r3, r7
    4020:	2300      	movs	r3, #0
    4022:	e78c      	b.n	3f3e <_dtoa_r+0x74a>
    4024:	9b08      	ldr	r3, [sp, #32]
    4026:	9508      	str	r5, [sp, #32]
    4028:	1aea      	subs	r2, r5, r3
    402a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    402c:	2500      	movs	r5, #0
    402e:	189b      	adds	r3, r3, r2
    4030:	930f      	str	r3, [sp, #60]	; 0x3c
    4032:	e7f1      	b.n	4018 <_dtoa_r+0x824>
    4034:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    4036:	003b      	movs	r3, r7
    4038:	e781      	b.n	3f3e <_dtoa_r+0x74a>
    403a:	9d08      	ldr	r5, [sp, #32]
    403c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    403e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    4040:	e788      	b.n	3f54 <_dtoa_r+0x760>
    4042:	9a08      	ldr	r2, [sp, #32]
    4044:	e7b4      	b.n	3fb0 <_dtoa_r+0x7bc>
    4046:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4048:	2500      	movs	r5, #0
    404a:	2b01      	cmp	r3, #1
    404c:	ddc7      	ble.n	3fde <_dtoa_r+0x7ea>
    404e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    4050:	2001      	movs	r0, #1
    4052:	2b00      	cmp	r3, #0
    4054:	d00b      	beq.n	406e <_dtoa_r+0x87a>
    4056:	9b08      	ldr	r3, [sp, #32]
    4058:	9a08      	ldr	r2, [sp, #32]
    405a:	691b      	ldr	r3, [r3, #16]
    405c:	930f      	str	r3, [sp, #60]	; 0x3c
    405e:	3303      	adds	r3, #3
    4060:	009b      	lsls	r3, r3, #2
    4062:	18d3      	adds	r3, r2, r3
    4064:	6858      	ldr	r0, [r3, #4]
    4066:	f7ff f84b 	bl	3100 <__hi0bits>
    406a:	2320      	movs	r3, #32
    406c:	1a18      	subs	r0, r3, r0
    406e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4070:	18c0      	adds	r0, r0, r3
    4072:	231f      	movs	r3, #31
    4074:	4018      	ands	r0, r3
    4076:	d100      	bne.n	407a <_dtoa_r+0x886>
    4078:	e0ab      	b.n	41d2 <_dtoa_r+0x9de>
    407a:	3301      	adds	r3, #1
    407c:	1a1b      	subs	r3, r3, r0
    407e:	2b04      	cmp	r3, #4
    4080:	dc00      	bgt.n	4084 <_dtoa_r+0x890>
    4082:	e09b      	b.n	41bc <_dtoa_r+0x9c8>
    4084:	231c      	movs	r3, #28
    4086:	1a18      	subs	r0, r3, r0
    4088:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    408a:	1824      	adds	r4, r4, r0
    408c:	181b      	adds	r3, r3, r0
    408e:	930b      	str	r3, [sp, #44]	; 0x2c
    4090:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4092:	181b      	adds	r3, r3, r0
    4094:	930c      	str	r3, [sp, #48]	; 0x30
    4096:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4098:	2b00      	cmp	r3, #0
    409a:	dd05      	ble.n	40a8 <_dtoa_r+0x8b4>
    409c:	001a      	movs	r2, r3
    409e:	9905      	ldr	r1, [sp, #20]
    40a0:	9804      	ldr	r0, [sp, #16]
    40a2:	f7ff f961 	bl	3368 <__lshift>
    40a6:	9005      	str	r0, [sp, #20]
    40a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    40aa:	2b00      	cmp	r3, #0
    40ac:	dd05      	ble.n	40ba <_dtoa_r+0x8c6>
    40ae:	001a      	movs	r2, r3
    40b0:	9908      	ldr	r1, [sp, #32]
    40b2:	9804      	ldr	r0, [sp, #16]
    40b4:	f7ff f958 	bl	3368 <__lshift>
    40b8:	9008      	str	r0, [sp, #32]
    40ba:	9b16      	ldr	r3, [sp, #88]	; 0x58
    40bc:	2b00      	cmp	r3, #0
    40be:	d100      	bne.n	40c2 <_dtoa_r+0x8ce>
    40c0:	e089      	b.n	41d6 <_dtoa_r+0x9e2>
    40c2:	9908      	ldr	r1, [sp, #32]
    40c4:	9805      	ldr	r0, [sp, #20]
    40c6:	f7ff f9a0 	bl	340a <__mcmp>
    40ca:	2800      	cmp	r0, #0
    40cc:	db00      	blt.n	40d0 <_dtoa_r+0x8dc>
    40ce:	e082      	b.n	41d6 <_dtoa_r+0x9e2>
    40d0:	9b03      	ldr	r3, [sp, #12]
    40d2:	220a      	movs	r2, #10
    40d4:	3b01      	subs	r3, #1
    40d6:	9303      	str	r3, [sp, #12]
    40d8:	9905      	ldr	r1, [sp, #20]
    40da:	2300      	movs	r3, #0
    40dc:	9804      	ldr	r0, [sp, #16]
    40de:	f7fe ffd3 	bl	3088 <__multadd>
    40e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    40e4:	9005      	str	r0, [sp, #20]
    40e6:	2b00      	cmp	r3, #0
    40e8:	d100      	bne.n	40ec <_dtoa_r+0x8f8>
    40ea:	e15d      	b.n	43a8 <_dtoa_r+0xbb4>
    40ec:	2300      	movs	r3, #0
    40ee:	0031      	movs	r1, r6
    40f0:	220a      	movs	r2, #10
    40f2:	9804      	ldr	r0, [sp, #16]
    40f4:	f7fe ffc8 	bl	3088 <__multadd>
    40f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    40fa:	0006      	movs	r6, r0
    40fc:	2b00      	cmp	r3, #0
    40fe:	dc02      	bgt.n	4106 <_dtoa_r+0x912>
    4100:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4102:	2b02      	cmp	r3, #2
    4104:	dc6d      	bgt.n	41e2 <_dtoa_r+0x9ee>
    4106:	2c00      	cmp	r4, #0
    4108:	dd05      	ble.n	4116 <_dtoa_r+0x922>
    410a:	0031      	movs	r1, r6
    410c:	0022      	movs	r2, r4
    410e:	9804      	ldr	r0, [sp, #16]
    4110:	f7ff f92a 	bl	3368 <__lshift>
    4114:	0006      	movs	r6, r0
    4116:	0030      	movs	r0, r6
    4118:	2d00      	cmp	r5, #0
    411a:	d011      	beq.n	4140 <_dtoa_r+0x94c>
    411c:	6871      	ldr	r1, [r6, #4]
    411e:	9804      	ldr	r0, [sp, #16]
    4120:	f7fe ff61 	bl	2fe6 <_Balloc>
    4124:	0031      	movs	r1, r6
    4126:	0004      	movs	r4, r0
    4128:	6933      	ldr	r3, [r6, #16]
    412a:	310c      	adds	r1, #12
    412c:	1c9a      	adds	r2, r3, #2
    412e:	0092      	lsls	r2, r2, #2
    4130:	300c      	adds	r0, #12
    4132:	f7fe ff4f 	bl	2fd4 <memcpy>
    4136:	2201      	movs	r2, #1
    4138:	0021      	movs	r1, r4
    413a:	9804      	ldr	r0, [sp, #16]
    413c:	f7ff f914 	bl	3368 <__lshift>
    4140:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    4142:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4144:	3f01      	subs	r7, #1
    4146:	930b      	str	r3, [sp, #44]	; 0x2c
    4148:	19db      	adds	r3, r3, r7
    414a:	0037      	movs	r7, r6
    414c:	0006      	movs	r6, r0
    414e:	930f      	str	r3, [sp, #60]	; 0x3c
    4150:	9908      	ldr	r1, [sp, #32]
    4152:	9805      	ldr	r0, [sp, #20]
    4154:	f7ff faca 	bl	36ec <quorem>
    4158:	0039      	movs	r1, r7
    415a:	900d      	str	r0, [sp, #52]	; 0x34
    415c:	0004      	movs	r4, r0
    415e:	9805      	ldr	r0, [sp, #20]
    4160:	f7ff f953 	bl	340a <__mcmp>
    4164:	0032      	movs	r2, r6
    4166:	900e      	str	r0, [sp, #56]	; 0x38
    4168:	9908      	ldr	r1, [sp, #32]
    416a:	9804      	ldr	r0, [sp, #16]
    416c:	f7ff f966 	bl	343c <__mdiff>
    4170:	2301      	movs	r3, #1
    4172:	930c      	str	r3, [sp, #48]	; 0x30
    4174:	68c3      	ldr	r3, [r0, #12]
    4176:	3430      	adds	r4, #48	; 0x30
    4178:	0005      	movs	r5, r0
    417a:	2b00      	cmp	r3, #0
    417c:	d104      	bne.n	4188 <_dtoa_r+0x994>
    417e:	0001      	movs	r1, r0
    4180:	9805      	ldr	r0, [sp, #20]
    4182:	f7ff f942 	bl	340a <__mcmp>
    4186:	900c      	str	r0, [sp, #48]	; 0x30
    4188:	0029      	movs	r1, r5
    418a:	9804      	ldr	r0, [sp, #16]
    418c:	f7fe ff63 	bl	3056 <_Bfree>
    4190:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4192:	9a22      	ldr	r2, [sp, #136]	; 0x88
    4194:	4313      	orrs	r3, r2
    4196:	d000      	beq.n	419a <_dtoa_r+0x9a6>
    4198:	e089      	b.n	42ae <_dtoa_r+0xaba>
    419a:	9a06      	ldr	r2, [sp, #24]
    419c:	3301      	adds	r3, #1
    419e:	4213      	tst	r3, r2
    41a0:	d000      	beq.n	41a4 <_dtoa_r+0x9b0>
    41a2:	e084      	b.n	42ae <_dtoa_r+0xaba>
    41a4:	2c39      	cmp	r4, #57	; 0x39
    41a6:	d100      	bne.n	41aa <_dtoa_r+0x9b6>
    41a8:	e0a3      	b.n	42f2 <_dtoa_r+0xafe>
    41aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    41ac:	2b00      	cmp	r3, #0
    41ae:	dd01      	ble.n	41b4 <_dtoa_r+0x9c0>
    41b0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    41b2:	3431      	adds	r4, #49	; 0x31
    41b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    41b6:	1c5d      	adds	r5, r3, #1
    41b8:	701c      	strb	r4, [r3, #0]
    41ba:	e027      	b.n	420c <_dtoa_r+0xa18>
    41bc:	2b04      	cmp	r3, #4
    41be:	d100      	bne.n	41c2 <_dtoa_r+0x9ce>
    41c0:	e769      	b.n	4096 <_dtoa_r+0x8a2>
    41c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    41c4:	331c      	adds	r3, #28
    41c6:	18d2      	adds	r2, r2, r3
    41c8:	920b      	str	r2, [sp, #44]	; 0x2c
    41ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    41cc:	18e4      	adds	r4, r4, r3
    41ce:	18d3      	adds	r3, r2, r3
    41d0:	e760      	b.n	4094 <_dtoa_r+0x8a0>
    41d2:	0003      	movs	r3, r0
    41d4:	e7f5      	b.n	41c2 <_dtoa_r+0x9ce>
    41d6:	2f00      	cmp	r7, #0
    41d8:	dc3c      	bgt.n	4254 <_dtoa_r+0xa60>
    41da:	9b22      	ldr	r3, [sp, #136]	; 0x88
    41dc:	2b02      	cmp	r3, #2
    41de:	dd39      	ble.n	4254 <_dtoa_r+0xa60>
    41e0:	970d      	str	r7, [sp, #52]	; 0x34
    41e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    41e4:	2b00      	cmp	r3, #0
    41e6:	d10c      	bne.n	4202 <_dtoa_r+0xa0e>
    41e8:	9908      	ldr	r1, [sp, #32]
    41ea:	2205      	movs	r2, #5
    41ec:	9804      	ldr	r0, [sp, #16]
    41ee:	f7fe ff4b 	bl	3088 <__multadd>
    41f2:	9008      	str	r0, [sp, #32]
    41f4:	0001      	movs	r1, r0
    41f6:	9805      	ldr	r0, [sp, #20]
    41f8:	f7ff f907 	bl	340a <__mcmp>
    41fc:	2800      	cmp	r0, #0
    41fe:	dd00      	ble.n	4202 <_dtoa_r+0xa0e>
    4200:	e55a      	b.n	3cb8 <_dtoa_r+0x4c4>
    4202:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4204:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    4206:	43db      	mvns	r3, r3
    4208:	9303      	str	r3, [sp, #12]
    420a:	2700      	movs	r7, #0
    420c:	9908      	ldr	r1, [sp, #32]
    420e:	9804      	ldr	r0, [sp, #16]
    4210:	f7fe ff21 	bl	3056 <_Bfree>
    4214:	2e00      	cmp	r6, #0
    4216:	d100      	bne.n	421a <_dtoa_r+0xa26>
    4218:	e63f      	b.n	3e9a <_dtoa_r+0x6a6>
    421a:	2f00      	cmp	r7, #0
    421c:	d005      	beq.n	422a <_dtoa_r+0xa36>
    421e:	42b7      	cmp	r7, r6
    4220:	d003      	beq.n	422a <_dtoa_r+0xa36>
    4222:	0039      	movs	r1, r7
    4224:	9804      	ldr	r0, [sp, #16]
    4226:	f7fe ff16 	bl	3056 <_Bfree>
    422a:	0031      	movs	r1, r6
    422c:	9804      	ldr	r0, [sp, #16]
    422e:	f7fe ff12 	bl	3056 <_Bfree>
    4232:	e632      	b.n	3e9a <_dtoa_r+0x6a6>
    4234:	9508      	str	r5, [sp, #32]
    4236:	002e      	movs	r6, r5
    4238:	e7e3      	b.n	4202 <_dtoa_r+0xa0e>
    423a:	2300      	movs	r3, #0
    423c:	9308      	str	r3, [sp, #32]
    423e:	001e      	movs	r6, r3
    4240:	e7df      	b.n	4202 <_dtoa_r+0xa0e>
    4242:	46c0      	nop			; (mov r8, r8)
    4244:	40240000 	.word	0x40240000
    4248:	00000433 	.word	0x00000433
    424c:	9603      	str	r6, [sp, #12]
    424e:	9508      	str	r5, [sp, #32]
    4250:	002e      	movs	r6, r5
    4252:	e531      	b.n	3cb8 <_dtoa_r+0x4c4>
    4254:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4256:	970d      	str	r7, [sp, #52]	; 0x34
    4258:	2b00      	cmp	r3, #0
    425a:	d000      	beq.n	425e <_dtoa_r+0xa6a>
    425c:	e753      	b.n	4106 <_dtoa_r+0x912>
    425e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    4260:	9908      	ldr	r1, [sp, #32]
    4262:	9805      	ldr	r0, [sp, #20]
    4264:	f7ff fa42 	bl	36ec <quorem>
    4268:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    426a:	3030      	adds	r0, #48	; 0x30
    426c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    426e:	7028      	strb	r0, [r5, #0]
    4270:	3501      	adds	r5, #1
    4272:	0004      	movs	r4, r0
    4274:	1aeb      	subs	r3, r5, r3
    4276:	429a      	cmp	r2, r3
    4278:	dc78      	bgt.n	436c <_dtoa_r+0xb78>
    427a:	1e15      	subs	r5, r2, #0
    427c:	dc00      	bgt.n	4280 <_dtoa_r+0xa8c>
    427e:	2501      	movs	r5, #1
    4280:	2700      	movs	r7, #0
    4282:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4284:	195d      	adds	r5, r3, r5
    4286:	9905      	ldr	r1, [sp, #20]
    4288:	2201      	movs	r2, #1
    428a:	9804      	ldr	r0, [sp, #16]
    428c:	f7ff f86c 	bl	3368 <__lshift>
    4290:	9908      	ldr	r1, [sp, #32]
    4292:	9005      	str	r0, [sp, #20]
    4294:	f7ff f8b9 	bl	340a <__mcmp>
    4298:	2800      	cmp	r0, #0
    429a:	dc2f      	bgt.n	42fc <_dtoa_r+0xb08>
    429c:	d101      	bne.n	42a2 <_dtoa_r+0xaae>
    429e:	07e3      	lsls	r3, r4, #31
    42a0:	d42c      	bmi.n	42fc <_dtoa_r+0xb08>
    42a2:	1e6b      	subs	r3, r5, #1
    42a4:	781a      	ldrb	r2, [r3, #0]
    42a6:	2a30      	cmp	r2, #48	; 0x30
    42a8:	d1b0      	bne.n	420c <_dtoa_r+0xa18>
    42aa:	001d      	movs	r5, r3
    42ac:	e7f9      	b.n	42a2 <_dtoa_r+0xaae>
    42ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    42b0:	2b00      	cmp	r3, #0
    42b2:	db07      	blt.n	42c4 <_dtoa_r+0xad0>
    42b4:	001d      	movs	r5, r3
    42b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    42b8:	431d      	orrs	r5, r3
    42ba:	d126      	bne.n	430a <_dtoa_r+0xb16>
    42bc:	2301      	movs	r3, #1
    42be:	9a06      	ldr	r2, [sp, #24]
    42c0:	4213      	tst	r3, r2
    42c2:	d122      	bne.n	430a <_dtoa_r+0xb16>
    42c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    42c6:	2b00      	cmp	r3, #0
    42c8:	dc00      	bgt.n	42cc <_dtoa_r+0xad8>
    42ca:	e773      	b.n	41b4 <_dtoa_r+0x9c0>
    42cc:	9905      	ldr	r1, [sp, #20]
    42ce:	2201      	movs	r2, #1
    42d0:	9804      	ldr	r0, [sp, #16]
    42d2:	f7ff f849 	bl	3368 <__lshift>
    42d6:	9908      	ldr	r1, [sp, #32]
    42d8:	9005      	str	r0, [sp, #20]
    42da:	f7ff f896 	bl	340a <__mcmp>
    42de:	2800      	cmp	r0, #0
    42e0:	dc04      	bgt.n	42ec <_dtoa_r+0xaf8>
    42e2:	d000      	beq.n	42e6 <_dtoa_r+0xaf2>
    42e4:	e766      	b.n	41b4 <_dtoa_r+0x9c0>
    42e6:	07e3      	lsls	r3, r4, #31
    42e8:	d400      	bmi.n	42ec <_dtoa_r+0xaf8>
    42ea:	e763      	b.n	41b4 <_dtoa_r+0x9c0>
    42ec:	2c39      	cmp	r4, #57	; 0x39
    42ee:	d000      	beq.n	42f2 <_dtoa_r+0xafe>
    42f0:	e75e      	b.n	41b0 <_dtoa_r+0x9bc>
    42f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    42f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    42f6:	1c5d      	adds	r5, r3, #1
    42f8:	2339      	movs	r3, #57	; 0x39
    42fa:	7013      	strb	r3, [r2, #0]
    42fc:	1e6b      	subs	r3, r5, #1
    42fe:	781a      	ldrb	r2, [r3, #0]
    4300:	2a39      	cmp	r2, #57	; 0x39
    4302:	d03b      	beq.n	437c <_dtoa_r+0xb88>
    4304:	3201      	adds	r2, #1
    4306:	701a      	strb	r2, [r3, #0]
    4308:	e780      	b.n	420c <_dtoa_r+0xa18>
    430a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    430c:	3301      	adds	r3, #1
    430e:	930d      	str	r3, [sp, #52]	; 0x34
    4310:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4312:	2b00      	cmp	r3, #0
    4314:	dd05      	ble.n	4322 <_dtoa_r+0xb2e>
    4316:	2c39      	cmp	r4, #57	; 0x39
    4318:	d0eb      	beq.n	42f2 <_dtoa_r+0xafe>
    431a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    431c:	3401      	adds	r4, #1
    431e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4320:	e74a      	b.n	41b8 <_dtoa_r+0x9c4>
    4322:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4324:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4326:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    4328:	701c      	strb	r4, [r3, #0]
    432a:	4293      	cmp	r3, r2
    432c:	d0ab      	beq.n	4286 <_dtoa_r+0xa92>
    432e:	2300      	movs	r3, #0
    4330:	220a      	movs	r2, #10
    4332:	9905      	ldr	r1, [sp, #20]
    4334:	9804      	ldr	r0, [sp, #16]
    4336:	f7fe fea7 	bl	3088 <__multadd>
    433a:	2300      	movs	r3, #0
    433c:	9005      	str	r0, [sp, #20]
    433e:	220a      	movs	r2, #10
    4340:	0039      	movs	r1, r7
    4342:	9804      	ldr	r0, [sp, #16]
    4344:	42b7      	cmp	r7, r6
    4346:	d106      	bne.n	4356 <_dtoa_r+0xb62>
    4348:	f7fe fe9e 	bl	3088 <__multadd>
    434c:	0007      	movs	r7, r0
    434e:	0006      	movs	r6, r0
    4350:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4352:	930b      	str	r3, [sp, #44]	; 0x2c
    4354:	e6fc      	b.n	4150 <_dtoa_r+0x95c>
    4356:	f7fe fe97 	bl	3088 <__multadd>
    435a:	0031      	movs	r1, r6
    435c:	0007      	movs	r7, r0
    435e:	2300      	movs	r3, #0
    4360:	220a      	movs	r2, #10
    4362:	9804      	ldr	r0, [sp, #16]
    4364:	f7fe fe90 	bl	3088 <__multadd>
    4368:	0006      	movs	r6, r0
    436a:	e7f1      	b.n	4350 <_dtoa_r+0xb5c>
    436c:	2300      	movs	r3, #0
    436e:	220a      	movs	r2, #10
    4370:	9905      	ldr	r1, [sp, #20]
    4372:	9804      	ldr	r0, [sp, #16]
    4374:	f7fe fe88 	bl	3088 <__multadd>
    4378:	9005      	str	r0, [sp, #20]
    437a:	e771      	b.n	4260 <_dtoa_r+0xa6c>
    437c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    437e:	429a      	cmp	r2, r3
    4380:	d105      	bne.n	438e <_dtoa_r+0xb9a>
    4382:	9b03      	ldr	r3, [sp, #12]
    4384:	3301      	adds	r3, #1
    4386:	9303      	str	r3, [sp, #12]
    4388:	2331      	movs	r3, #49	; 0x31
    438a:	7013      	strb	r3, [r2, #0]
    438c:	e73e      	b.n	420c <_dtoa_r+0xa18>
    438e:	001d      	movs	r5, r3
    4390:	e7b4      	b.n	42fc <_dtoa_r+0xb08>
    4392:	4b0a      	ldr	r3, [pc, #40]	; (43bc <_dtoa_r+0xbc8>)
    4394:	9a26      	ldr	r2, [sp, #152]	; 0x98
    4396:	930a      	str	r3, [sp, #40]	; 0x28
    4398:	4b09      	ldr	r3, [pc, #36]	; (43c0 <_dtoa_r+0xbcc>)
    439a:	2a00      	cmp	r2, #0
    439c:	d001      	beq.n	43a2 <_dtoa_r+0xbae>
    439e:	9a26      	ldr	r2, [sp, #152]	; 0x98
    43a0:	6013      	str	r3, [r2, #0]
    43a2:	980a      	ldr	r0, [sp, #40]	; 0x28
    43a4:	b01d      	add	sp, #116	; 0x74
    43a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    43a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    43aa:	2b00      	cmp	r3, #0
    43ac:	dd00      	ble.n	43b0 <_dtoa_r+0xbbc>
    43ae:	e756      	b.n	425e <_dtoa_r+0xa6a>
    43b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
    43b2:	2b02      	cmp	r3, #2
    43b4:	dc00      	bgt.n	43b8 <_dtoa_r+0xbc4>
    43b6:	e752      	b.n	425e <_dtoa_r+0xa6a>
    43b8:	e713      	b.n	41e2 <_dtoa_r+0x9ee>
    43ba:	46c0      	nop			; (mov r8, r8)
    43bc:	000050fc 	.word	0x000050fc
    43c0:	00005104 	.word	0x00005104

000043c4 <malloc>:
    43c4:	b510      	push	{r4, lr}
    43c6:	4b03      	ldr	r3, [pc, #12]	; (43d4 <malloc+0x10>)
    43c8:	0001      	movs	r1, r0
    43ca:	6818      	ldr	r0, [r3, #0]
    43cc:	f7ff f916 	bl	35fc <_malloc_r>
    43d0:	bd10      	pop	{r4, pc}
    43d2:	46c0      	nop			; (mov r8, r8)
    43d4:	20000008 	.word	0x20000008

000043d8 <__malloc_lock>:
    43d8:	4770      	bx	lr

000043da <__malloc_unlock>:
    43da:	4770      	bx	lr

000043dc <__gnu_thumb1_case_uqi>:
    43dc:	b402      	push	{r1}
    43de:	4671      	mov	r1, lr
    43e0:	0849      	lsrs	r1, r1, #1
    43e2:	0049      	lsls	r1, r1, #1
    43e4:	5c09      	ldrb	r1, [r1, r0]
    43e6:	0049      	lsls	r1, r1, #1
    43e8:	448e      	add	lr, r1
    43ea:	bc02      	pop	{r1}
    43ec:	4770      	bx	lr
    43ee:	46c0      	nop			; (mov r8, r8)

000043f0 <__divsi3>:
    43f0:	4603      	mov	r3, r0
    43f2:	430b      	orrs	r3, r1
    43f4:	d47f      	bmi.n	44f6 <__divsi3+0x106>
    43f6:	2200      	movs	r2, #0
    43f8:	0843      	lsrs	r3, r0, #1
    43fa:	428b      	cmp	r3, r1
    43fc:	d374      	bcc.n	44e8 <__divsi3+0xf8>
    43fe:	0903      	lsrs	r3, r0, #4
    4400:	428b      	cmp	r3, r1
    4402:	d35f      	bcc.n	44c4 <__divsi3+0xd4>
    4404:	0a03      	lsrs	r3, r0, #8
    4406:	428b      	cmp	r3, r1
    4408:	d344      	bcc.n	4494 <__divsi3+0xa4>
    440a:	0b03      	lsrs	r3, r0, #12
    440c:	428b      	cmp	r3, r1
    440e:	d328      	bcc.n	4462 <__divsi3+0x72>
    4410:	0c03      	lsrs	r3, r0, #16
    4412:	428b      	cmp	r3, r1
    4414:	d30d      	bcc.n	4432 <__divsi3+0x42>
    4416:	22ff      	movs	r2, #255	; 0xff
    4418:	0209      	lsls	r1, r1, #8
    441a:	ba12      	rev	r2, r2
    441c:	0c03      	lsrs	r3, r0, #16
    441e:	428b      	cmp	r3, r1
    4420:	d302      	bcc.n	4428 <__divsi3+0x38>
    4422:	1212      	asrs	r2, r2, #8
    4424:	0209      	lsls	r1, r1, #8
    4426:	d065      	beq.n	44f4 <__divsi3+0x104>
    4428:	0b03      	lsrs	r3, r0, #12
    442a:	428b      	cmp	r3, r1
    442c:	d319      	bcc.n	4462 <__divsi3+0x72>
    442e:	e000      	b.n	4432 <__divsi3+0x42>
    4430:	0a09      	lsrs	r1, r1, #8
    4432:	0bc3      	lsrs	r3, r0, #15
    4434:	428b      	cmp	r3, r1
    4436:	d301      	bcc.n	443c <__divsi3+0x4c>
    4438:	03cb      	lsls	r3, r1, #15
    443a:	1ac0      	subs	r0, r0, r3
    443c:	4152      	adcs	r2, r2
    443e:	0b83      	lsrs	r3, r0, #14
    4440:	428b      	cmp	r3, r1
    4442:	d301      	bcc.n	4448 <__divsi3+0x58>
    4444:	038b      	lsls	r3, r1, #14
    4446:	1ac0      	subs	r0, r0, r3
    4448:	4152      	adcs	r2, r2
    444a:	0b43      	lsrs	r3, r0, #13
    444c:	428b      	cmp	r3, r1
    444e:	d301      	bcc.n	4454 <__divsi3+0x64>
    4450:	034b      	lsls	r3, r1, #13
    4452:	1ac0      	subs	r0, r0, r3
    4454:	4152      	adcs	r2, r2
    4456:	0b03      	lsrs	r3, r0, #12
    4458:	428b      	cmp	r3, r1
    445a:	d301      	bcc.n	4460 <__divsi3+0x70>
    445c:	030b      	lsls	r3, r1, #12
    445e:	1ac0      	subs	r0, r0, r3
    4460:	4152      	adcs	r2, r2
    4462:	0ac3      	lsrs	r3, r0, #11
    4464:	428b      	cmp	r3, r1
    4466:	d301      	bcc.n	446c <__divsi3+0x7c>
    4468:	02cb      	lsls	r3, r1, #11
    446a:	1ac0      	subs	r0, r0, r3
    446c:	4152      	adcs	r2, r2
    446e:	0a83      	lsrs	r3, r0, #10
    4470:	428b      	cmp	r3, r1
    4472:	d301      	bcc.n	4478 <__divsi3+0x88>
    4474:	028b      	lsls	r3, r1, #10
    4476:	1ac0      	subs	r0, r0, r3
    4478:	4152      	adcs	r2, r2
    447a:	0a43      	lsrs	r3, r0, #9
    447c:	428b      	cmp	r3, r1
    447e:	d301      	bcc.n	4484 <__divsi3+0x94>
    4480:	024b      	lsls	r3, r1, #9
    4482:	1ac0      	subs	r0, r0, r3
    4484:	4152      	adcs	r2, r2
    4486:	0a03      	lsrs	r3, r0, #8
    4488:	428b      	cmp	r3, r1
    448a:	d301      	bcc.n	4490 <__divsi3+0xa0>
    448c:	020b      	lsls	r3, r1, #8
    448e:	1ac0      	subs	r0, r0, r3
    4490:	4152      	adcs	r2, r2
    4492:	d2cd      	bcs.n	4430 <__divsi3+0x40>
    4494:	09c3      	lsrs	r3, r0, #7
    4496:	428b      	cmp	r3, r1
    4498:	d301      	bcc.n	449e <__divsi3+0xae>
    449a:	01cb      	lsls	r3, r1, #7
    449c:	1ac0      	subs	r0, r0, r3
    449e:	4152      	adcs	r2, r2
    44a0:	0983      	lsrs	r3, r0, #6
    44a2:	428b      	cmp	r3, r1
    44a4:	d301      	bcc.n	44aa <__divsi3+0xba>
    44a6:	018b      	lsls	r3, r1, #6
    44a8:	1ac0      	subs	r0, r0, r3
    44aa:	4152      	adcs	r2, r2
    44ac:	0943      	lsrs	r3, r0, #5
    44ae:	428b      	cmp	r3, r1
    44b0:	d301      	bcc.n	44b6 <__divsi3+0xc6>
    44b2:	014b      	lsls	r3, r1, #5
    44b4:	1ac0      	subs	r0, r0, r3
    44b6:	4152      	adcs	r2, r2
    44b8:	0903      	lsrs	r3, r0, #4
    44ba:	428b      	cmp	r3, r1
    44bc:	d301      	bcc.n	44c2 <__divsi3+0xd2>
    44be:	010b      	lsls	r3, r1, #4
    44c0:	1ac0      	subs	r0, r0, r3
    44c2:	4152      	adcs	r2, r2
    44c4:	08c3      	lsrs	r3, r0, #3
    44c6:	428b      	cmp	r3, r1
    44c8:	d301      	bcc.n	44ce <__divsi3+0xde>
    44ca:	00cb      	lsls	r3, r1, #3
    44cc:	1ac0      	subs	r0, r0, r3
    44ce:	4152      	adcs	r2, r2
    44d0:	0883      	lsrs	r3, r0, #2
    44d2:	428b      	cmp	r3, r1
    44d4:	d301      	bcc.n	44da <__divsi3+0xea>
    44d6:	008b      	lsls	r3, r1, #2
    44d8:	1ac0      	subs	r0, r0, r3
    44da:	4152      	adcs	r2, r2
    44dc:	0843      	lsrs	r3, r0, #1
    44de:	428b      	cmp	r3, r1
    44e0:	d301      	bcc.n	44e6 <__divsi3+0xf6>
    44e2:	004b      	lsls	r3, r1, #1
    44e4:	1ac0      	subs	r0, r0, r3
    44e6:	4152      	adcs	r2, r2
    44e8:	1a41      	subs	r1, r0, r1
    44ea:	d200      	bcs.n	44ee <__divsi3+0xfe>
    44ec:	4601      	mov	r1, r0
    44ee:	4152      	adcs	r2, r2
    44f0:	4610      	mov	r0, r2
    44f2:	4770      	bx	lr
    44f4:	e05d      	b.n	45b2 <__divsi3+0x1c2>
    44f6:	0fca      	lsrs	r2, r1, #31
    44f8:	d000      	beq.n	44fc <__divsi3+0x10c>
    44fa:	4249      	negs	r1, r1
    44fc:	1003      	asrs	r3, r0, #32
    44fe:	d300      	bcc.n	4502 <__divsi3+0x112>
    4500:	4240      	negs	r0, r0
    4502:	4053      	eors	r3, r2
    4504:	2200      	movs	r2, #0
    4506:	469c      	mov	ip, r3
    4508:	0903      	lsrs	r3, r0, #4
    450a:	428b      	cmp	r3, r1
    450c:	d32d      	bcc.n	456a <__divsi3+0x17a>
    450e:	0a03      	lsrs	r3, r0, #8
    4510:	428b      	cmp	r3, r1
    4512:	d312      	bcc.n	453a <__divsi3+0x14a>
    4514:	22fc      	movs	r2, #252	; 0xfc
    4516:	0189      	lsls	r1, r1, #6
    4518:	ba12      	rev	r2, r2
    451a:	0a03      	lsrs	r3, r0, #8
    451c:	428b      	cmp	r3, r1
    451e:	d30c      	bcc.n	453a <__divsi3+0x14a>
    4520:	0189      	lsls	r1, r1, #6
    4522:	1192      	asrs	r2, r2, #6
    4524:	428b      	cmp	r3, r1
    4526:	d308      	bcc.n	453a <__divsi3+0x14a>
    4528:	0189      	lsls	r1, r1, #6
    452a:	1192      	asrs	r2, r2, #6
    452c:	428b      	cmp	r3, r1
    452e:	d304      	bcc.n	453a <__divsi3+0x14a>
    4530:	0189      	lsls	r1, r1, #6
    4532:	d03a      	beq.n	45aa <__divsi3+0x1ba>
    4534:	1192      	asrs	r2, r2, #6
    4536:	e000      	b.n	453a <__divsi3+0x14a>
    4538:	0989      	lsrs	r1, r1, #6
    453a:	09c3      	lsrs	r3, r0, #7
    453c:	428b      	cmp	r3, r1
    453e:	d301      	bcc.n	4544 <__divsi3+0x154>
    4540:	01cb      	lsls	r3, r1, #7
    4542:	1ac0      	subs	r0, r0, r3
    4544:	4152      	adcs	r2, r2
    4546:	0983      	lsrs	r3, r0, #6
    4548:	428b      	cmp	r3, r1
    454a:	d301      	bcc.n	4550 <__divsi3+0x160>
    454c:	018b      	lsls	r3, r1, #6
    454e:	1ac0      	subs	r0, r0, r3
    4550:	4152      	adcs	r2, r2
    4552:	0943      	lsrs	r3, r0, #5
    4554:	428b      	cmp	r3, r1
    4556:	d301      	bcc.n	455c <__divsi3+0x16c>
    4558:	014b      	lsls	r3, r1, #5
    455a:	1ac0      	subs	r0, r0, r3
    455c:	4152      	adcs	r2, r2
    455e:	0903      	lsrs	r3, r0, #4
    4560:	428b      	cmp	r3, r1
    4562:	d301      	bcc.n	4568 <__divsi3+0x178>
    4564:	010b      	lsls	r3, r1, #4
    4566:	1ac0      	subs	r0, r0, r3
    4568:	4152      	adcs	r2, r2
    456a:	08c3      	lsrs	r3, r0, #3
    456c:	428b      	cmp	r3, r1
    456e:	d301      	bcc.n	4574 <__divsi3+0x184>
    4570:	00cb      	lsls	r3, r1, #3
    4572:	1ac0      	subs	r0, r0, r3
    4574:	4152      	adcs	r2, r2
    4576:	0883      	lsrs	r3, r0, #2
    4578:	428b      	cmp	r3, r1
    457a:	d301      	bcc.n	4580 <__divsi3+0x190>
    457c:	008b      	lsls	r3, r1, #2
    457e:	1ac0      	subs	r0, r0, r3
    4580:	4152      	adcs	r2, r2
    4582:	d2d9      	bcs.n	4538 <__divsi3+0x148>
    4584:	0843      	lsrs	r3, r0, #1
    4586:	428b      	cmp	r3, r1
    4588:	d301      	bcc.n	458e <__divsi3+0x19e>
    458a:	004b      	lsls	r3, r1, #1
    458c:	1ac0      	subs	r0, r0, r3
    458e:	4152      	adcs	r2, r2
    4590:	1a41      	subs	r1, r0, r1
    4592:	d200      	bcs.n	4596 <__divsi3+0x1a6>
    4594:	4601      	mov	r1, r0
    4596:	4663      	mov	r3, ip
    4598:	4152      	adcs	r2, r2
    459a:	105b      	asrs	r3, r3, #1
    459c:	4610      	mov	r0, r2
    459e:	d301      	bcc.n	45a4 <__divsi3+0x1b4>
    45a0:	4240      	negs	r0, r0
    45a2:	2b00      	cmp	r3, #0
    45a4:	d500      	bpl.n	45a8 <__divsi3+0x1b8>
    45a6:	4249      	negs	r1, r1
    45a8:	4770      	bx	lr
    45aa:	4663      	mov	r3, ip
    45ac:	105b      	asrs	r3, r3, #1
    45ae:	d300      	bcc.n	45b2 <__divsi3+0x1c2>
    45b0:	4240      	negs	r0, r0
    45b2:	b501      	push	{r0, lr}
    45b4:	2000      	movs	r0, #0
    45b6:	f7fd f863 	bl	1680 <__aeabi_idiv0>
    45ba:	bd02      	pop	{r1, pc}

000045bc <__aeabi_idivmod>:
    45bc:	2900      	cmp	r1, #0
    45be:	d0f8      	beq.n	45b2 <__divsi3+0x1c2>
    45c0:	e716      	b.n	43f0 <__divsi3>
    45c2:	4770      	bx	lr

000045c4 <__aeabi_cdrcmple>:
    45c4:	4684      	mov	ip, r0
    45c6:	1c10      	adds	r0, r2, #0
    45c8:	4662      	mov	r2, ip
    45ca:	468c      	mov	ip, r1
    45cc:	1c19      	adds	r1, r3, #0
    45ce:	4663      	mov	r3, ip
    45d0:	e000      	b.n	45d4 <__aeabi_cdcmpeq>
    45d2:	46c0      	nop			; (mov r8, r8)

000045d4 <__aeabi_cdcmpeq>:
    45d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    45d6:	f000 f8d1 	bl	477c <__ledf2>
    45da:	2800      	cmp	r0, #0
    45dc:	d401      	bmi.n	45e2 <__aeabi_cdcmpeq+0xe>
    45de:	2100      	movs	r1, #0
    45e0:	42c8      	cmn	r0, r1
    45e2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000045e4 <__aeabi_dcmpeq>:
    45e4:	b510      	push	{r4, lr}
    45e6:	f000 f82b 	bl	4640 <__eqdf2>
    45ea:	4240      	negs	r0, r0
    45ec:	3001      	adds	r0, #1
    45ee:	bd10      	pop	{r4, pc}

000045f0 <__aeabi_dcmplt>:
    45f0:	b510      	push	{r4, lr}
    45f2:	f000 f8c3 	bl	477c <__ledf2>
    45f6:	2800      	cmp	r0, #0
    45f8:	db01      	blt.n	45fe <__aeabi_dcmplt+0xe>
    45fa:	2000      	movs	r0, #0
    45fc:	bd10      	pop	{r4, pc}
    45fe:	2001      	movs	r0, #1
    4600:	bd10      	pop	{r4, pc}
    4602:	46c0      	nop			; (mov r8, r8)

00004604 <__aeabi_dcmple>:
    4604:	b510      	push	{r4, lr}
    4606:	f000 f8b9 	bl	477c <__ledf2>
    460a:	2800      	cmp	r0, #0
    460c:	dd01      	ble.n	4612 <__aeabi_dcmple+0xe>
    460e:	2000      	movs	r0, #0
    4610:	bd10      	pop	{r4, pc}
    4612:	2001      	movs	r0, #1
    4614:	bd10      	pop	{r4, pc}
    4616:	46c0      	nop			; (mov r8, r8)

00004618 <__aeabi_dcmpgt>:
    4618:	b510      	push	{r4, lr}
    461a:	f000 f84b 	bl	46b4 <__gedf2>
    461e:	2800      	cmp	r0, #0
    4620:	dc01      	bgt.n	4626 <__aeabi_dcmpgt+0xe>
    4622:	2000      	movs	r0, #0
    4624:	bd10      	pop	{r4, pc}
    4626:	2001      	movs	r0, #1
    4628:	bd10      	pop	{r4, pc}
    462a:	46c0      	nop			; (mov r8, r8)

0000462c <__aeabi_dcmpge>:
    462c:	b510      	push	{r4, lr}
    462e:	f000 f841 	bl	46b4 <__gedf2>
    4632:	2800      	cmp	r0, #0
    4634:	da01      	bge.n	463a <__aeabi_dcmpge+0xe>
    4636:	2000      	movs	r0, #0
    4638:	bd10      	pop	{r4, pc}
    463a:	2001      	movs	r0, #1
    463c:	bd10      	pop	{r4, pc}
    463e:	46c0      	nop			; (mov r8, r8)

00004640 <__eqdf2>:
    4640:	b5f0      	push	{r4, r5, r6, r7, lr}
    4642:	464f      	mov	r7, r9
    4644:	4646      	mov	r6, r8
    4646:	46d6      	mov	lr, sl
    4648:	005c      	lsls	r4, r3, #1
    464a:	b5c0      	push	{r6, r7, lr}
    464c:	031f      	lsls	r7, r3, #12
    464e:	0fdb      	lsrs	r3, r3, #31
    4650:	469a      	mov	sl, r3
    4652:	4b17      	ldr	r3, [pc, #92]	; (46b0 <__eqdf2+0x70>)
    4654:	030e      	lsls	r6, r1, #12
    4656:	004d      	lsls	r5, r1, #1
    4658:	4684      	mov	ip, r0
    465a:	4680      	mov	r8, r0
    465c:	0b36      	lsrs	r6, r6, #12
    465e:	0d6d      	lsrs	r5, r5, #21
    4660:	0fc9      	lsrs	r1, r1, #31
    4662:	4691      	mov	r9, r2
    4664:	0b3f      	lsrs	r7, r7, #12
    4666:	0d64      	lsrs	r4, r4, #21
    4668:	2001      	movs	r0, #1
    466a:	429d      	cmp	r5, r3
    466c:	d008      	beq.n	4680 <__eqdf2+0x40>
    466e:	429c      	cmp	r4, r3
    4670:	d001      	beq.n	4676 <__eqdf2+0x36>
    4672:	42a5      	cmp	r5, r4
    4674:	d00b      	beq.n	468e <__eqdf2+0x4e>
    4676:	bc1c      	pop	{r2, r3, r4}
    4678:	4690      	mov	r8, r2
    467a:	4699      	mov	r9, r3
    467c:	46a2      	mov	sl, r4
    467e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4680:	4663      	mov	r3, ip
    4682:	4333      	orrs	r3, r6
    4684:	d1f7      	bne.n	4676 <__eqdf2+0x36>
    4686:	42ac      	cmp	r4, r5
    4688:	d1f5      	bne.n	4676 <__eqdf2+0x36>
    468a:	433a      	orrs	r2, r7
    468c:	d1f3      	bne.n	4676 <__eqdf2+0x36>
    468e:	2001      	movs	r0, #1
    4690:	42be      	cmp	r6, r7
    4692:	d1f0      	bne.n	4676 <__eqdf2+0x36>
    4694:	45c8      	cmp	r8, r9
    4696:	d1ee      	bne.n	4676 <__eqdf2+0x36>
    4698:	4551      	cmp	r1, sl
    469a:	d007      	beq.n	46ac <__eqdf2+0x6c>
    469c:	2d00      	cmp	r5, #0
    469e:	d1ea      	bne.n	4676 <__eqdf2+0x36>
    46a0:	4663      	mov	r3, ip
    46a2:	431e      	orrs	r6, r3
    46a4:	0030      	movs	r0, r6
    46a6:	1e46      	subs	r6, r0, #1
    46a8:	41b0      	sbcs	r0, r6
    46aa:	e7e4      	b.n	4676 <__eqdf2+0x36>
    46ac:	2000      	movs	r0, #0
    46ae:	e7e2      	b.n	4676 <__eqdf2+0x36>
    46b0:	000007ff 	.word	0x000007ff

000046b4 <__gedf2>:
    46b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    46b6:	4645      	mov	r5, r8
    46b8:	46de      	mov	lr, fp
    46ba:	4657      	mov	r7, sl
    46bc:	464e      	mov	r6, r9
    46be:	b5e0      	push	{r5, r6, r7, lr}
    46c0:	031f      	lsls	r7, r3, #12
    46c2:	0b3d      	lsrs	r5, r7, #12
    46c4:	4f2c      	ldr	r7, [pc, #176]	; (4778 <__gedf2+0xc4>)
    46c6:	030e      	lsls	r6, r1, #12
    46c8:	004c      	lsls	r4, r1, #1
    46ca:	46ab      	mov	fp, r5
    46cc:	005d      	lsls	r5, r3, #1
    46ce:	4684      	mov	ip, r0
    46d0:	0b36      	lsrs	r6, r6, #12
    46d2:	0d64      	lsrs	r4, r4, #21
    46d4:	0fc9      	lsrs	r1, r1, #31
    46d6:	4690      	mov	r8, r2
    46d8:	0d6d      	lsrs	r5, r5, #21
    46da:	0fdb      	lsrs	r3, r3, #31
    46dc:	42bc      	cmp	r4, r7
    46de:	d02a      	beq.n	4736 <__gedf2+0x82>
    46e0:	4f25      	ldr	r7, [pc, #148]	; (4778 <__gedf2+0xc4>)
    46e2:	42bd      	cmp	r5, r7
    46e4:	d02d      	beq.n	4742 <__gedf2+0x8e>
    46e6:	2c00      	cmp	r4, #0
    46e8:	d10f      	bne.n	470a <__gedf2+0x56>
    46ea:	4330      	orrs	r0, r6
    46ec:	0007      	movs	r7, r0
    46ee:	4681      	mov	r9, r0
    46f0:	4278      	negs	r0, r7
    46f2:	4178      	adcs	r0, r7
    46f4:	b2c0      	uxtb	r0, r0
    46f6:	2d00      	cmp	r5, #0
    46f8:	d117      	bne.n	472a <__gedf2+0x76>
    46fa:	465f      	mov	r7, fp
    46fc:	433a      	orrs	r2, r7
    46fe:	d114      	bne.n	472a <__gedf2+0x76>
    4700:	464b      	mov	r3, r9
    4702:	2000      	movs	r0, #0
    4704:	2b00      	cmp	r3, #0
    4706:	d00a      	beq.n	471e <__gedf2+0x6a>
    4708:	e006      	b.n	4718 <__gedf2+0x64>
    470a:	2d00      	cmp	r5, #0
    470c:	d102      	bne.n	4714 <__gedf2+0x60>
    470e:	4658      	mov	r0, fp
    4710:	4302      	orrs	r2, r0
    4712:	d001      	beq.n	4718 <__gedf2+0x64>
    4714:	4299      	cmp	r1, r3
    4716:	d018      	beq.n	474a <__gedf2+0x96>
    4718:	4248      	negs	r0, r1
    471a:	2101      	movs	r1, #1
    471c:	4308      	orrs	r0, r1
    471e:	bc3c      	pop	{r2, r3, r4, r5}
    4720:	4690      	mov	r8, r2
    4722:	4699      	mov	r9, r3
    4724:	46a2      	mov	sl, r4
    4726:	46ab      	mov	fp, r5
    4728:	bdf0      	pop	{r4, r5, r6, r7, pc}
    472a:	2800      	cmp	r0, #0
    472c:	d0f2      	beq.n	4714 <__gedf2+0x60>
    472e:	2001      	movs	r0, #1
    4730:	3b01      	subs	r3, #1
    4732:	4318      	orrs	r0, r3
    4734:	e7f3      	b.n	471e <__gedf2+0x6a>
    4736:	0037      	movs	r7, r6
    4738:	4307      	orrs	r7, r0
    473a:	d0d1      	beq.n	46e0 <__gedf2+0x2c>
    473c:	2002      	movs	r0, #2
    473e:	4240      	negs	r0, r0
    4740:	e7ed      	b.n	471e <__gedf2+0x6a>
    4742:	465f      	mov	r7, fp
    4744:	4317      	orrs	r7, r2
    4746:	d0ce      	beq.n	46e6 <__gedf2+0x32>
    4748:	e7f8      	b.n	473c <__gedf2+0x88>
    474a:	42ac      	cmp	r4, r5
    474c:	dce4      	bgt.n	4718 <__gedf2+0x64>
    474e:	da03      	bge.n	4758 <__gedf2+0xa4>
    4750:	1e48      	subs	r0, r1, #1
    4752:	2101      	movs	r1, #1
    4754:	4308      	orrs	r0, r1
    4756:	e7e2      	b.n	471e <__gedf2+0x6a>
    4758:	455e      	cmp	r6, fp
    475a:	d8dd      	bhi.n	4718 <__gedf2+0x64>
    475c:	d006      	beq.n	476c <__gedf2+0xb8>
    475e:	2000      	movs	r0, #0
    4760:	455e      	cmp	r6, fp
    4762:	d2dc      	bcs.n	471e <__gedf2+0x6a>
    4764:	2301      	movs	r3, #1
    4766:	1e48      	subs	r0, r1, #1
    4768:	4318      	orrs	r0, r3
    476a:	e7d8      	b.n	471e <__gedf2+0x6a>
    476c:	45c4      	cmp	ip, r8
    476e:	d8d3      	bhi.n	4718 <__gedf2+0x64>
    4770:	2000      	movs	r0, #0
    4772:	45c4      	cmp	ip, r8
    4774:	d3f6      	bcc.n	4764 <__gedf2+0xb0>
    4776:	e7d2      	b.n	471e <__gedf2+0x6a>
    4778:	000007ff 	.word	0x000007ff

0000477c <__ledf2>:
    477c:	b5f0      	push	{r4, r5, r6, r7, lr}
    477e:	464e      	mov	r6, r9
    4780:	4645      	mov	r5, r8
    4782:	46de      	mov	lr, fp
    4784:	4657      	mov	r7, sl
    4786:	005c      	lsls	r4, r3, #1
    4788:	b5e0      	push	{r5, r6, r7, lr}
    478a:	031f      	lsls	r7, r3, #12
    478c:	0fdb      	lsrs	r3, r3, #31
    478e:	4699      	mov	r9, r3
    4790:	4b2a      	ldr	r3, [pc, #168]	; (483c <__ledf2+0xc0>)
    4792:	030e      	lsls	r6, r1, #12
    4794:	004d      	lsls	r5, r1, #1
    4796:	0fc9      	lsrs	r1, r1, #31
    4798:	4684      	mov	ip, r0
    479a:	0b36      	lsrs	r6, r6, #12
    479c:	0d6d      	lsrs	r5, r5, #21
    479e:	468b      	mov	fp, r1
    47a0:	4690      	mov	r8, r2
    47a2:	0b3f      	lsrs	r7, r7, #12
    47a4:	0d64      	lsrs	r4, r4, #21
    47a6:	429d      	cmp	r5, r3
    47a8:	d020      	beq.n	47ec <__ledf2+0x70>
    47aa:	4b24      	ldr	r3, [pc, #144]	; (483c <__ledf2+0xc0>)
    47ac:	429c      	cmp	r4, r3
    47ae:	d022      	beq.n	47f6 <__ledf2+0x7a>
    47b0:	2d00      	cmp	r5, #0
    47b2:	d112      	bne.n	47da <__ledf2+0x5e>
    47b4:	4330      	orrs	r0, r6
    47b6:	4243      	negs	r3, r0
    47b8:	4143      	adcs	r3, r0
    47ba:	b2db      	uxtb	r3, r3
    47bc:	2c00      	cmp	r4, #0
    47be:	d01f      	beq.n	4800 <__ledf2+0x84>
    47c0:	2b00      	cmp	r3, #0
    47c2:	d00c      	beq.n	47de <__ledf2+0x62>
    47c4:	464b      	mov	r3, r9
    47c6:	2001      	movs	r0, #1
    47c8:	3b01      	subs	r3, #1
    47ca:	4303      	orrs	r3, r0
    47cc:	0018      	movs	r0, r3
    47ce:	bc3c      	pop	{r2, r3, r4, r5}
    47d0:	4690      	mov	r8, r2
    47d2:	4699      	mov	r9, r3
    47d4:	46a2      	mov	sl, r4
    47d6:	46ab      	mov	fp, r5
    47d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    47da:	2c00      	cmp	r4, #0
    47dc:	d016      	beq.n	480c <__ledf2+0x90>
    47de:	45cb      	cmp	fp, r9
    47e0:	d017      	beq.n	4812 <__ledf2+0x96>
    47e2:	465b      	mov	r3, fp
    47e4:	4259      	negs	r1, r3
    47e6:	2301      	movs	r3, #1
    47e8:	430b      	orrs	r3, r1
    47ea:	e7ef      	b.n	47cc <__ledf2+0x50>
    47ec:	0031      	movs	r1, r6
    47ee:	2302      	movs	r3, #2
    47f0:	4301      	orrs	r1, r0
    47f2:	d1eb      	bne.n	47cc <__ledf2+0x50>
    47f4:	e7d9      	b.n	47aa <__ledf2+0x2e>
    47f6:	0039      	movs	r1, r7
    47f8:	2302      	movs	r3, #2
    47fa:	4311      	orrs	r1, r2
    47fc:	d1e6      	bne.n	47cc <__ledf2+0x50>
    47fe:	e7d7      	b.n	47b0 <__ledf2+0x34>
    4800:	433a      	orrs	r2, r7
    4802:	d1dd      	bne.n	47c0 <__ledf2+0x44>
    4804:	2300      	movs	r3, #0
    4806:	2800      	cmp	r0, #0
    4808:	d0e0      	beq.n	47cc <__ledf2+0x50>
    480a:	e7ea      	b.n	47e2 <__ledf2+0x66>
    480c:	433a      	orrs	r2, r7
    480e:	d1e6      	bne.n	47de <__ledf2+0x62>
    4810:	e7e7      	b.n	47e2 <__ledf2+0x66>
    4812:	42a5      	cmp	r5, r4
    4814:	dce5      	bgt.n	47e2 <__ledf2+0x66>
    4816:	db05      	blt.n	4824 <__ledf2+0xa8>
    4818:	42be      	cmp	r6, r7
    481a:	d8e2      	bhi.n	47e2 <__ledf2+0x66>
    481c:	d007      	beq.n	482e <__ledf2+0xb2>
    481e:	2300      	movs	r3, #0
    4820:	42be      	cmp	r6, r7
    4822:	d2d3      	bcs.n	47cc <__ledf2+0x50>
    4824:	4659      	mov	r1, fp
    4826:	2301      	movs	r3, #1
    4828:	3901      	subs	r1, #1
    482a:	430b      	orrs	r3, r1
    482c:	e7ce      	b.n	47cc <__ledf2+0x50>
    482e:	45c4      	cmp	ip, r8
    4830:	d8d7      	bhi.n	47e2 <__ledf2+0x66>
    4832:	2300      	movs	r3, #0
    4834:	45c4      	cmp	ip, r8
    4836:	d3f5      	bcc.n	4824 <__ledf2+0xa8>
    4838:	e7c8      	b.n	47cc <__ledf2+0x50>
    483a:	46c0      	nop			; (mov r8, r8)
    483c:	000007ff 	.word	0x000007ff

00004840 <__aeabi_dsub>:
    4840:	b5f0      	push	{r4, r5, r6, r7, lr}
    4842:	4646      	mov	r6, r8
    4844:	46d6      	mov	lr, sl
    4846:	464f      	mov	r7, r9
    4848:	030c      	lsls	r4, r1, #12
    484a:	b5c0      	push	{r6, r7, lr}
    484c:	0fcd      	lsrs	r5, r1, #31
    484e:	004e      	lsls	r6, r1, #1
    4850:	0a61      	lsrs	r1, r4, #9
    4852:	0f44      	lsrs	r4, r0, #29
    4854:	430c      	orrs	r4, r1
    4856:	00c1      	lsls	r1, r0, #3
    4858:	0058      	lsls	r0, r3, #1
    485a:	0d40      	lsrs	r0, r0, #21
    485c:	4684      	mov	ip, r0
    485e:	468a      	mov	sl, r1
    4860:	000f      	movs	r7, r1
    4862:	0319      	lsls	r1, r3, #12
    4864:	0f50      	lsrs	r0, r2, #29
    4866:	0a49      	lsrs	r1, r1, #9
    4868:	4301      	orrs	r1, r0
    486a:	48c6      	ldr	r0, [pc, #792]	; (4b84 <__aeabi_dsub+0x344>)
    486c:	0d76      	lsrs	r6, r6, #21
    486e:	46a8      	mov	r8, r5
    4870:	0fdb      	lsrs	r3, r3, #31
    4872:	00d2      	lsls	r2, r2, #3
    4874:	4584      	cmp	ip, r0
    4876:	d100      	bne.n	487a <__aeabi_dsub+0x3a>
    4878:	e0d8      	b.n	4a2c <__aeabi_dsub+0x1ec>
    487a:	2001      	movs	r0, #1
    487c:	4043      	eors	r3, r0
    487e:	42ab      	cmp	r3, r5
    4880:	d100      	bne.n	4884 <__aeabi_dsub+0x44>
    4882:	e0a6      	b.n	49d2 <__aeabi_dsub+0x192>
    4884:	4660      	mov	r0, ip
    4886:	1a35      	subs	r5, r6, r0
    4888:	2d00      	cmp	r5, #0
    488a:	dc00      	bgt.n	488e <__aeabi_dsub+0x4e>
    488c:	e105      	b.n	4a9a <__aeabi_dsub+0x25a>
    488e:	2800      	cmp	r0, #0
    4890:	d110      	bne.n	48b4 <__aeabi_dsub+0x74>
    4892:	000b      	movs	r3, r1
    4894:	4313      	orrs	r3, r2
    4896:	d100      	bne.n	489a <__aeabi_dsub+0x5a>
    4898:	e0d7      	b.n	4a4a <__aeabi_dsub+0x20a>
    489a:	1e6b      	subs	r3, r5, #1
    489c:	2b00      	cmp	r3, #0
    489e:	d000      	beq.n	48a2 <__aeabi_dsub+0x62>
    48a0:	e14b      	b.n	4b3a <__aeabi_dsub+0x2fa>
    48a2:	4653      	mov	r3, sl
    48a4:	1a9f      	subs	r7, r3, r2
    48a6:	45ba      	cmp	sl, r7
    48a8:	4180      	sbcs	r0, r0
    48aa:	1a64      	subs	r4, r4, r1
    48ac:	4240      	negs	r0, r0
    48ae:	1a24      	subs	r4, r4, r0
    48b0:	2601      	movs	r6, #1
    48b2:	e01e      	b.n	48f2 <__aeabi_dsub+0xb2>
    48b4:	4bb3      	ldr	r3, [pc, #716]	; (4b84 <__aeabi_dsub+0x344>)
    48b6:	429e      	cmp	r6, r3
    48b8:	d048      	beq.n	494c <__aeabi_dsub+0x10c>
    48ba:	2380      	movs	r3, #128	; 0x80
    48bc:	041b      	lsls	r3, r3, #16
    48be:	4319      	orrs	r1, r3
    48c0:	2d38      	cmp	r5, #56	; 0x38
    48c2:	dd00      	ble.n	48c6 <__aeabi_dsub+0x86>
    48c4:	e119      	b.n	4afa <__aeabi_dsub+0x2ba>
    48c6:	2d1f      	cmp	r5, #31
    48c8:	dd00      	ble.n	48cc <__aeabi_dsub+0x8c>
    48ca:	e14c      	b.n	4b66 <__aeabi_dsub+0x326>
    48cc:	2320      	movs	r3, #32
    48ce:	000f      	movs	r7, r1
    48d0:	1b5b      	subs	r3, r3, r5
    48d2:	0010      	movs	r0, r2
    48d4:	409a      	lsls	r2, r3
    48d6:	409f      	lsls	r7, r3
    48d8:	40e8      	lsrs	r0, r5
    48da:	1e53      	subs	r3, r2, #1
    48dc:	419a      	sbcs	r2, r3
    48de:	40e9      	lsrs	r1, r5
    48e0:	4307      	orrs	r7, r0
    48e2:	4317      	orrs	r7, r2
    48e4:	4653      	mov	r3, sl
    48e6:	1bdf      	subs	r7, r3, r7
    48e8:	1a61      	subs	r1, r4, r1
    48ea:	45ba      	cmp	sl, r7
    48ec:	41a4      	sbcs	r4, r4
    48ee:	4264      	negs	r4, r4
    48f0:	1b0c      	subs	r4, r1, r4
    48f2:	0223      	lsls	r3, r4, #8
    48f4:	d400      	bmi.n	48f8 <__aeabi_dsub+0xb8>
    48f6:	e0c5      	b.n	4a84 <__aeabi_dsub+0x244>
    48f8:	0264      	lsls	r4, r4, #9
    48fa:	0a65      	lsrs	r5, r4, #9
    48fc:	2d00      	cmp	r5, #0
    48fe:	d100      	bne.n	4902 <__aeabi_dsub+0xc2>
    4900:	e0f6      	b.n	4af0 <__aeabi_dsub+0x2b0>
    4902:	0028      	movs	r0, r5
    4904:	f7fe f94e 	bl	2ba4 <__clzsi2>
    4908:	0003      	movs	r3, r0
    490a:	3b08      	subs	r3, #8
    490c:	2b1f      	cmp	r3, #31
    490e:	dd00      	ble.n	4912 <__aeabi_dsub+0xd2>
    4910:	e0e9      	b.n	4ae6 <__aeabi_dsub+0x2a6>
    4912:	2220      	movs	r2, #32
    4914:	003c      	movs	r4, r7
    4916:	1ad2      	subs	r2, r2, r3
    4918:	409d      	lsls	r5, r3
    491a:	40d4      	lsrs	r4, r2
    491c:	409f      	lsls	r7, r3
    491e:	4325      	orrs	r5, r4
    4920:	429e      	cmp	r6, r3
    4922:	dd00      	ble.n	4926 <__aeabi_dsub+0xe6>
    4924:	e0db      	b.n	4ade <__aeabi_dsub+0x29e>
    4926:	1b9e      	subs	r6, r3, r6
    4928:	1c73      	adds	r3, r6, #1
    492a:	2b1f      	cmp	r3, #31
    492c:	dd00      	ble.n	4930 <__aeabi_dsub+0xf0>
    492e:	e10a      	b.n	4b46 <__aeabi_dsub+0x306>
    4930:	2220      	movs	r2, #32
    4932:	0038      	movs	r0, r7
    4934:	1ad2      	subs	r2, r2, r3
    4936:	0029      	movs	r1, r5
    4938:	4097      	lsls	r7, r2
    493a:	002c      	movs	r4, r5
    493c:	4091      	lsls	r1, r2
    493e:	40d8      	lsrs	r0, r3
    4940:	1e7a      	subs	r2, r7, #1
    4942:	4197      	sbcs	r7, r2
    4944:	40dc      	lsrs	r4, r3
    4946:	2600      	movs	r6, #0
    4948:	4301      	orrs	r1, r0
    494a:	430f      	orrs	r7, r1
    494c:	077b      	lsls	r3, r7, #29
    494e:	d009      	beq.n	4964 <__aeabi_dsub+0x124>
    4950:	230f      	movs	r3, #15
    4952:	403b      	ands	r3, r7
    4954:	2b04      	cmp	r3, #4
    4956:	d005      	beq.n	4964 <__aeabi_dsub+0x124>
    4958:	1d3b      	adds	r3, r7, #4
    495a:	42bb      	cmp	r3, r7
    495c:	41bf      	sbcs	r7, r7
    495e:	427f      	negs	r7, r7
    4960:	19e4      	adds	r4, r4, r7
    4962:	001f      	movs	r7, r3
    4964:	0223      	lsls	r3, r4, #8
    4966:	d525      	bpl.n	49b4 <__aeabi_dsub+0x174>
    4968:	4b86      	ldr	r3, [pc, #536]	; (4b84 <__aeabi_dsub+0x344>)
    496a:	3601      	adds	r6, #1
    496c:	429e      	cmp	r6, r3
    496e:	d100      	bne.n	4972 <__aeabi_dsub+0x132>
    4970:	e0af      	b.n	4ad2 <__aeabi_dsub+0x292>
    4972:	4b85      	ldr	r3, [pc, #532]	; (4b88 <__aeabi_dsub+0x348>)
    4974:	2501      	movs	r5, #1
    4976:	401c      	ands	r4, r3
    4978:	4643      	mov	r3, r8
    497a:	0762      	lsls	r2, r4, #29
    497c:	08ff      	lsrs	r7, r7, #3
    497e:	0264      	lsls	r4, r4, #9
    4980:	0576      	lsls	r6, r6, #21
    4982:	4317      	orrs	r7, r2
    4984:	0b24      	lsrs	r4, r4, #12
    4986:	0d76      	lsrs	r6, r6, #21
    4988:	401d      	ands	r5, r3
    498a:	2100      	movs	r1, #0
    498c:	0324      	lsls	r4, r4, #12
    498e:	0b23      	lsrs	r3, r4, #12
    4990:	0d0c      	lsrs	r4, r1, #20
    4992:	4a7e      	ldr	r2, [pc, #504]	; (4b8c <__aeabi_dsub+0x34c>)
    4994:	0524      	lsls	r4, r4, #20
    4996:	431c      	orrs	r4, r3
    4998:	4014      	ands	r4, r2
    499a:	0533      	lsls	r3, r6, #20
    499c:	4323      	orrs	r3, r4
    499e:	005b      	lsls	r3, r3, #1
    49a0:	07ed      	lsls	r5, r5, #31
    49a2:	085b      	lsrs	r3, r3, #1
    49a4:	432b      	orrs	r3, r5
    49a6:	0038      	movs	r0, r7
    49a8:	0019      	movs	r1, r3
    49aa:	bc1c      	pop	{r2, r3, r4}
    49ac:	4690      	mov	r8, r2
    49ae:	4699      	mov	r9, r3
    49b0:	46a2      	mov	sl, r4
    49b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    49b4:	2501      	movs	r5, #1
    49b6:	4643      	mov	r3, r8
    49b8:	0762      	lsls	r2, r4, #29
    49ba:	08ff      	lsrs	r7, r7, #3
    49bc:	4317      	orrs	r7, r2
    49be:	08e4      	lsrs	r4, r4, #3
    49c0:	401d      	ands	r5, r3
    49c2:	4b70      	ldr	r3, [pc, #448]	; (4b84 <__aeabi_dsub+0x344>)
    49c4:	429e      	cmp	r6, r3
    49c6:	d036      	beq.n	4a36 <__aeabi_dsub+0x1f6>
    49c8:	0324      	lsls	r4, r4, #12
    49ca:	0576      	lsls	r6, r6, #21
    49cc:	0b24      	lsrs	r4, r4, #12
    49ce:	0d76      	lsrs	r6, r6, #21
    49d0:	e7db      	b.n	498a <__aeabi_dsub+0x14a>
    49d2:	4663      	mov	r3, ip
    49d4:	1af3      	subs	r3, r6, r3
    49d6:	2b00      	cmp	r3, #0
    49d8:	dc00      	bgt.n	49dc <__aeabi_dsub+0x19c>
    49da:	e094      	b.n	4b06 <__aeabi_dsub+0x2c6>
    49dc:	4660      	mov	r0, ip
    49de:	2800      	cmp	r0, #0
    49e0:	d035      	beq.n	4a4e <__aeabi_dsub+0x20e>
    49e2:	4868      	ldr	r0, [pc, #416]	; (4b84 <__aeabi_dsub+0x344>)
    49e4:	4286      	cmp	r6, r0
    49e6:	d0b1      	beq.n	494c <__aeabi_dsub+0x10c>
    49e8:	2780      	movs	r7, #128	; 0x80
    49ea:	043f      	lsls	r7, r7, #16
    49ec:	4339      	orrs	r1, r7
    49ee:	2b38      	cmp	r3, #56	; 0x38
    49f0:	dc00      	bgt.n	49f4 <__aeabi_dsub+0x1b4>
    49f2:	e0fd      	b.n	4bf0 <__aeabi_dsub+0x3b0>
    49f4:	430a      	orrs	r2, r1
    49f6:	0017      	movs	r7, r2
    49f8:	2100      	movs	r1, #0
    49fa:	1e7a      	subs	r2, r7, #1
    49fc:	4197      	sbcs	r7, r2
    49fe:	4457      	add	r7, sl
    4a00:	4557      	cmp	r7, sl
    4a02:	4180      	sbcs	r0, r0
    4a04:	1909      	adds	r1, r1, r4
    4a06:	4244      	negs	r4, r0
    4a08:	190c      	adds	r4, r1, r4
    4a0a:	0223      	lsls	r3, r4, #8
    4a0c:	d53a      	bpl.n	4a84 <__aeabi_dsub+0x244>
    4a0e:	4b5d      	ldr	r3, [pc, #372]	; (4b84 <__aeabi_dsub+0x344>)
    4a10:	3601      	adds	r6, #1
    4a12:	429e      	cmp	r6, r3
    4a14:	d100      	bne.n	4a18 <__aeabi_dsub+0x1d8>
    4a16:	e14b      	b.n	4cb0 <__aeabi_dsub+0x470>
    4a18:	2201      	movs	r2, #1
    4a1a:	4b5b      	ldr	r3, [pc, #364]	; (4b88 <__aeabi_dsub+0x348>)
    4a1c:	401c      	ands	r4, r3
    4a1e:	087b      	lsrs	r3, r7, #1
    4a20:	4017      	ands	r7, r2
    4a22:	431f      	orrs	r7, r3
    4a24:	07e2      	lsls	r2, r4, #31
    4a26:	4317      	orrs	r7, r2
    4a28:	0864      	lsrs	r4, r4, #1
    4a2a:	e78f      	b.n	494c <__aeabi_dsub+0x10c>
    4a2c:	0008      	movs	r0, r1
    4a2e:	4310      	orrs	r0, r2
    4a30:	d000      	beq.n	4a34 <__aeabi_dsub+0x1f4>
    4a32:	e724      	b.n	487e <__aeabi_dsub+0x3e>
    4a34:	e721      	b.n	487a <__aeabi_dsub+0x3a>
    4a36:	0023      	movs	r3, r4
    4a38:	433b      	orrs	r3, r7
    4a3a:	d100      	bne.n	4a3e <__aeabi_dsub+0x1fe>
    4a3c:	e1b9      	b.n	4db2 <__aeabi_dsub+0x572>
    4a3e:	2280      	movs	r2, #128	; 0x80
    4a40:	0312      	lsls	r2, r2, #12
    4a42:	4314      	orrs	r4, r2
    4a44:	0324      	lsls	r4, r4, #12
    4a46:	0b24      	lsrs	r4, r4, #12
    4a48:	e79f      	b.n	498a <__aeabi_dsub+0x14a>
    4a4a:	002e      	movs	r6, r5
    4a4c:	e77e      	b.n	494c <__aeabi_dsub+0x10c>
    4a4e:	0008      	movs	r0, r1
    4a50:	4310      	orrs	r0, r2
    4a52:	d100      	bne.n	4a56 <__aeabi_dsub+0x216>
    4a54:	e0ca      	b.n	4bec <__aeabi_dsub+0x3ac>
    4a56:	1e58      	subs	r0, r3, #1
    4a58:	4684      	mov	ip, r0
    4a5a:	2800      	cmp	r0, #0
    4a5c:	d000      	beq.n	4a60 <__aeabi_dsub+0x220>
    4a5e:	e0e7      	b.n	4c30 <__aeabi_dsub+0x3f0>
    4a60:	4452      	add	r2, sl
    4a62:	4552      	cmp	r2, sl
    4a64:	4180      	sbcs	r0, r0
    4a66:	1864      	adds	r4, r4, r1
    4a68:	4240      	negs	r0, r0
    4a6a:	1824      	adds	r4, r4, r0
    4a6c:	0017      	movs	r7, r2
    4a6e:	2601      	movs	r6, #1
    4a70:	0223      	lsls	r3, r4, #8
    4a72:	d507      	bpl.n	4a84 <__aeabi_dsub+0x244>
    4a74:	2602      	movs	r6, #2
    4a76:	e7cf      	b.n	4a18 <__aeabi_dsub+0x1d8>
    4a78:	4664      	mov	r4, ip
    4a7a:	432c      	orrs	r4, r5
    4a7c:	d100      	bne.n	4a80 <__aeabi_dsub+0x240>
    4a7e:	e1b3      	b.n	4de8 <__aeabi_dsub+0x5a8>
    4a80:	002c      	movs	r4, r5
    4a82:	4667      	mov	r7, ip
    4a84:	077b      	lsls	r3, r7, #29
    4a86:	d000      	beq.n	4a8a <__aeabi_dsub+0x24a>
    4a88:	e762      	b.n	4950 <__aeabi_dsub+0x110>
    4a8a:	0763      	lsls	r3, r4, #29
    4a8c:	08ff      	lsrs	r7, r7, #3
    4a8e:	431f      	orrs	r7, r3
    4a90:	2501      	movs	r5, #1
    4a92:	4643      	mov	r3, r8
    4a94:	08e4      	lsrs	r4, r4, #3
    4a96:	401d      	ands	r5, r3
    4a98:	e793      	b.n	49c2 <__aeabi_dsub+0x182>
    4a9a:	2d00      	cmp	r5, #0
    4a9c:	d178      	bne.n	4b90 <__aeabi_dsub+0x350>
    4a9e:	1c75      	adds	r5, r6, #1
    4aa0:	056d      	lsls	r5, r5, #21
    4aa2:	0d6d      	lsrs	r5, r5, #21
    4aa4:	2d01      	cmp	r5, #1
    4aa6:	dc00      	bgt.n	4aaa <__aeabi_dsub+0x26a>
    4aa8:	e0f2      	b.n	4c90 <__aeabi_dsub+0x450>
    4aaa:	4650      	mov	r0, sl
    4aac:	1a80      	subs	r0, r0, r2
    4aae:	4582      	cmp	sl, r0
    4ab0:	41bf      	sbcs	r7, r7
    4ab2:	1a65      	subs	r5, r4, r1
    4ab4:	427f      	negs	r7, r7
    4ab6:	1bed      	subs	r5, r5, r7
    4ab8:	4684      	mov	ip, r0
    4aba:	0228      	lsls	r0, r5, #8
    4abc:	d400      	bmi.n	4ac0 <__aeabi_dsub+0x280>
    4abe:	e08c      	b.n	4bda <__aeabi_dsub+0x39a>
    4ac0:	4650      	mov	r0, sl
    4ac2:	1a17      	subs	r7, r2, r0
    4ac4:	42ba      	cmp	r2, r7
    4ac6:	4192      	sbcs	r2, r2
    4ac8:	1b0c      	subs	r4, r1, r4
    4aca:	4255      	negs	r5, r2
    4acc:	1b65      	subs	r5, r4, r5
    4ace:	4698      	mov	r8, r3
    4ad0:	e714      	b.n	48fc <__aeabi_dsub+0xbc>
    4ad2:	2501      	movs	r5, #1
    4ad4:	4643      	mov	r3, r8
    4ad6:	2400      	movs	r4, #0
    4ad8:	401d      	ands	r5, r3
    4ada:	2700      	movs	r7, #0
    4adc:	e755      	b.n	498a <__aeabi_dsub+0x14a>
    4ade:	4c2a      	ldr	r4, [pc, #168]	; (4b88 <__aeabi_dsub+0x348>)
    4ae0:	1af6      	subs	r6, r6, r3
    4ae2:	402c      	ands	r4, r5
    4ae4:	e732      	b.n	494c <__aeabi_dsub+0x10c>
    4ae6:	003d      	movs	r5, r7
    4ae8:	3828      	subs	r0, #40	; 0x28
    4aea:	4085      	lsls	r5, r0
    4aec:	2700      	movs	r7, #0
    4aee:	e717      	b.n	4920 <__aeabi_dsub+0xe0>
    4af0:	0038      	movs	r0, r7
    4af2:	f7fe f857 	bl	2ba4 <__clzsi2>
    4af6:	3020      	adds	r0, #32
    4af8:	e706      	b.n	4908 <__aeabi_dsub+0xc8>
    4afa:	430a      	orrs	r2, r1
    4afc:	0017      	movs	r7, r2
    4afe:	2100      	movs	r1, #0
    4b00:	1e7a      	subs	r2, r7, #1
    4b02:	4197      	sbcs	r7, r2
    4b04:	e6ee      	b.n	48e4 <__aeabi_dsub+0xa4>
    4b06:	2b00      	cmp	r3, #0
    4b08:	d000      	beq.n	4b0c <__aeabi_dsub+0x2cc>
    4b0a:	e0e5      	b.n	4cd8 <__aeabi_dsub+0x498>
    4b0c:	1c73      	adds	r3, r6, #1
    4b0e:	469c      	mov	ip, r3
    4b10:	055b      	lsls	r3, r3, #21
    4b12:	0d5b      	lsrs	r3, r3, #21
    4b14:	2b01      	cmp	r3, #1
    4b16:	dc00      	bgt.n	4b1a <__aeabi_dsub+0x2da>
    4b18:	e09f      	b.n	4c5a <__aeabi_dsub+0x41a>
    4b1a:	4b1a      	ldr	r3, [pc, #104]	; (4b84 <__aeabi_dsub+0x344>)
    4b1c:	459c      	cmp	ip, r3
    4b1e:	d100      	bne.n	4b22 <__aeabi_dsub+0x2e2>
    4b20:	e0c5      	b.n	4cae <__aeabi_dsub+0x46e>
    4b22:	4452      	add	r2, sl
    4b24:	4552      	cmp	r2, sl
    4b26:	4180      	sbcs	r0, r0
    4b28:	1864      	adds	r4, r4, r1
    4b2a:	4240      	negs	r0, r0
    4b2c:	1824      	adds	r4, r4, r0
    4b2e:	07e7      	lsls	r7, r4, #31
    4b30:	0852      	lsrs	r2, r2, #1
    4b32:	4317      	orrs	r7, r2
    4b34:	0864      	lsrs	r4, r4, #1
    4b36:	4666      	mov	r6, ip
    4b38:	e708      	b.n	494c <__aeabi_dsub+0x10c>
    4b3a:	4812      	ldr	r0, [pc, #72]	; (4b84 <__aeabi_dsub+0x344>)
    4b3c:	4285      	cmp	r5, r0
    4b3e:	d100      	bne.n	4b42 <__aeabi_dsub+0x302>
    4b40:	e085      	b.n	4c4e <__aeabi_dsub+0x40e>
    4b42:	001d      	movs	r5, r3
    4b44:	e6bc      	b.n	48c0 <__aeabi_dsub+0x80>
    4b46:	0029      	movs	r1, r5
    4b48:	3e1f      	subs	r6, #31
    4b4a:	40f1      	lsrs	r1, r6
    4b4c:	2b20      	cmp	r3, #32
    4b4e:	d100      	bne.n	4b52 <__aeabi_dsub+0x312>
    4b50:	e07f      	b.n	4c52 <__aeabi_dsub+0x412>
    4b52:	2240      	movs	r2, #64	; 0x40
    4b54:	1ad3      	subs	r3, r2, r3
    4b56:	409d      	lsls	r5, r3
    4b58:	432f      	orrs	r7, r5
    4b5a:	1e7d      	subs	r5, r7, #1
    4b5c:	41af      	sbcs	r7, r5
    4b5e:	2400      	movs	r4, #0
    4b60:	430f      	orrs	r7, r1
    4b62:	2600      	movs	r6, #0
    4b64:	e78e      	b.n	4a84 <__aeabi_dsub+0x244>
    4b66:	002b      	movs	r3, r5
    4b68:	000f      	movs	r7, r1
    4b6a:	3b20      	subs	r3, #32
    4b6c:	40df      	lsrs	r7, r3
    4b6e:	2d20      	cmp	r5, #32
    4b70:	d071      	beq.n	4c56 <__aeabi_dsub+0x416>
    4b72:	2340      	movs	r3, #64	; 0x40
    4b74:	1b5d      	subs	r5, r3, r5
    4b76:	40a9      	lsls	r1, r5
    4b78:	430a      	orrs	r2, r1
    4b7a:	1e51      	subs	r1, r2, #1
    4b7c:	418a      	sbcs	r2, r1
    4b7e:	2100      	movs	r1, #0
    4b80:	4317      	orrs	r7, r2
    4b82:	e6af      	b.n	48e4 <__aeabi_dsub+0xa4>
    4b84:	000007ff 	.word	0x000007ff
    4b88:	ff7fffff 	.word	0xff7fffff
    4b8c:	800fffff 	.word	0x800fffff
    4b90:	2e00      	cmp	r6, #0
    4b92:	d03e      	beq.n	4c12 <__aeabi_dsub+0x3d2>
    4b94:	4eb3      	ldr	r6, [pc, #716]	; (4e64 <__aeabi_dsub+0x624>)
    4b96:	45b4      	cmp	ip, r6
    4b98:	d045      	beq.n	4c26 <__aeabi_dsub+0x3e6>
    4b9a:	2680      	movs	r6, #128	; 0x80
    4b9c:	0436      	lsls	r6, r6, #16
    4b9e:	426d      	negs	r5, r5
    4ba0:	4334      	orrs	r4, r6
    4ba2:	2d38      	cmp	r5, #56	; 0x38
    4ba4:	dd00      	ble.n	4ba8 <__aeabi_dsub+0x368>
    4ba6:	e0a8      	b.n	4cfa <__aeabi_dsub+0x4ba>
    4ba8:	2d1f      	cmp	r5, #31
    4baa:	dd00      	ble.n	4bae <__aeabi_dsub+0x36e>
    4bac:	e11f      	b.n	4dee <__aeabi_dsub+0x5ae>
    4bae:	2620      	movs	r6, #32
    4bb0:	0027      	movs	r7, r4
    4bb2:	4650      	mov	r0, sl
    4bb4:	1b76      	subs	r6, r6, r5
    4bb6:	40b7      	lsls	r7, r6
    4bb8:	40e8      	lsrs	r0, r5
    4bba:	4307      	orrs	r7, r0
    4bbc:	4650      	mov	r0, sl
    4bbe:	40b0      	lsls	r0, r6
    4bc0:	1e46      	subs	r6, r0, #1
    4bc2:	41b0      	sbcs	r0, r6
    4bc4:	40ec      	lsrs	r4, r5
    4bc6:	4338      	orrs	r0, r7
    4bc8:	1a17      	subs	r7, r2, r0
    4bca:	42ba      	cmp	r2, r7
    4bcc:	4192      	sbcs	r2, r2
    4bce:	1b0c      	subs	r4, r1, r4
    4bd0:	4252      	negs	r2, r2
    4bd2:	1aa4      	subs	r4, r4, r2
    4bd4:	4666      	mov	r6, ip
    4bd6:	4698      	mov	r8, r3
    4bd8:	e68b      	b.n	48f2 <__aeabi_dsub+0xb2>
    4bda:	4664      	mov	r4, ip
    4bdc:	4667      	mov	r7, ip
    4bde:	432c      	orrs	r4, r5
    4be0:	d000      	beq.n	4be4 <__aeabi_dsub+0x3a4>
    4be2:	e68b      	b.n	48fc <__aeabi_dsub+0xbc>
    4be4:	2500      	movs	r5, #0
    4be6:	2600      	movs	r6, #0
    4be8:	2700      	movs	r7, #0
    4bea:	e6ea      	b.n	49c2 <__aeabi_dsub+0x182>
    4bec:	001e      	movs	r6, r3
    4bee:	e6ad      	b.n	494c <__aeabi_dsub+0x10c>
    4bf0:	2b1f      	cmp	r3, #31
    4bf2:	dc60      	bgt.n	4cb6 <__aeabi_dsub+0x476>
    4bf4:	2720      	movs	r7, #32
    4bf6:	1af8      	subs	r0, r7, r3
    4bf8:	000f      	movs	r7, r1
    4bfa:	4684      	mov	ip, r0
    4bfc:	4087      	lsls	r7, r0
    4bfe:	0010      	movs	r0, r2
    4c00:	40d8      	lsrs	r0, r3
    4c02:	4307      	orrs	r7, r0
    4c04:	4660      	mov	r0, ip
    4c06:	4082      	lsls	r2, r0
    4c08:	1e50      	subs	r0, r2, #1
    4c0a:	4182      	sbcs	r2, r0
    4c0c:	40d9      	lsrs	r1, r3
    4c0e:	4317      	orrs	r7, r2
    4c10:	e6f5      	b.n	49fe <__aeabi_dsub+0x1be>
    4c12:	0026      	movs	r6, r4
    4c14:	4650      	mov	r0, sl
    4c16:	4306      	orrs	r6, r0
    4c18:	d005      	beq.n	4c26 <__aeabi_dsub+0x3e6>
    4c1a:	43ed      	mvns	r5, r5
    4c1c:	2d00      	cmp	r5, #0
    4c1e:	d0d3      	beq.n	4bc8 <__aeabi_dsub+0x388>
    4c20:	4e90      	ldr	r6, [pc, #576]	; (4e64 <__aeabi_dsub+0x624>)
    4c22:	45b4      	cmp	ip, r6
    4c24:	d1bd      	bne.n	4ba2 <__aeabi_dsub+0x362>
    4c26:	000c      	movs	r4, r1
    4c28:	0017      	movs	r7, r2
    4c2a:	4666      	mov	r6, ip
    4c2c:	4698      	mov	r8, r3
    4c2e:	e68d      	b.n	494c <__aeabi_dsub+0x10c>
    4c30:	488c      	ldr	r0, [pc, #560]	; (4e64 <__aeabi_dsub+0x624>)
    4c32:	4283      	cmp	r3, r0
    4c34:	d00b      	beq.n	4c4e <__aeabi_dsub+0x40e>
    4c36:	4663      	mov	r3, ip
    4c38:	e6d9      	b.n	49ee <__aeabi_dsub+0x1ae>
    4c3a:	2d00      	cmp	r5, #0
    4c3c:	d000      	beq.n	4c40 <__aeabi_dsub+0x400>
    4c3e:	e096      	b.n	4d6e <__aeabi_dsub+0x52e>
    4c40:	0008      	movs	r0, r1
    4c42:	4310      	orrs	r0, r2
    4c44:	d100      	bne.n	4c48 <__aeabi_dsub+0x408>
    4c46:	e0e2      	b.n	4e0e <__aeabi_dsub+0x5ce>
    4c48:	000c      	movs	r4, r1
    4c4a:	0017      	movs	r7, r2
    4c4c:	4698      	mov	r8, r3
    4c4e:	4e85      	ldr	r6, [pc, #532]	; (4e64 <__aeabi_dsub+0x624>)
    4c50:	e67c      	b.n	494c <__aeabi_dsub+0x10c>
    4c52:	2500      	movs	r5, #0
    4c54:	e780      	b.n	4b58 <__aeabi_dsub+0x318>
    4c56:	2100      	movs	r1, #0
    4c58:	e78e      	b.n	4b78 <__aeabi_dsub+0x338>
    4c5a:	0023      	movs	r3, r4
    4c5c:	4650      	mov	r0, sl
    4c5e:	4303      	orrs	r3, r0
    4c60:	2e00      	cmp	r6, #0
    4c62:	d000      	beq.n	4c66 <__aeabi_dsub+0x426>
    4c64:	e0a8      	b.n	4db8 <__aeabi_dsub+0x578>
    4c66:	2b00      	cmp	r3, #0
    4c68:	d100      	bne.n	4c6c <__aeabi_dsub+0x42c>
    4c6a:	e0de      	b.n	4e2a <__aeabi_dsub+0x5ea>
    4c6c:	000b      	movs	r3, r1
    4c6e:	4313      	orrs	r3, r2
    4c70:	d100      	bne.n	4c74 <__aeabi_dsub+0x434>
    4c72:	e66b      	b.n	494c <__aeabi_dsub+0x10c>
    4c74:	4452      	add	r2, sl
    4c76:	4552      	cmp	r2, sl
    4c78:	4180      	sbcs	r0, r0
    4c7a:	1864      	adds	r4, r4, r1
    4c7c:	4240      	negs	r0, r0
    4c7e:	1824      	adds	r4, r4, r0
    4c80:	0017      	movs	r7, r2
    4c82:	0223      	lsls	r3, r4, #8
    4c84:	d400      	bmi.n	4c88 <__aeabi_dsub+0x448>
    4c86:	e6fd      	b.n	4a84 <__aeabi_dsub+0x244>
    4c88:	4b77      	ldr	r3, [pc, #476]	; (4e68 <__aeabi_dsub+0x628>)
    4c8a:	4666      	mov	r6, ip
    4c8c:	401c      	ands	r4, r3
    4c8e:	e65d      	b.n	494c <__aeabi_dsub+0x10c>
    4c90:	0025      	movs	r5, r4
    4c92:	4650      	mov	r0, sl
    4c94:	4305      	orrs	r5, r0
    4c96:	2e00      	cmp	r6, #0
    4c98:	d1cf      	bne.n	4c3a <__aeabi_dsub+0x3fa>
    4c9a:	2d00      	cmp	r5, #0
    4c9c:	d14f      	bne.n	4d3e <__aeabi_dsub+0x4fe>
    4c9e:	000c      	movs	r4, r1
    4ca0:	4314      	orrs	r4, r2
    4ca2:	d100      	bne.n	4ca6 <__aeabi_dsub+0x466>
    4ca4:	e0a0      	b.n	4de8 <__aeabi_dsub+0x5a8>
    4ca6:	000c      	movs	r4, r1
    4ca8:	0017      	movs	r7, r2
    4caa:	4698      	mov	r8, r3
    4cac:	e64e      	b.n	494c <__aeabi_dsub+0x10c>
    4cae:	4666      	mov	r6, ip
    4cb0:	2400      	movs	r4, #0
    4cb2:	2700      	movs	r7, #0
    4cb4:	e685      	b.n	49c2 <__aeabi_dsub+0x182>
    4cb6:	001f      	movs	r7, r3
    4cb8:	0008      	movs	r0, r1
    4cba:	3f20      	subs	r7, #32
    4cbc:	40f8      	lsrs	r0, r7
    4cbe:	0007      	movs	r7, r0
    4cc0:	2b20      	cmp	r3, #32
    4cc2:	d100      	bne.n	4cc6 <__aeabi_dsub+0x486>
    4cc4:	e08e      	b.n	4de4 <__aeabi_dsub+0x5a4>
    4cc6:	2040      	movs	r0, #64	; 0x40
    4cc8:	1ac3      	subs	r3, r0, r3
    4cca:	4099      	lsls	r1, r3
    4ccc:	430a      	orrs	r2, r1
    4cce:	1e51      	subs	r1, r2, #1
    4cd0:	418a      	sbcs	r2, r1
    4cd2:	2100      	movs	r1, #0
    4cd4:	4317      	orrs	r7, r2
    4cd6:	e692      	b.n	49fe <__aeabi_dsub+0x1be>
    4cd8:	2e00      	cmp	r6, #0
    4cda:	d114      	bne.n	4d06 <__aeabi_dsub+0x4c6>
    4cdc:	0026      	movs	r6, r4
    4cde:	4650      	mov	r0, sl
    4ce0:	4306      	orrs	r6, r0
    4ce2:	d062      	beq.n	4daa <__aeabi_dsub+0x56a>
    4ce4:	43db      	mvns	r3, r3
    4ce6:	2b00      	cmp	r3, #0
    4ce8:	d15c      	bne.n	4da4 <__aeabi_dsub+0x564>
    4cea:	1887      	adds	r7, r0, r2
    4cec:	4297      	cmp	r7, r2
    4cee:	4192      	sbcs	r2, r2
    4cf0:	1864      	adds	r4, r4, r1
    4cf2:	4252      	negs	r2, r2
    4cf4:	18a4      	adds	r4, r4, r2
    4cf6:	4666      	mov	r6, ip
    4cf8:	e687      	b.n	4a0a <__aeabi_dsub+0x1ca>
    4cfa:	4650      	mov	r0, sl
    4cfc:	4320      	orrs	r0, r4
    4cfe:	1e44      	subs	r4, r0, #1
    4d00:	41a0      	sbcs	r0, r4
    4d02:	2400      	movs	r4, #0
    4d04:	e760      	b.n	4bc8 <__aeabi_dsub+0x388>
    4d06:	4e57      	ldr	r6, [pc, #348]	; (4e64 <__aeabi_dsub+0x624>)
    4d08:	45b4      	cmp	ip, r6
    4d0a:	d04e      	beq.n	4daa <__aeabi_dsub+0x56a>
    4d0c:	2680      	movs	r6, #128	; 0x80
    4d0e:	0436      	lsls	r6, r6, #16
    4d10:	425b      	negs	r3, r3
    4d12:	4334      	orrs	r4, r6
    4d14:	2b38      	cmp	r3, #56	; 0x38
    4d16:	dd00      	ble.n	4d1a <__aeabi_dsub+0x4da>
    4d18:	e07f      	b.n	4e1a <__aeabi_dsub+0x5da>
    4d1a:	2b1f      	cmp	r3, #31
    4d1c:	dd00      	ble.n	4d20 <__aeabi_dsub+0x4e0>
    4d1e:	e08b      	b.n	4e38 <__aeabi_dsub+0x5f8>
    4d20:	2620      	movs	r6, #32
    4d22:	0027      	movs	r7, r4
    4d24:	4650      	mov	r0, sl
    4d26:	1af6      	subs	r6, r6, r3
    4d28:	40b7      	lsls	r7, r6
    4d2a:	40d8      	lsrs	r0, r3
    4d2c:	4307      	orrs	r7, r0
    4d2e:	4650      	mov	r0, sl
    4d30:	40b0      	lsls	r0, r6
    4d32:	1e46      	subs	r6, r0, #1
    4d34:	41b0      	sbcs	r0, r6
    4d36:	4307      	orrs	r7, r0
    4d38:	40dc      	lsrs	r4, r3
    4d3a:	18bf      	adds	r7, r7, r2
    4d3c:	e7d6      	b.n	4cec <__aeabi_dsub+0x4ac>
    4d3e:	000d      	movs	r5, r1
    4d40:	4315      	orrs	r5, r2
    4d42:	d100      	bne.n	4d46 <__aeabi_dsub+0x506>
    4d44:	e602      	b.n	494c <__aeabi_dsub+0x10c>
    4d46:	4650      	mov	r0, sl
    4d48:	1a80      	subs	r0, r0, r2
    4d4a:	4582      	cmp	sl, r0
    4d4c:	41bf      	sbcs	r7, r7
    4d4e:	1a65      	subs	r5, r4, r1
    4d50:	427f      	negs	r7, r7
    4d52:	1bed      	subs	r5, r5, r7
    4d54:	4684      	mov	ip, r0
    4d56:	0228      	lsls	r0, r5, #8
    4d58:	d400      	bmi.n	4d5c <__aeabi_dsub+0x51c>
    4d5a:	e68d      	b.n	4a78 <__aeabi_dsub+0x238>
    4d5c:	4650      	mov	r0, sl
    4d5e:	1a17      	subs	r7, r2, r0
    4d60:	42ba      	cmp	r2, r7
    4d62:	4192      	sbcs	r2, r2
    4d64:	1b0c      	subs	r4, r1, r4
    4d66:	4252      	negs	r2, r2
    4d68:	1aa4      	subs	r4, r4, r2
    4d6a:	4698      	mov	r8, r3
    4d6c:	e5ee      	b.n	494c <__aeabi_dsub+0x10c>
    4d6e:	000d      	movs	r5, r1
    4d70:	4315      	orrs	r5, r2
    4d72:	d100      	bne.n	4d76 <__aeabi_dsub+0x536>
    4d74:	e76b      	b.n	4c4e <__aeabi_dsub+0x40e>
    4d76:	4650      	mov	r0, sl
    4d78:	0767      	lsls	r7, r4, #29
    4d7a:	08c0      	lsrs	r0, r0, #3
    4d7c:	4307      	orrs	r7, r0
    4d7e:	2080      	movs	r0, #128	; 0x80
    4d80:	08e4      	lsrs	r4, r4, #3
    4d82:	0300      	lsls	r0, r0, #12
    4d84:	4204      	tst	r4, r0
    4d86:	d007      	beq.n	4d98 <__aeabi_dsub+0x558>
    4d88:	08cd      	lsrs	r5, r1, #3
    4d8a:	4205      	tst	r5, r0
    4d8c:	d104      	bne.n	4d98 <__aeabi_dsub+0x558>
    4d8e:	002c      	movs	r4, r5
    4d90:	4698      	mov	r8, r3
    4d92:	08d7      	lsrs	r7, r2, #3
    4d94:	0749      	lsls	r1, r1, #29
    4d96:	430f      	orrs	r7, r1
    4d98:	0f7b      	lsrs	r3, r7, #29
    4d9a:	00e4      	lsls	r4, r4, #3
    4d9c:	431c      	orrs	r4, r3
    4d9e:	00ff      	lsls	r7, r7, #3
    4da0:	4e30      	ldr	r6, [pc, #192]	; (4e64 <__aeabi_dsub+0x624>)
    4da2:	e5d3      	b.n	494c <__aeabi_dsub+0x10c>
    4da4:	4e2f      	ldr	r6, [pc, #188]	; (4e64 <__aeabi_dsub+0x624>)
    4da6:	45b4      	cmp	ip, r6
    4da8:	d1b4      	bne.n	4d14 <__aeabi_dsub+0x4d4>
    4daa:	000c      	movs	r4, r1
    4dac:	0017      	movs	r7, r2
    4dae:	4666      	mov	r6, ip
    4db0:	e5cc      	b.n	494c <__aeabi_dsub+0x10c>
    4db2:	2700      	movs	r7, #0
    4db4:	2400      	movs	r4, #0
    4db6:	e5e8      	b.n	498a <__aeabi_dsub+0x14a>
    4db8:	2b00      	cmp	r3, #0
    4dba:	d039      	beq.n	4e30 <__aeabi_dsub+0x5f0>
    4dbc:	000b      	movs	r3, r1
    4dbe:	4313      	orrs	r3, r2
    4dc0:	d100      	bne.n	4dc4 <__aeabi_dsub+0x584>
    4dc2:	e744      	b.n	4c4e <__aeabi_dsub+0x40e>
    4dc4:	08c0      	lsrs	r0, r0, #3
    4dc6:	0767      	lsls	r7, r4, #29
    4dc8:	4307      	orrs	r7, r0
    4dca:	2080      	movs	r0, #128	; 0x80
    4dcc:	08e4      	lsrs	r4, r4, #3
    4dce:	0300      	lsls	r0, r0, #12
    4dd0:	4204      	tst	r4, r0
    4dd2:	d0e1      	beq.n	4d98 <__aeabi_dsub+0x558>
    4dd4:	08cb      	lsrs	r3, r1, #3
    4dd6:	4203      	tst	r3, r0
    4dd8:	d1de      	bne.n	4d98 <__aeabi_dsub+0x558>
    4dda:	08d7      	lsrs	r7, r2, #3
    4ddc:	0749      	lsls	r1, r1, #29
    4dde:	430f      	orrs	r7, r1
    4de0:	001c      	movs	r4, r3
    4de2:	e7d9      	b.n	4d98 <__aeabi_dsub+0x558>
    4de4:	2100      	movs	r1, #0
    4de6:	e771      	b.n	4ccc <__aeabi_dsub+0x48c>
    4de8:	2500      	movs	r5, #0
    4dea:	2700      	movs	r7, #0
    4dec:	e5e9      	b.n	49c2 <__aeabi_dsub+0x182>
    4dee:	002e      	movs	r6, r5
    4df0:	0027      	movs	r7, r4
    4df2:	3e20      	subs	r6, #32
    4df4:	40f7      	lsrs	r7, r6
    4df6:	2d20      	cmp	r5, #32
    4df8:	d02f      	beq.n	4e5a <__aeabi_dsub+0x61a>
    4dfa:	2640      	movs	r6, #64	; 0x40
    4dfc:	1b75      	subs	r5, r6, r5
    4dfe:	40ac      	lsls	r4, r5
    4e00:	4650      	mov	r0, sl
    4e02:	4320      	orrs	r0, r4
    4e04:	1e44      	subs	r4, r0, #1
    4e06:	41a0      	sbcs	r0, r4
    4e08:	2400      	movs	r4, #0
    4e0a:	4338      	orrs	r0, r7
    4e0c:	e6dc      	b.n	4bc8 <__aeabi_dsub+0x388>
    4e0e:	2480      	movs	r4, #128	; 0x80
    4e10:	2500      	movs	r5, #0
    4e12:	0324      	lsls	r4, r4, #12
    4e14:	4e13      	ldr	r6, [pc, #76]	; (4e64 <__aeabi_dsub+0x624>)
    4e16:	2700      	movs	r7, #0
    4e18:	e5d3      	b.n	49c2 <__aeabi_dsub+0x182>
    4e1a:	4650      	mov	r0, sl
    4e1c:	4320      	orrs	r0, r4
    4e1e:	0007      	movs	r7, r0
    4e20:	1e78      	subs	r0, r7, #1
    4e22:	4187      	sbcs	r7, r0
    4e24:	2400      	movs	r4, #0
    4e26:	18bf      	adds	r7, r7, r2
    4e28:	e760      	b.n	4cec <__aeabi_dsub+0x4ac>
    4e2a:	000c      	movs	r4, r1
    4e2c:	0017      	movs	r7, r2
    4e2e:	e58d      	b.n	494c <__aeabi_dsub+0x10c>
    4e30:	000c      	movs	r4, r1
    4e32:	0017      	movs	r7, r2
    4e34:	4e0b      	ldr	r6, [pc, #44]	; (4e64 <__aeabi_dsub+0x624>)
    4e36:	e589      	b.n	494c <__aeabi_dsub+0x10c>
    4e38:	001e      	movs	r6, r3
    4e3a:	0027      	movs	r7, r4
    4e3c:	3e20      	subs	r6, #32
    4e3e:	40f7      	lsrs	r7, r6
    4e40:	2b20      	cmp	r3, #32
    4e42:	d00c      	beq.n	4e5e <__aeabi_dsub+0x61e>
    4e44:	2640      	movs	r6, #64	; 0x40
    4e46:	1af3      	subs	r3, r6, r3
    4e48:	409c      	lsls	r4, r3
    4e4a:	4650      	mov	r0, sl
    4e4c:	4320      	orrs	r0, r4
    4e4e:	1e44      	subs	r4, r0, #1
    4e50:	41a0      	sbcs	r0, r4
    4e52:	4307      	orrs	r7, r0
    4e54:	2400      	movs	r4, #0
    4e56:	18bf      	adds	r7, r7, r2
    4e58:	e748      	b.n	4cec <__aeabi_dsub+0x4ac>
    4e5a:	2400      	movs	r4, #0
    4e5c:	e7d0      	b.n	4e00 <__aeabi_dsub+0x5c0>
    4e5e:	2400      	movs	r4, #0
    4e60:	e7f3      	b.n	4e4a <__aeabi_dsub+0x60a>
    4e62:	46c0      	nop			; (mov r8, r8)
    4e64:	000007ff 	.word	0x000007ff
    4e68:	ff7fffff 	.word	0xff7fffff

00004e6c <__aeabi_ui2d>:
    4e6c:	b510      	push	{r4, lr}
    4e6e:	1e04      	subs	r4, r0, #0
    4e70:	d028      	beq.n	4ec4 <__aeabi_ui2d+0x58>
    4e72:	f7fd fe97 	bl	2ba4 <__clzsi2>
    4e76:	4b15      	ldr	r3, [pc, #84]	; (4ecc <__aeabi_ui2d+0x60>)
    4e78:	4a15      	ldr	r2, [pc, #84]	; (4ed0 <__aeabi_ui2d+0x64>)
    4e7a:	1a1b      	subs	r3, r3, r0
    4e7c:	1ad2      	subs	r2, r2, r3
    4e7e:	2a1f      	cmp	r2, #31
    4e80:	dd15      	ble.n	4eae <__aeabi_ui2d+0x42>
    4e82:	4a14      	ldr	r2, [pc, #80]	; (4ed4 <__aeabi_ui2d+0x68>)
    4e84:	1ad2      	subs	r2, r2, r3
    4e86:	4094      	lsls	r4, r2
    4e88:	2200      	movs	r2, #0
    4e8a:	0324      	lsls	r4, r4, #12
    4e8c:	055b      	lsls	r3, r3, #21
    4e8e:	0b24      	lsrs	r4, r4, #12
    4e90:	0d5b      	lsrs	r3, r3, #21
    4e92:	2100      	movs	r1, #0
    4e94:	0010      	movs	r0, r2
    4e96:	0324      	lsls	r4, r4, #12
    4e98:	0d0a      	lsrs	r2, r1, #20
    4e9a:	0b24      	lsrs	r4, r4, #12
    4e9c:	0512      	lsls	r2, r2, #20
    4e9e:	4322      	orrs	r2, r4
    4ea0:	4c0d      	ldr	r4, [pc, #52]	; (4ed8 <__aeabi_ui2d+0x6c>)
    4ea2:	051b      	lsls	r3, r3, #20
    4ea4:	4022      	ands	r2, r4
    4ea6:	4313      	orrs	r3, r2
    4ea8:	005b      	lsls	r3, r3, #1
    4eaa:	0859      	lsrs	r1, r3, #1
    4eac:	bd10      	pop	{r4, pc}
    4eae:	0021      	movs	r1, r4
    4eb0:	4091      	lsls	r1, r2
    4eb2:	000a      	movs	r2, r1
    4eb4:	210b      	movs	r1, #11
    4eb6:	1a08      	subs	r0, r1, r0
    4eb8:	40c4      	lsrs	r4, r0
    4eba:	055b      	lsls	r3, r3, #21
    4ebc:	0324      	lsls	r4, r4, #12
    4ebe:	0b24      	lsrs	r4, r4, #12
    4ec0:	0d5b      	lsrs	r3, r3, #21
    4ec2:	e7e6      	b.n	4e92 <__aeabi_ui2d+0x26>
    4ec4:	2300      	movs	r3, #0
    4ec6:	2400      	movs	r4, #0
    4ec8:	2200      	movs	r2, #0
    4eca:	e7e2      	b.n	4e92 <__aeabi_ui2d+0x26>
    4ecc:	0000041e 	.word	0x0000041e
    4ed0:	00000433 	.word	0x00000433
    4ed4:	00000413 	.word	0x00000413
    4ed8:	800fffff 	.word	0x800fffff
    4edc:	42000800 	.word	0x42000800
    4ee0:	42000c00 	.word	0x42000c00
    4ee4:	42001000 	.word	0x42001000
    4ee8:	42001400 	.word	0x42001400
    4eec:	42001800 	.word	0x42001800
    4ef0:	42001c00 	.word	0x42001c00
    4ef4:	00000c02 	.word	0x00000c02
    4ef8:	00000bfe 	.word	0x00000bfe
    4efc:	00000bfe 	.word	0x00000bfe
    4f00:	00000c64 	.word	0x00000c64
    4f04:	00000c64 	.word	0x00000c64
    4f08:	00000c16 	.word	0x00000c16
    4f0c:	00000c08 	.word	0x00000c08
    4f10:	00000c1c 	.word	0x00000c1c
    4f14:	00000c52 	.word	0x00000c52
    4f18:	00000cec 	.word	0x00000cec
    4f1c:	00000ccc 	.word	0x00000ccc
    4f20:	00000ccc 	.word	0x00000ccc
    4f24:	00000d58 	.word	0x00000d58
    4f28:	00000cde 	.word	0x00000cde
    4f2c:	00000cfa 	.word	0x00000cfa
    4f30:	00000cd0 	.word	0x00000cd0
    4f34:	00000d08 	.word	0x00000d08
    4f38:	00000d48 	.word	0x00000d48
    4f3c:	75702020 	.word	0x75702020
    4f40:	2065736c 	.word	0x2065736c
    4f44:	00000009 	.word	0x00000009
    4f48:	7a4f2020 	.word	0x7a4f2020
    4f4c:	6e696d2f 	.word	0x6e696d2f
    4f50:	000a0d20 	.word	0x000a0d20
    4f54:	00001f90 	.word	0x00001f90
    4f58:	00001f72 	.word	0x00001f72
    4f5c:	00001f2c 	.word	0x00001f2c
    4f60:	00001e4a 	.word	0x00001e4a
    4f64:	00001f2c 	.word	0x00001f2c
    4f68:	00001f64 	.word	0x00001f64
    4f6c:	00001f2c 	.word	0x00001f2c
    4f70:	00001e4a 	.word	0x00001e4a
    4f74:	00001f72 	.word	0x00001f72
    4f78:	00001f72 	.word	0x00001f72
    4f7c:	00001f64 	.word	0x00001f64
    4f80:	00001e4a 	.word	0x00001e4a
    4f84:	00001e42 	.word	0x00001e42
    4f88:	00001e42 	.word	0x00001e42
    4f8c:	00001e42 	.word	0x00001e42
    4f90:	000021a8 	.word	0x000021a8
    4f94:	000025f0 	.word	0x000025f0
    4f98:	000024b0 	.word	0x000024b0
    4f9c:	000024b0 	.word	0x000024b0
    4fa0:	000024ac 	.word	0x000024ac
    4fa4:	000025c8 	.word	0x000025c8
    4fa8:	000025c8 	.word	0x000025c8
    4fac:	000025ba 	.word	0x000025ba
    4fb0:	000024ac 	.word	0x000024ac
    4fb4:	000025c8 	.word	0x000025c8
    4fb8:	000025ba 	.word	0x000025ba
    4fbc:	000025c8 	.word	0x000025c8
    4fc0:	000024ac 	.word	0x000024ac
    4fc4:	000025d0 	.word	0x000025d0
    4fc8:	000025d0 	.word	0x000025d0
    4fcc:	000025d0 	.word	0x000025d0
    4fd0:	000027d4 	.word	0x000027d4
    4fd4:	33323130 	.word	0x33323130
    4fd8:	37363534 	.word	0x37363534
    4fdc:	62613938 	.word	0x62613938
    4fe0:	66656463 	.word	0x66656463
    4fe4:	6a696867 	.word	0x6a696867
    4fe8:	6e6d6c6b 	.word	0x6e6d6c6b
    4fec:	7271706f 	.word	0x7271706f
    4ff0:	76757473 	.word	0x76757473
    4ff4:	7a797877 	.word	0x7a797877
	...

00005000 <__mprec_bigtens>:
    5000:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    5010:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    5020:	7f73bf3c 75154fdd                       <.s..O.u

00005028 <__mprec_tens>:
    5028:	00000000 3ff00000 00000000 40240000     .......?......$@
    5038:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    5048:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    5058:	00000000 412e8480 00000000 416312d0     .......A......cA
    5068:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    5078:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    5088:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    5098:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    50a8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    50b8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    50c8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    50d8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    50e8:	79d99db4 44ea7843                       ...yCx.D

000050f0 <p05.6047>:
    50f0:	00000005 00000019 0000007d 69666e49     ........}...Infi
    5100:	7974696e 4e614e00 00003000              nity.NaN.0..

0000510c <_init>:
    510c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    510e:	46c0      	nop			; (mov r8, r8)
    5110:	bcf8      	pop	{r3, r4, r5, r6, r7}
    5112:	bc08      	pop	{r3}
    5114:	469e      	mov	lr, r3
    5116:	4770      	bx	lr

00005118 <__init_array_start>:
    5118:	000000dd 	.word	0x000000dd

0000511c <_fini>:
    511c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    511e:	46c0      	nop			; (mov r8, r8)
    5120:	bcf8      	pop	{r3, r4, r5, r6, r7}
    5122:	bc08      	pop	{r3}
    5124:	469e      	mov	lr, r3
    5126:	4770      	bx	lr

00005128 <__fini_array_start>:
    5128:	000000b5 	.word	0x000000b5
